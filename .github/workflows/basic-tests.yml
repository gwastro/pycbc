name: basic tests

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 60
      matrix:
        os: [ubuntu-22.04]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        test-type: [unittest, search, docs]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: installing system packages
      run: |
        sudo apt-get -o Acquire::Retries=3 update
        sudo apt-get -o Acquire::Retries=3 install *fftw3* mpi intel-mkl* graphviz
        pip install tox pip setuptools --upgrade
    - name: Cache LAL auxiliary data files
      id: cache-lal-aux-data
      uses: actions/cache@v4
      with:
        key: lal-aux-data
        path: ~/lal_aux_data
    - if: ${{ steps.cache-lal-aux-data.outputs.cache-hit != 'true' }}
      name: Download LAL auxiliary data files
      run: |
        mkdir ~/lal_aux_data
        pushd ~/lal_aux_data
        curl --show-error --silent \
          --remote-name https://zenodo.org/records/14999310/files/SEOBNRv4ROM_v2.0.hdf5 \
          --remote-name https://zenodo.org/records/14999310/files/SEOBNRv4ROM_v3.0.hdf5
        popd
    - name: run pycbc test suite
      run: |
        export LAL_DATA_PATH=$HOME/lal_aux_data
        tox -e py-${{matrix.test-type}}
    - name: check help messages work
      if: matrix.test-type == 'unittest'
      run: |
        export LAL_DATA_PATH=$HOME/lal_aux_data
        tox -e py-help
    - name: run inference tests
      if: matrix.test-type == 'search'
      run: |
        export LAL_DATA_PATH=$HOME/lal_aux_data
        tox -e py-inference
    - name: store documentation page
      if: matrix.test-type == 'docs' && matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: documentation-page
        path: _gh-pages
  deploy_documentation:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
    - name: retrieve built documentation
      uses: actions/download-artifact@v4.1.7
      with:
        name: documentation-page
    - name: debug
      run: |
        mkdir _gh-pages
        mv latest _gh-pages
    - name: deploying to gh-pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: _gh-pages
        SINGLE_COMMIT: true
