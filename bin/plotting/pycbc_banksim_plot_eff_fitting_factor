#!/usr/bin/env python
# Copyright (C) 2016 Ian Harry
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
""" Plot effective fitting factor from a bunch of point-source files.
"""

import sys
import h5py
import argparse
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt

from pycbc import version
from pycbc import results

parser = argparse.ArgumentParser(usage='',
    description="Plot effective fitting factor vs mass1 and mass2.")
parser.add_argument('--input-files', nargs='+', default=None, required=True,
                    help="List of input files.")
parser.add_argument('--output-file', default=None, required=True,
                    help="Output file.")
 
opt = parser.parse_args()

m1 = []
m2 = []
eff_ff = []
for file_name in opt.input_files:
    curr_fp = h5py.File(file_name, 'r')
    m1.append(curr_fp['inj_params/mass1'][0])
    m2.append(curr_fp['inj_params/mass2'][0])
    eff_ff.append(curr_fp['eff_fitting_factor'][()])
    curr_fp.close()

fig = plt.figure()
ax = fig.gca()
try:
    cmap = plt.get_cmap('viridis')
except ValueError:
    from pycbc.future import cmaps
    cmap = cmaps['viridis']

sctr = ax.scatter(m1, m2, c=eff_ff, cmap=cmap, edgecolors='none', marker='o',
                  s=40)
cb = fig.colorbar(sctr)
cb.set_label("Effective fitting factor")
ax.set_xlabel('Mass 1 (solar masses)')
ax.set_ylabel('Mass 2 (solar masses)')
ax.grid()
caption="FILL THIS IN"
title="FILL THIS IN"

fig_kwds = {}
if '.png' in opt.output_file:
    fig_kwds['dpi'] = 200

results.save_fig_with_metadata(fig, opt.output_file,
                               fig_kwds=fig_kwds, title=title,
                               cmd=' '.join(sys.argv), caption=caption)
