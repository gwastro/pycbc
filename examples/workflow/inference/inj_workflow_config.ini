[workflow]
; basic information used by the workflow generator
file-retention-level = all_triggers
h1-channel-name = H1:LOSC-STRAIN
l1-channel-name = L1:LOSC-STRAIN
start-time = 1126259452
end-time = 1126259468


[workflow-ifos]
; the IFOs to analyze
h1 =
l1 =

[workflow-inference]
; how the workflow generator should setup inference nodes
num-injections = 100
data-seconds-before-trigger = 6
data-seconds-after-trigger = 2
pp-plot-parameters = '"primary_mass(mass1,mass2):mass1"'
                     '"secondary_mass(mass1,mass2):mass2"'
                     '"primary_spin(mass1,mass2,spin1_a,spin2_a):spin1_a"'
                     '"primary_spin(mass1,mass2,spin1_azimuthal,spin2_azimuthal):spin1_azimuthal"'
                     '"primary_spin(mass1,mass2,spin1_polar,spin2_polar):spin1_polar"'
                     '"secondary_spin(mass1,mass2,spin1_a,spin2_a):spin2_a"'
                     '"secondary_spin(mass1,mass2,spin1_azimuthal,spin2_azimuthal):spin2_azimuthal"'
                     '"secondary_spin(mass1,mass2,spin1_polar,spin2_polar):spin2_polar"'
                     ra dec polarization distance inclination tc
plot-group-intrinsic = '"primary_mass(mass1,mass2):mass1"'
                     '"secondary_mass(mass1,mass2):mass2"'
                     '"primary_spin(mass1,mass2,spin1_a,spin2_a):spin1_a"'
                     '"primary_spin(mass1,mass2,spin1_azimuthal,spin2_azimuthal):spin1_azimuthal"'
                     '"primary_spin(mass1,mass2,spin1_polar,spin2_polar):spin1_polar"'
                     '"secondary_spin(mass1,mass2,spin1_a,spin2_a):spin2_a"'
                     '"secondary_spin(mass1,mass2,spin1_azimuthal,spin2_azimuthal):spin2_azimuthal"'
                     '"secondary_spin(mass1,mass2,spin1_polar,spin2_polar):spin2_polar"'
plot-group-extrinsic = ra dec polarization distance inclination tc
plot-group-masses = '"primary_mass(mass1,mass2):mass1"' '"secondary_mass(mass1,mass2):mass2"' mchirp q
plot-group-spins = chi_p chi_eff q

[executables]
; paths to executables to use in workflow
create_injections = ${which:pycbc_create_injections}
inference = ${which:run_pycbc_inference} 
inference_intervals = ${which:pycbc_inference_plot_inj_intervals}
inference_posterior = ${which:pycbc_inference_plot_posterior}
inference_rate = ${which:pycbc_inference_plot_acceptance_rate}
inference_recovery = ${which:pycbc_inference_plot_inj_recovery}
inference_samples = ${which:pycbc_inference_plot_samples}
inference_table = ${which:pycbc_inference_table_summary}
results_page = ${which:pycbc_make_html_page}

[datafind]
; datafind options
urltype = file

[create_injections]
; command line options use --help for more information
ninjections = 1
dist-section = prior
variable-params-section = variable_params
static-args-section = static_params

[inference]
; command line options use --help for more information
processing-scheme = cpu
nprocesses = 14
psd-inverse-length = 4
psd-estimation = median-mean
psd-segment-length = 4
psd-segment-stride = 2
; we'll use 512s centered on the central trigger time to estimate
; the PSD
psd-start-time = 1126259206
psd-end-time = 1126259718
fake-strain = H1:aLIGOZeroDetHighPower L1:aLIGOZeroDetHighPower
pad-data = 8
strain-high-pass = 15
sample-rate = 2048
low-frequency-cutoff = 20
verbose =

[pegasus_profile-inference]
; pegasus profile for inference nodes
condor|request_memory = 20G
condor|request_cpus = ${inference|nprocesses}
dagman|retry = 2

[inference_intervals]
; command line options use --help for more information

[inference_posterior]
; command line options use --help for more information
plot-scatter =
plot-contours =
plot-marginal =
z-arg = snr
plot-injection-parameters =
dpi = 100

[inference_rate]
; command line options use --help for more information

[inference_recovery]
; command line options use --help for more information

[inference_samples]
; command line options use --help for more information

[inference_table]
; command line options use --help for more information

[results_page]
; command line options use --help for more information
analysis-title = "PyCBC Inference PP Test"
