[model]
name = hierarchical
submodels = event1 event2

# Now we need to set the parameters for each submodel's model.
# Note that we can use FROM_INJECTION for several parameters in both events.
# This is because FROM_INJECTION parameters are not replaced until a model
# is initalized. When the sub-models are initialized, each event's model
# section (and any other section associated with that event, such as data) are
# passed to it, and nothing else. Each model therefore only knows about the
# injection file specified in its own data section, and so will only pull
# values from the injection it knows about.
[event1__model]
name = relative
low-frequency-cutoff = 18.0
high-frequency-cutoff = 1024.0
epsilon = 0.005
mass1_ref = 35
mass2_ref = 35
tc_ref = FROM_INJECTION:tc
ra_ref = FROM_INJECTION:ra
dec_ref = FROM_INJECTION:dec

[event2__model]
name = relative
# We can use refer to the parameters set in event1's model section to make them
# be the same. This is because config file variables (things that are ${param})
# are replaced as soon as the config file is loaded
# by the hierarchical model. The relevant sections are then passed to the
# underlying model. Contrast this to FROM_INJECTION references, which are not
# replaced until the model is initialized, which happens after the config file
# is loaded.
low-frequency-cutoff = ${event1__model|low-frequency-cutoff}
high-frequency-cutoff = ${event1__model|high-frequency-cutoff}
epsilon = ${event1__model|epsilon}
mass1_ref = ${event1__model|mass1_ref}
mass2_ref = ${event1__model|mass2_ref}
tc_ref = FROM_INJECTION:tc
ra_ref = FROM_INJECTION:ra
dec_ref = FROM_INJECTION:dec

