[tox]
recreate = true
envlist = py-unittest
indexserver =
    preinstall = https://pypi.python.org/simple
requires=tox-conda 
         setuptools

[base]
deps =
    :preinstall: -rrequirements.txt
    -rcompanion.txt
    mkl;'arm' not in platform_machine

[testenv]
allowlist_externals =
    bash
    conda
passenv=LAL_DATA_PATH
conda_deps=openssl
conda_channels=conda-forge
platform = lin: linux
           mac: darwin

# This test should run on almost anybody's environment
[testenv:py-unittest]
deps =
    {[base]deps}
    pytest
    ; Needed for `BBHx` package to work with PyCBC
    git+https://github.com/titodalcanton/BBHx.git@py39-and-cleanup; sys_platform == 'linux'
    git+https://github.com/gwastro/BBHX-waveform-model.git; sys_platform == 'linux'
conda_deps =
    c-compiler
    cxx-compiler
    gsl
    mysqlclient
    ; these packages don't install cleanly with pip, conda has patches
    ligo-segments
    python-ligo-lw
    ; for BBHx
    liblapacke
    openblas
conda_channels = conda-forge
commands_pre =
    conda list
commands = pytest

# The following are long running or may require
# some extra system-level dependencies or static files.
# See github action workflow.
[testenv:py-help]
deps =
    {[base]deps}
    mpi4py
setenv = PYCBC_TEST_TYPE=help
commands = bash tools/pycbc_test_suite.sh

[testenv:py-search]
deps =
    {[base]deps}
    mpi4py
setenv = PYCBC_TEST_TYPE=search
commands = bash tools/pycbc_test_suite.sh

[testenv:py-inference]
deps =
    {[base]deps}
setenv = PYCBC_TEST_TYPE=inference
commands = bash tools/pycbc_test_suite.sh

[testenv:py-docs]
deps =
    {[base]deps}
    ; Needed for `BBHx` package to work with PyCBC
    git+https://github.com/titodalcanton/BBHx.git@py39-and-cleanup; sys_platform == 'linux'
    git+https://github.com/gwastro/BBHX-waveform-model.git; sys_platform == 'linux'
conda_deps =
    c-compiler
    cxx-compiler
    mysqlclient
    ; these packages don't install cleanly with pip, conda has patches
    ligo-segments
    python-ligo-lw
    ; for BBHx
    liblapacke
    openblas
conda_channels = conda-forge
setenv =
    PYCBC_TEST_TYPE=docs
commands_pre =
    conda list
commands = bash tools/pycbc_test_suite.sh
