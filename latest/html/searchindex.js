Search.setIndex({"alltitles": {"1. Create the injection": [[32, "create-the-injection"]], "2. Setup the configuration files": [[32, "setup-the-configuration-files"]], "3. Run": [[32, "run"]], "Abitrary sampling coordinates with nested samplers": [[40, "abitrary-sampling-coordinates-with-nested-samplers"]], "Accessing data around each event": [[12, "accessing-data-around-each-event"]], "Adding a custom detector / overriding existing ones": [[15, "adding-a-custom-detector-overriding-existing-ones"]], "Adding a custom waveform": [[87, "adding-a-custom-waveform"]], "Adding a custom waveform model within a script": [[88, "adding-a-custom-waveform-model-within-a-script"]], "Adding a ifo": [[100, "adding-a-ifo"]], "Additional Data": [[24, "id4"], [24, "id8"]], "Additional data files from lalsuite-extra": [[47, "additional-data-files-from-lalsuite-extra"]], "Advanced configuration settings": [[30, "advanced-configuration-settings"]], "Aligned-spin geometric placement: pycbc_geom_aligned_bank": [[84, "aligned-spin-geometric-placement-pycbc-geom-aligned-bank"]], "Aligned-spin stochastic placement": [[84, "aligned-spin-stochastic-placement"]], "Antenna Patterns and Projecting a Signal into the Detector Frame": [[15, "antenna-patterns-and-projecting-a-signal-into-the-detector-frame"]], "Applications and Workflows": [[9, null]], "Applying an FIR filter": [[23, "applying-an-fir-filter"]], "Applying highpass / lowpass filters": [[23, "applying-highpass-lowpass-filters"]], "Background": [[84, "background"], [84, "id2"], [84, "id6"]], "Backporting Bug Fixes to Previous Release Series": [[81, "backporting-bug-fixes-to-previous-release-series"]], "Basics and overview": [[89, "basics-and-overview"]], "Bayesian Inference": [[13, "bayesian-inference"]], "Building Documentation for GitHub Pages": [[11, null]], "Building and installing into your virtual environment": [[47, "building-and-installing-into-your-virtual-environment"]], "Building and pushing the documentation": [[11, "building-and-pushing-the-documentation"]], "Building the Documentation": [[45, "building-the-documentation"]], "Calculate the signal-to-noise": [[27, "calculate-the-signal-to-noise"]], "Calculating the Effectualness (Fitting Factor) of Template Banks": [[10, null]], "Calculating the match between waveforms": [[87, "calculating-the-match-between-waveforms"]], "Calibration parameters": [[30, "calibration-parameters"]], "Catalog of Observed Gravitational-wave Mergers": [[12, null]], "Caveats": [[80, "caveats"]], "Checkpointing and output files": [[30, "checkpointing-and-output-files"]], "Checks for the hardware injection output": [[28, "checks-for-the-hardware-injection-output"]], "Chisq time series": [[23, "chisq-time-series"]], "Choosing a specific backend": [[22, "choosing-a-specific-backend"]], "Citing the PyCBC Software": [[13, "citing-the-pycbc-software"]], "Citing the scientific publications that describe the algorithms": [[13, "citing-the-scientific-publications-that-describe-the-algorithms"]], "Code documentation": [[92, "code-documentation"]], "Coincidence": [[89, "coincidence"]], "Column vectors of trigger data": [[24, "id3"], [24, "id6"]], "Command line options": [[84, "command-line-options"], [84, "id4"]], "Command line options: lalapps_cbc_sbank": [[84, "command-line-options-lalapps-cbc-sbank"]], "Command line options: pycbc_aligned_stoch_bank": [[84, "command-line-options-pycbc-aligned-stoch-bank"]], "Composite Models": [[42, "composite-models"]], "Conditioning existing data": [[80, "conditioning-existing-data"]], "Configuration File": [[91, "configuration-file"], [99, "configuration-file"]], "Configuration file": [[97, "configuration-file"], [98, "configuration-file"]], "Configuration file setup": [[90, "configuration-file-setup"], [93, "configuration-file-setup"], [94, "configuration-file-setup"], [100, "configuration-file-setup"], [101, "configuration-file-setup"], [102, "configuration-file-setup"]], "Configuration files - Are you running from production configuration (.ini) files?": [[99, "configuration-files-are-you-running-from-production-configuration-ini-files"]], "Configuring the model": [[30, "configuring-the-model"]], "Configuring the model, sampler, priors, and data": [[30, "configuring-the-model-sampler-priors-and-data"]], "Configuring the prior": [[30, "configuring-the-prior"]], "Configuring the sampler": [[30, "configuring-the-sampler"]], "Configuring the workflow": [[97, "configuring-the-workflow"]], "Constraints": [[30, "constraints"]], "Contents": [[28, "contents"]], "Creating Releases of PyCBC": [[81, null]], "Creating a GitHub project page": [[11, "creating-a-github-project-page"]], "Creating a configuration (.ini) file": [[21, "creating-a-configuration-ini-file"]], "Creating a configuration file": [[10, "creating-a-configuration-file"]], "Creating a plugin for PyCBC": [[88, "creating-a-plugin-for-pycbc"]], "Creating the release on GitHub": [[81, "creating-the-release-on-github"]], "Dag Generator for Doing Faithfulness Comparisons": [[21, null]], "Description of the ini file contents": [[100, "description-of-the-ini-file-contents"]], "Detailed example": [[43, "detailed-example"]], "Details of common Models in PyCBC Inference": [[42, null]], "Detector Locations": [[15, "detector-locations"]], "Determine the times an instrument has valid data": [[14, "determine-the-times-an-instrument-has-valid-data"]], "Development build on LDG / IGWN clusters": [[45, "development-build-on-ldg-igwn-clusters"]], "Docker": [[45, "docker"]], "Documentation for Developers": [[16, null]], "Documenting PyCBC code": [[19, null]], "Documenting PyCBC modules": [[19, "documenting-pycbc-modules"]], "Documenting PyCBC scripts": [[19, "documenting-pycbc-scripts"]], "Documenting the PyCBC package": [[19, "documenting-the-pycbc-package"]], "Dynesty": [[39, "id4"]], "Emcee": [[39, "id1"]], "Epsie": [[39, "id6"]], "Estimating the PSD of a time series": [[51, "estimating-the-psd-of-a-time-series"]], "Evaluation": [[10, "evaluation"]], "Example": [[92, "example"], [92, "id1"], [92, "id3"]], "Example complete workflow .ini file": [[92, "example-complete-workflow-ini-file"]], "Example config file": [[100, "example-config-file"]], "Example config files": [[21, "example-config-files"]], "Example uses": [[24, "example-uses"]], "Example with GW150914": [[37, "example-with-gw150914"]], "Example: BBH injections with dynesty": [[95, "example-bbh-injections-with-dynesty"]], "Example: GW150914 and GW170814 with dynesty": [[96, "example-gw150914-and-gw170814-with-dynesty"]], "Example: GW150914 and GW170814 with emcee_pt": [[96, "example-gw150914-and-gw170814-with-emcee-pt"]], "Examples": [[30, "examples"]], "Executable Configuration": [[91, "executable-configuration"]], "Executable Sections": [[99, "executable-sections"]], "Executable locations - the [executables] section": [[92, "executable-locations-the-executables-section"]], "Executable options": [[92, "executable-options"]], "Executables": [[24, "executables"], [24, "id1"]], "Extending PyCBC with external plugins": [[20, null]], "Extending the GPS end time of a previous workflow": [[97, "extending-the-gps-end-time-of-a-previous-workflow"]], "Extrinsic Parameter Only Models": [[42, "extrinsic-parameter-only-models"]], "Filtering": [[23, null]], "Finding input files": [[86, "finding-input-files"]], "Finding times of hardware injections": [[14, "finding-times-of-hardware-injections"]], "Flag syntax": [[100, "flag-syntax"]], "For Developers": [[30, "for-developers"]], "Full Virtualenv for Development and Production": [[45, "full-virtualenv-for-development-and-production"]], "GW150914 example with gaussian noise model": [[33, null]], "Generate the full workflow you want to do": [[99, "generate-the-full-workflow-you-want-to-do"]], "Generate the workflow": [[95, "generate-the-workflow"], [96, "generate-the-workflow"], [99, "generate-the-workflow"]], "Generate waveform from command line (pycbc_generate_hwinj)": [[28, "generate-waveform-from-command-line-pycbc-generate-hwinj"]], "Generate waveform from lalapps_inspinj output (pycbc_generate_hwinj_from_xml)": [[28, "generate-waveform-from-lalapps-inspinj-output-pycbc-generate-hwinj-from-xml"]], "Generating Noise": [[50, null]], "Generating an Analytic PSD from lalsimulation": [[51, "generating-an-analytic-psd-from-lalsimulation"]], "Generating and running the workflow": [[98, "generating-and-running-the-workflow"]], "Generating mchirp and q from uniform mass1 and mass2": [[17, "generating-mchirp-and-q-from-uniform-mass1-and-mass2"]], "Generating one waveform in multiple detectors": [[87, "generating-one-waveform-in-multiple-detectors"]], "Generating samples in a Python script by using the .ini file": [[17, "generating-samples-in-a-python-script-by-using-the-ini-file"]], "Generating segments": [[89, "generating-segments"]], "Generating the workflow": [[10, "generating-the-workflow"], [21, "generating-the-workflow"], [97, "generating-the-workflow"]], "Generating time domain Gaussian noise": [[50, "generating-time-domain-gaussian-noise"]], "Get the inference configuration files": [[95, "get-the-inference-configuration-files"], [96, "get-the-inference-configuration-files"]], "Getting Started": [[29, "getting-started"]], "Global options - the [workflow] section": [[92, "global-options-the-workflow-section"]], "Graphics Processing Unit support with CUDA": [[45, "graphics-processing-unit-support-with-cuda"]], "Gravitational-wave Detectors": [[15, null]], "HDF files within the PyCBC workflow": [[24, null]], "HDF5 Based Coincidence Code": [[91, null]], "Handling PSDs": [[51, null]], "Hardware injection waveform generation": [[28, null]], "Heterodyne / Relative Models": [[42, "heterodyne-relative-models"]], "How to add a sampler": [[43, "how-to-add-a-sampler"]], "How to add a sampler IO class": [[41, "how-to-add-a-sampler-io-class"]], "How to generate a workflow": [[21, "how-to-generate-a-workflow"]], "How to query the LDR server": [[28, "how-to-query-the-ldr-server"]], "How to query the segment database": [[28, "how-to-query-the-segment-database"]], "How to run": [[99, "how-to-run"]], "Hybrid approaches: the best of both worlds": [[84, "hybrid-approaches-the-best-of-both-worlds"]], "I want to use another metric, ie. an IMR metric": [[84, "i-want-to-use-another-metric-ie-an-imr-metric"]], "I want to use direct match": [[84, "i-want-to-use-direct-match"]], "I want to use the F2 metric": [[84, "i-want-to-use-the-f2-metric"]], "Ian\u2019s recommendation: Which stochastic code should I use?": [[84, "ian-s-recommendation-which-stochastic-code-should-i-use"]], "Index": [[26, null]], "Inference IO": [[41, null]], "Inheritance diagrams": [[41, "inheritance-diagrams"], [43, "inheritance-diagrams"]], "Injecting simulated signals into existing data": [[80, "injecting-simulated-signals-into-existing-data"]], "Injection generation": [[89, "injection-generation"]], "Install pip": [[48, "install-pip"]], "Install virtualenv": [[48, "install-virtualenv"]], "Installation": [[29, "installation"]], "Installing PyCBC": [[45, null]], "Installing lalsuite for PyCBC": [[47, null]], "Installing the CUDA dependencies": [[46, "installing-the-cuda-dependencies"]], "Instructions to add CUDA support (optional)": [[46, null]], "Introduction": [[10, "introduction"], [21, "introduction"], [22, "introduction"], [25, "introduction"], [28, "introduction"], [30, "introduction"], [84, "introduction"], [84, "id5"], [86, "introduction"], [89, "introduction"], [90, "introduction"], [91, "introduction"], [92, "introduction"], [93, "introduction"], [94, "introduction"], [95, "introduction"], [96, "introduction"], [97, "introduction"], [99, "introduction"], [100, "introduction"], [101, "introduction"], [102, "introduction"]], "Known issues": [[10, "known-issues"]], "LISA SMBHB injection and parameter estimation": [[35, null]], "LISA parameter estimation for simulated SMBHB from LDC": [[36, null]], "Lensing example": [[34, "lensing-example"]], "Library Examples and Interactive Tutorials": [[85, null]], "Light travel time between detectors": [[15, "light-travel-time-between-detectors"]], "Limitations": [[91, "limitations"]], "Listen to GW150914 in Hanford": [[27, "listen-to-gw150914-in-hanford"]], "Making Mass Distributions in M1 and M2": [[17, "making-mass-distributions-in-m1-and-m2"]], "Making a movie (pycbc_inference_plot_movie)": [[44, "making-a-movie-pycbc-inference-plot-movie"]], "Making new waveform approximants available to PyCBC": [[88, null]], "Marginalization over all parameters": [[40, "marginalization-over-all-parameters"]], "Marginalization subset of parameters": [[40, "marginalization-subset-of-parameters"]], "Marginalized time model": [[37, null]], "Matched Filter SNR": [[23, "matched-filter-snr"]], "Matched-filtering": [[89, "matched-filtering"]], "Method documentation": [[22, "method-documentation"], [25, "method-documentation"], [89, "method-documentation"]], "Module contents": [[52, "module-pycbc"], [53, "module-pycbc.catalog"], [54, "module-pycbc.coordinates"], [55, "module-pycbc.detector"], [56, "module-pycbc.distributions"], [57, "module-pycbc.events"], [58, "module-pycbc.fft"], [59, "module-pycbc.filter"], [60, "module-pycbc.frame"], [61, "module-pycbc.inference"], [62, "module-pycbc.inference.io"], [63, "module-pycbc.inference.jump"], [64, "module-pycbc.inference.models"], [65, "module-pycbc.inference.sampler"], [66, "module-pycbc.inject"], [67, "module-pycbc.io"], [68, "module-pycbc.live"], [69, "module-pycbc.neutron_stars"], [70, "module-pycbc.noise"], [71, "module-pycbc.population"], [72, "module-pycbc.psd"], [73, "module-pycbc.results"], [74, "module-pycbc.strain"], [75, "module-pycbc.tmpltbank"], [76, "module-pycbc.types"], [77, "module-pycbc.vetoes"], [78, "module-pycbc.waveform"], [79, "module-pycbc.workflow"]], "Monitor and Debug the Workflow (Detailed Pegasus Documentation)": [[97, "monitor-and-debug-the-workflow-detailed-pegasus-documentation"], [99, "monitor-and-debug-the-workflow-detailed-pegasus-documentation"]], "Multinest": [[39, "id8"]], "No, I have my own configuration files": [[99, "no-i-have-my-own-configuration-files"]], "Non spin bank placement: pycbc_geom_nonspinbank": [[84, "non-spin-bank-placement-pycbc-geom-nonspinbank"]], "Obtaining data": [[89, "obtaining-data"]], "Obtaining segments from pre-existing XML files": [[100, "obtaining-segments-from-pre-existing-xml-files"]], "Obtaining the source code and checking out a version": [[47, "obtaining-the-source-code-and-checking-out-a-version"]], "Options for sensitivity plotting": [[91, "options-for-sensitivity-plotting"]], "Options to the coincidence clustering + statistic asignment executable": [[91, "options-to-the-coincidence-clustering-statistic-asignment-executable"]], "Options to the coincidence/background executable": [[91, "options-to-the-coincidence-background-executable"]], "Options to the injection finding executable": [[91, "options-to-the-injection-finding-executable"]], "Other scenarios": [[45, "other-scenarios"]], "Other sections": [[90, "other-sections"]], "Other special sections": [[92, "other-special-sections"]], "Overview": [[30, "overview"], [44, "overview"], [84, "overview"], [84, "id1"]], "Overview & Guidelines": [[41, "overview-guidelines"], [43, "overview-guidelines"]], "PTEmcee": [[39, "id3"]], "Parallel-tempered Emcee": [[39, "id2"]], "Pegasus Analyzer": [[97, "pegasus-analyzer"]], "Pegasus Dashboard": [[97, "pegasus-dashboard"], [99, "pegasus-dashboard"]], "Pegasus Plots": [[99, "pegasus-plots"]], "Pegasus Profile Sections": [[99, "pegasus-profile-sections"]], "Performing FFTs in PyCBC": [[22, null]], "Plan and execute the workflow": [[95, "plan-and-execute-the-workflow"], [96, "plan-and-execute-the-workflow"]], "Plan the workflow": [[99, "plan-the-workflow"]], "Planning and Submitting the Workflow": [[97, "planning-and-submitting-the-workflow"], [99, "planning-and-submitting-the-workflow"]], "Plot ASCII waveform files with pycbc_plot_hwinj": [[28, "plot-ascii-waveform-files-with-pycbc-plot-hwinj"]], "Plotting GW phase and amplitude of TD waveform": [[87, "plotting-gw-phase-and-amplitude-of-td-waveform"]], "Plotting Time Domain Waveforms": [[87, "plotting-time-domain-waveforms"]], "Plotting a TD and FD waveform together in the TD": [[87, "plotting-a-td-and-fd-waveform-together-in-the-td"]], "Plotting a specific iteration": [[44, "plotting-a-specific-iteration"]], "Plotting a thinned chain of samples": [[44, "plotting-a-thinned-chain-of-samples"]], "Plotting frequency evolution of TD waveform": [[87, "plotting-frequency-evolution-of-td-waveform"]], "Plotting some key statistics from the catalog": [[12, "plotting-some-key-statistics-from-the-catalog"]], "Plotting the posteriors (pycbc_inference_plot_posterior)": [[44, null]], "Plotting the whitened strain": [[27, "plotting-the-whitened-strain"]], "Posterior Files": [[41, "posterior-files"]], "Prerequisites": [[97, "prerequisites"]], "Procedure": [[10, "procedure"]], "Providing padding": [[100, "providing-padding"]], "Providing valid times": [[100, "providing-valid-times"]], "PyCBC inference documentation (pycbc.inference)": [[30, null]], "PyCBC searches": [[82, null]], "PyCBC template bank generation documentation (pycbc.tmpltbank)": [[84, null]], "PyCBC: Powering Gravitational-wave Astronomy": [[29, null]], "Pycbc\u2019s workflow module configuration file(s) and command line interface": [[92, null]], "Query times of valid data, hardware injections, and more.": [[14, null]], "Querying a LDR server": [[25, "querying-a-ldr-server"]], "Quickstart example": [[40, "quickstart-example"]], "Ranking Statistic": [[83, "id1"]], "Re-running a failed workflow": [[97, "re-running-a-failed-workflow"]], "Re-running a workflow using a new veto definer file": [[97, "re-running-a-workflow-using-a-new-veto-definer-file"]], "Reading / Saving a PSD from a file": [[51, "reading-saving-a-psd-from-a-file"]], "Reading Gravitational-wave Frames": [[25, null]], "Reading a frame file": [[25, "reading-a-frame-file"]], "Recover ASCII file injection with pycbc_inspiral": [[28, "recover-ascii-file-injection-with-pycbc-inspiral"]], "Recover software injection with pycbc_inspiral": [[28, "recover-software-injection-with-pycbc-inspiral"]], "Related Help": [[45, "related-help"]], "Requirements": [[86, "requirements"], [92, "requirements"], [92, "id2"]], "Results page": [[95, "results-page"], [96, "results-page"]], "Reuse of data from a previous workflow": [[97, "reuse-of-data-from-a-previous-workflow"], [99, "reuse-of-data-from-a-previous-workflow"]], "Run lalapps_inspinj": [[28, "run-lalapps-inspinj"]], "Run pycbc_generate_hwinj": [[28, "run-pycbc-generate-hwinj"]], "Run pycbc_generate_hwinj_from_xml": [[28, "run-pycbc-generate-hwinj-from-xml"]], "Running PyCBC under Docker": [[18, null]], "Running on an analytic distribution": [[31, null]], "Running on the Open Science Grid": [[97, "running-on-the-open-science-grid"]], "Running the command": [[86, "running-the-command"]], "Running the workflow": [[97, "running-the-workflow"]], "Sampler API": [[43, null]], "Sbank workflow generator": [[84, "sbank-workflow-generator"]], "Searches for Compact Binary Coalescence": [[13, "searches-for-compact-binary-coalescence"]], "Select a time for the injection": [[28, "select-a-time-for-the-injection"]], "Select data for PSD estimation": [[28, "select-data-for-psd-estimation"]], "Select the files you want to reuse from the prior run": [[99, "select-the-files-you-want-to-reuse-from-the-prior-run"]], "Selecting which modes to include": [[87, "selecting-which-modes-to-include"]], "Set up a run directory": [[99, "set-up-a-run-directory"]], "Setting data": [[30, "setting-data"]], "Setting up a workflow for data reuse": [[97, "setting-up-a-workflow-for-data-reuse"]], "Setting up virtualenv": [[48, null]], "Setup the workflow configuration file": [[95, "setup-the-workflow-configuration-file"], [96, "setup-the-workflow-configuration-file"]], "Sharing user files and SSH keys": [[18, "sharing-user-files-and-ssh-keys"]], "Signal Processing with GW150914": [[27, null]], "Simple Installation": [[45, "simple-installation"]], "Simulated BBH example": [[32, null]], "Simulating gravitational-wave data": [[80, "simulating-gravitational-wave-data"]], "Sky Location Distribution as Spin Distribution Example": [[17, "sky-location-distribution-as-spin-distribution-example"]], "Snowline": [[39, "id9"]], "Some examples": [[84, "some-examples"], [84, "id3"], [84, "id7"]], "Specification": [[24, "specification"], [24, "id2"]], "Sphinx": [[19, "sphinx"]], "Split table": [[89, "split-table"]], "Splitting existing data into shorter frame files": [[80, "splitting-existing-data-into-shorter-frame-files"]], "Standard models with full waveform generation": [[42, "standard-models-with-full-waveform-generation"]], "Static parameters": [[30, "static-parameters"]], "Statistic Features": [[83, "id2"]], "Statistic Keywords": [[83, "id3"]], "Submodules": [[52, "submodules"], [53, "submodules"], [54, "submodules"], [55, "submodules"], [56, "submodules"], [57, "submodules"], [58, "submodules"], [59, "submodules"], [60, "submodules"], [61, "submodules"], [62, "submodules"], [63, "submodules"], [64, "submodules"], [65, "submodules"], [66, "submodules"], [67, "submodules"], [68, "submodules"], [69, "submodules"], [70, "submodules"], [71, "submodules"], [72, "submodules"], [73, "submodules"], [74, "submodules"], [75, "submodules"], [76, "submodules"], [77, "submodules"], [78, "submodules"], [79, "submodules"]], "Subpackages": [[52, "subpackages"], [61, "subpackages"]], "Supplying the config file on the command line and overriding options": [[92, "supplying-the-config-file-on-the-command-line-and-overriding-options"]], "Supported injection executables and instructions for using them": [[93, "supported-injection-executables-and-instructions-for-using-them"]], "Supported inspiral trigger generators and instructions for using them": [[94, "supported-inspiral-trigger-generators-and-instructions-for-using-them"]], "Supported splittable executables and instructions for using them": [[101, "supported-splittable-executables-and-instructions-for-using-them"]], "Supported template bank exes and instructions for using them": [[102, "supported-template-bank-exes-and-instructions-for-using-them"]], "Template bank": [[89, "template-bank"]], "The module\u2019s source code": [[84, "the-module-s-source-code"]], "The ranking statistic used in PyCBC searches": [[83, null]], "The veto-definer file": [[100, "the-veto-definer-file"]], "The workflow datafind and validation module": [[90, null]], "The workflow injection generation module": [[93, null]], "The workflow matched-filter module": [[94, null]], "The workflow segment generation module": [[100, null]], "The workflow table splitting module": [[101, null]], "The workflow template bank generation module": [[102, null]], "Time source gravitational-wave passes through detector": [[15, "time-source-gravitational-wave-passes-through-detector"]], "Trying out different samplers": [[39, null]], "Ultranest": [[39, "id5"]], "Understanding the results": [[10, "understanding-the-results"], [21, "understanding-the-results"]], "Uploading triggers to gracedb": [[86, null]], "Usage": [[90, "usage"], [93, "usage"], [94, "usage"], [100, "usage"], [101, "usage"], [102, "usage"]], "Use of Intel MKL Optimized FFT libraries": [[45, "use-of-intel-mkl-optimized-fft-libraries"]], "Use of PyCBC in Scientific Publications": [[13, null]], "Using PyCBC Distributions from PyCBC Inference": [[17, null]], "Using jupyter notebook within docker": [[18, "using-jupyter-notebook-within-docker"]], "Using partial products from a previous workflow": [[97, "using-partial-products-from-a-previous-workflow"]], "Using the class-based API": [[22, "using-the-class-based-api"]], "Using the function based API": [[22, "using-the-function-based-api"]], "Using the hierarchical model": [[34, null]], "Using the relative model": [[38, null]], "Using the single template model": [[40, null]], "Validating template banks for production analysis": [[10, "validating-template-banks-for-production-analysis"]], "Version numbers": [[100, "version-numbers"]], "Visualizing the Posteriors": [[30, "visualizing-the-posteriors"]], "Waveform transforms": [[30, "waveform-transforms"]], "Waveforms": [[87, null]], "What flags can I query?": [[14, "what-flags-can-i-query"]], "What waveforms can I generate?": [[87, "what-waveforms-can-i-generate"]], "Which mergers do we have information about?": [[12, "which-mergers-do-we-have-information-about"]], "Workflow Configuration": [[91, "workflow-configuration"]], "Workflow Sections": [[99, "workflow-sections"]], "Workflow module documentation": [[89, "workflow-module-documentation"]], "Workflow: the inspiral analysis workflow generator (pycbc.workflow)": [[89, null]], "Workflows": [[30, "workflows"]], "Writing a frame file": [[25, "writing-a-frame-file"]], "Yes, I want to run in a standard production configuration": [[99, "yes-i-want-to-run-in-a-standard-production-configuration"]], "[datafind]": [[90, "datafind"]], "[environment] section": [[92, "environment-section"]], "[executables]": [[90, "executables"], [93, "executables"], [94, "executables"], [101, "executables"], [102, "executables"]], "[sharedoptions] section": [[92, "sharedoptions-section"]], "[workflow-XXX] subsections": [[92, "workflow-xxx-subsections"]], "[workflow-datafind] section": [[90, "workflow-datafind-section"]], "[workflow-injections] section": [[93, "workflow-injections-section"]], "[workflow-matchedfilter] section": [[94, "workflow-matchedfilter-section"]], "[workflow-splittable] section": [[101, "workflow-splittable-section"]], "[workflow-tmpltbank] section": [[102, "workflow-tmpltbank-section"]], "combined single inspiral triggers": [[24, "combined-single-inspiral-triggers"]], "cpnest": [[39, "id7"]], "executable macros": [[92, "executable-macros"]], "lalapps_inspinj": [[93, "lalapps-inspinj"]], "lalapps_inspiral_ahope": [[94, "lalapps-inspiral-ahope"]], "lalapps_tmpltbank_ahope": [[102, "lalapps-tmpltbank-ahope"]], "nessai": [[39, "id10"]], "pycbc": [[49, null]], "pycbc package": [[52, null]], "pycbc.bin_utils module": [[52, "module-pycbc.bin_utils"]], "pycbc.boundaries module": [[52, "module-pycbc.boundaries"]], "pycbc.catalog package": [[53, null]], "pycbc.catalog.catalog module": [[53, "module-pycbc.catalog.catalog"]], "pycbc.conversions module": [[52, "module-pycbc.conversions"]], "pycbc.coordinates package": [[54, null]], "pycbc.coordinates.base module": [[54, "module-pycbc.coordinates.base"]], "pycbc.coordinates.space module": [[54, "module-pycbc.coordinates.space"]], "pycbc.cosmology module": [[52, "module-pycbc.cosmology"]], "pycbc.detector package": [[55, null]], "pycbc.detector.ground module": [[55, "module-pycbc.detector.ground"]], "pycbc.detector.space module": [[55, "module-pycbc.detector.space"]], "pycbc.distributions package": [[56, null]], "pycbc.distributions.angular module": [[56, "module-pycbc.distributions.angular"]], "pycbc.distributions.arbitrary module": [[56, "module-pycbc.distributions.arbitrary"]], "pycbc.distributions.bounded module": [[56, "module-pycbc.distributions.bounded"]], "pycbc.distributions.constraints module": [[56, "module-pycbc.distributions.constraints"]], "pycbc.distributions.external module": [[56, "module-pycbc.distributions.external"]], "pycbc.distributions.fixedsamples module": [[56, "module-pycbc.distributions.fixedsamples"]], "pycbc.distributions.gaussian module": [[56, "module-pycbc.distributions.gaussian"]], "pycbc.distributions.joint module": [[56, "module-pycbc.distributions.joint"]], "pycbc.distributions.mass module": [[56, "module-pycbc.distributions.mass"]], "pycbc.distributions.power_law module": [[56, "module-pycbc.distributions.power_law"]], "pycbc.distributions.qnm module": [[56, "module-pycbc.distributions.qnm"]], "pycbc.distributions.sky_location module": [[56, "module-pycbc.distributions.sky_location"]], "pycbc.distributions.spins module": [[56, "module-pycbc.distributions.spins"]], "pycbc.distributions.uniform module": [[56, "module-pycbc.distributions.uniform"]], "pycbc.distributions.uniform_log module": [[56, "module-pycbc.distributions.uniform_log"]], "pycbc.distributions.utils module": [[56, "module-pycbc.distributions.utils"]], "pycbc.dq module": [[52, "module-pycbc.dq"]], "pycbc.events package": [[57, null]], "pycbc.events.coherent module": [[57, "module-pycbc.events.coherent"]], "pycbc.events.coinc module": [[57, "module-pycbc.events.coinc"]], "pycbc.events.coinc_rate module": [[57, "module-pycbc.events.coinc_rate"]], "pycbc.events.cuts module": [[57, "module-pycbc.events.cuts"]], "pycbc.events.eventmgr module": [[57, "module-pycbc.events.eventmgr"]], "pycbc.events.eventmgr_cython module": [[57, "module-pycbc.events.eventmgr_cython"]], "pycbc.events.ranking module": [[57, "module-pycbc.events.ranking"]], "pycbc.events.significance module": [[57, "module-pycbc.events.significance"]], "pycbc.events.simd_threshold_cython module": [[57, "module-pycbc.events.simd_threshold_cython"]], "pycbc.events.single module": [[57, "module-pycbc.events.single"]], "pycbc.events.stat module": [[57, "module-pycbc.events.stat"]], "pycbc.events.threshold_cpu module": [[57, "module-pycbc.events.threshold_cpu"]], "pycbc.events.threshold_cupy module": [[57, "module-pycbc.events.threshold_cupy"]], "pycbc.events.trigger_fits module": [[57, "module-pycbc.events.trigger_fits"]], "pycbc.events.triggers module": [[57, "module-pycbc.events.triggers"]], "pycbc.events.veto module": [[57, "module-pycbc.events.veto"]], "pycbc.fft package": [[58, null]], "pycbc.fft.backend_cpu module": [[58, "module-pycbc.fft.backend_cpu"]], "pycbc.fft.backend_cupy module": [[58, "module-pycbc.fft.backend_cupy"]], "pycbc.fft.backend_mkl module": [[58, "module-pycbc.fft.backend_mkl"]], "pycbc.fft.backend_support module": [[58, "module-pycbc.fft.backend_support"]], "pycbc.fft.class_api module": [[58, "module-pycbc.fft.class_api"]], "pycbc.fft.core module": [[58, "module-pycbc.fft.core"]], "pycbc.fft.cupyfft module": [[58, "module-pycbc.fft.cupyfft"]], "pycbc.fft.fft_callback module": [[58, "module-pycbc.fft.fft_callback"]], "pycbc.fft.fftw module": [[58, "module-pycbc.fft.fftw"]], "pycbc.fft.fftw_pruned module": [[58, "module-pycbc.fft.fftw_pruned"]], "pycbc.fft.fftw_pruned_cython module": [[58, "module-pycbc.fft.fftw_pruned_cython"]], "pycbc.fft.func_api module": [[58, "module-pycbc.fft.func_api"]], "pycbc.fft.mkl module": [[58, "module-pycbc.fft.mkl"]], "pycbc.fft.npfft module": [[58, "module-pycbc.fft.npfft"]], "pycbc.fft.parser_support module": [[58, "module-pycbc.fft.parser_support"]], "pycbc.filter package": [[59, null]], "pycbc.filter.autocorrelation module": [[59, "module-pycbc.filter.autocorrelation"]], "pycbc.filter.matchedfilter module": [[59, "module-pycbc.filter.matchedfilter"]], "pycbc.filter.matchedfilter_cpu module": [[59, "module-pycbc.filter.matchedfilter_cpu"]], "pycbc.filter.matchedfilter_cupy module": [[59, "module-pycbc.filter.matchedfilter_cupy"]], "pycbc.filter.matchedfilter_numpy module": [[59, "module-pycbc.filter.matchedfilter_numpy"]], "pycbc.filter.qtransform module": [[59, "module-pycbc.filter.qtransform"]], "pycbc.filter.resample module": [[59, "module-pycbc.filter.resample"]], "pycbc.filter.simd_correlate module": [[59, "module-pycbc.filter.simd_correlate"]], "pycbc.filter.simd_correlate_cython module": [[59, "module-pycbc.filter.simd_correlate_cython"]], "pycbc.filter.zpk module": [[59, "module-pycbc.filter.zpk"]], "pycbc.frame package": [[60, null]], "pycbc.frame.frame module": [[60, "module-pycbc.frame.frame"]], "pycbc.frame.gwosc module": [[60, "module-pycbc.frame.gwosc"]], "pycbc.frame.store module": [[60, "module-pycbc.frame.store"]], "pycbc.inference package": [[61, null]], "pycbc.inference.burn_in module": [[61, "module-pycbc.inference.burn_in"]], "pycbc.inference.entropy module": [[61, "module-pycbc.inference.entropy"]], "pycbc.inference.evidence module": [[61, "module-pycbc.inference.evidence"]], "pycbc.inference.gelman_rubin module": [[61, "module-pycbc.inference.gelman_rubin"]], "pycbc.inference.geweke module": [[61, "module-pycbc.inference.geweke"]], "pycbc.inference.io package": [[62, null]], "pycbc.inference.io.base_hdf module": [[62, "module-pycbc.inference.io.base_hdf"]], "pycbc.inference.io.base_mcmc module": [[62, "module-pycbc.inference.io.base_mcmc"]], "pycbc.inference.io.base_multitemper module": [[62, "module-pycbc.inference.io.base_multitemper"]], "pycbc.inference.io.base_nested_sampler module": [[62, "module-pycbc.inference.io.base_nested_sampler"]], "pycbc.inference.io.base_sampler module": [[62, "module-pycbc.inference.io.base_sampler"]], "pycbc.inference.io.dynesty module": [[62, "module-pycbc.inference.io.dynesty"]], "pycbc.inference.io.emcee module": [[62, "module-pycbc.inference.io.emcee"]], "pycbc.inference.io.emcee_pt module": [[62, "module-pycbc.inference.io.emcee_pt"]], "pycbc.inference.io.epsie module": [[62, "module-pycbc.inference.io.epsie"]], "pycbc.inference.io.multinest module": [[62, "module-pycbc.inference.io.multinest"]], "pycbc.inference.io.nessai module": [[62, "module-pycbc.inference.io.nessai"]], "pycbc.inference.io.posterior module": [[62, "module-pycbc.inference.io.posterior"]], "pycbc.inference.io.ptemcee module": [[62, "module-pycbc.inference.io.ptemcee"]], "pycbc.inference.io.snowline module": [[62, "module-pycbc.inference.io.snowline"]], "pycbc.inference.io.txt module": [[62, "module-pycbc.inference.io.txt"]], "pycbc.inference.io.ultranest module": [[62, "module-pycbc.inference.io.ultranest"]], "pycbc.inference.jump package": [[63, null]], "pycbc.inference.jump.angular module": [[63, "module-pycbc.inference.jump.angular"]], "pycbc.inference.jump.bounded_normal module": [[63, "module-pycbc.inference.jump.bounded_normal"]], "pycbc.inference.jump.discrete module": [[63, "module-pycbc.inference.jump.discrete"]], "pycbc.inference.jump.normal module": [[63, "module-pycbc.inference.jump.normal"]], "pycbc.inference.models package": [[64, null]], "pycbc.inference.models.analytic module": [[64, "module-pycbc.inference.models.analytic"]], "pycbc.inference.models.base module": [[64, "module-pycbc.inference.models.base"]], "pycbc.inference.models.base_data module": [[64, "module-pycbc.inference.models.base_data"]], "pycbc.inference.models.brute_marg module": [[64, "module-pycbc.inference.models.brute_marg"]], "pycbc.inference.models.data_utils module": [[64, "module-pycbc.inference.models.data_utils"]], "pycbc.inference.models.gated_gaussian_noise module": [[64, "module-pycbc.inference.models.gated_gaussian_noise"]], "pycbc.inference.models.gaussian_noise module": [[64, "module-pycbc.inference.models.gaussian_noise"]], "pycbc.inference.models.hierarchical module": [[64, "module-pycbc.inference.models.hierarchical"]], "pycbc.inference.models.marginalized_gaussian_noise module": [[64, "module-pycbc.inference.models.marginalized_gaussian_noise"]], "pycbc.inference.models.relbin module": [[64, "module-pycbc.inference.models.relbin"]], "pycbc.inference.models.relbin_cpu module": [[64, "module-pycbc.inference.models.relbin_cpu"]], "pycbc.inference.models.single_template module": [[64, "module-pycbc.inference.models.single_template"]], "pycbc.inference.models.tools module": [[64, "module-pycbc.inference.models.tools"]], "pycbc.inference.option_utils module": [[61, "module-pycbc.inference.option_utils"]], "pycbc.inference.sampler package": [[65, null]], "pycbc.inference.sampler.base module": [[65, "module-pycbc.inference.sampler.base"]], "pycbc.inference.sampler.base_cube module": [[65, "module-pycbc.inference.sampler.base_cube"]], "pycbc.inference.sampler.base_mcmc module": [[65, "module-pycbc.inference.sampler.base_mcmc"]], "pycbc.inference.sampler.base_multitemper module": [[65, "module-pycbc.inference.sampler.base_multitemper"]], "pycbc.inference.sampler.dummy module": [[65, "module-pycbc.inference.sampler.dummy"]], "pycbc.inference.sampler.dynesty module": [[65, "module-pycbc.inference.sampler.dynesty"]], "pycbc.inference.sampler.emcee module": [[65, "module-pycbc.inference.sampler.emcee"]], "pycbc.inference.sampler.emcee_pt module": [[65, "module-pycbc.inference.sampler.emcee_pt"]], "pycbc.inference.sampler.epsie module": [[65, "module-pycbc.inference.sampler.epsie"]], "pycbc.inference.sampler.games module": [[65, "module-pycbc.inference.sampler.games"]], "pycbc.inference.sampler.multinest module": [[65, "module-pycbc.inference.sampler.multinest"]], "pycbc.inference.sampler.nessai module": [[65, "module-pycbc.inference.sampler.nessai"]], "pycbc.inference.sampler.ptemcee module": [[65, "module-pycbc.inference.sampler.ptemcee"]], "pycbc.inference.sampler.refine module": [[65, "module-pycbc.inference.sampler.refine"]], "pycbc.inference.sampler.snowline module": [[65, "module-pycbc.inference.sampler.snowline"]], "pycbc.inference.sampler.ultranest module": [[65, "module-pycbc.inference.sampler.ultranest"]], "pycbc.inject package": [[66, null]], "pycbc.inject.inject module": [[66, "module-pycbc.inject.inject"]], "pycbc.inject.injfilterrejector module": [[66, "module-pycbc.inject.injfilterrejector"]], "pycbc.io package": [[67, null]], "pycbc.io.gracedb module": [[67, "module-pycbc.io.gracedb"]], "pycbc.io.hdf module": [[67, "module-pycbc.io.hdf"]], "pycbc.io.ligolw module": [[67, "module-pycbc.io.ligolw"]], "pycbc.io.live module": [[67, "module-pycbc.io.live"]], "pycbc.io.record module": [[67, "module-pycbc.io.record"]], "pycbc.libutils module": [[52, "module-pycbc.libutils"]], "pycbc.live package": [[68, null]], "pycbc.live.significance_fits module": [[68, "module-pycbc.live.significance_fits"]], "pycbc.live.snr_optimizer module": [[68, "module-pycbc.live.snr_optimizer"]], "pycbc.live.supervision module": [[68, "module-pycbc.live.supervision"]], "pycbc.mchirp_area module": [[52, "module-pycbc.mchirp_area"]], "pycbc.neutron_stars package": [[69, null]], "pycbc.neutron_stars.eos_utils module": [[69, "module-pycbc.neutron_stars.eos_utils"]], "pycbc.neutron_stars.pg_isso_solver module": [[69, "module-pycbc.neutron_stars.pg_isso_solver"]], "pycbc.noise package": [[70, null]], "pycbc.noise.gaussian module": [[70, "module-pycbc.noise.gaussian"]], "pycbc.noise.reproduceable module": [[70, "module-pycbc.noise.reproduceable"]], "pycbc.opt module": [[52, "module-pycbc.opt"]], "pycbc.pnutils module": [[52, "module-pycbc.pnutils"]], "pycbc.pool module": [[52, "module-pycbc.pool"]], "pycbc.population package": [[71, null]], "pycbc.population.fgmc_functions module": [[71, "module-pycbc.population.fgmc_functions"]], "pycbc.population.fgmc_laguerre module": [[71, "module-pycbc.population.fgmc_laguerre"]], "pycbc.population.fgmc_plots module": [[71, "module-pycbc.population.fgmc_plots"]], "pycbc.population.live_pastro module": [[71, "module-pycbc.population.live_pastro"]], "pycbc.population.live_pastro_utils module": [[71, "module-pycbc.population.live_pastro_utils"]], "pycbc.population.population_models module": [[71, "module-pycbc.population.population_models"]], "pycbc.population.rates_functions module": [[71, "module-pycbc.population.rates_functions"]], "pycbc.population.scale_injections module": [[71, "module-pycbc.population.scale_injections"]], "pycbc.psd package": [[72, null]], "pycbc.psd.analytical module": [[72, "module-pycbc.psd.analytical"]], "pycbc.psd.analytical_space module": [[72, "module-pycbc.psd.analytical_space"]], "pycbc.psd.estimate module": [[72, "module-pycbc.psd.estimate"]], "pycbc.psd.read module": [[72, "module-pycbc.psd.read"]], "pycbc.psd.variation module": [[72, "module-pycbc.psd.variation"]], "pycbc.rate module": [[52, "module-pycbc.rate"]], "pycbc.results package": [[73, null]], "pycbc.results.color module": [[73, "module-pycbc.results.color"]], "pycbc.results.dq module": [[73, "module-pycbc.results.dq"]], "pycbc.results.followup module": [[73, "module-pycbc.results.followup"]], "pycbc.results.layout module": [[73, "module-pycbc.results.layout"]], "pycbc.results.metadata module": [[73, "module-pycbc.results.metadata"]], "pycbc.results.mpld3_utils module": [[73, "module-pycbc.results.mpld3_utils"]], "pycbc.results.plot module": [[73, "module-pycbc.results.plot"]], "pycbc.results.psd module": [[73, "module-pycbc.results.psd"]], "pycbc.results.pygrb_plotting_utils module": [[73, "module-pycbc.results.pygrb_plotting_utils"]], "pycbc.results.pygrb_postprocessing_utils module": [[73, "module-pycbc.results.pygrb_postprocessing_utils"]], "pycbc.results.render module": [[73, "module-pycbc.results.render"]], "pycbc.results.scatter_histograms module": [[73, "module-pycbc.results.scatter_histograms"]], "pycbc.results.snr module": [[73, "module-pycbc.results.snr"]], "pycbc.results.str_utils module": [[73, "module-pycbc.results.str_utils"]], "pycbc.results.table_utils module": [[73, "module-pycbc.results.table_utils"]], "pycbc.results.versioning module": [[73, "module-pycbc.results.versioning"]], "pycbc.scheme module": [[52, "module-pycbc.scheme"]], "pycbc.sensitivity module": [[52, "module-pycbc.sensitivity"]], "pycbc.strain package": [[74, null]], "pycbc.strain.calibration module": [[74, "module-pycbc.strain.calibration"]], "pycbc.strain.gate module": [[74, "module-pycbc.strain.gate"]], "pycbc.strain.lines module": [[74, "module-pycbc.strain.lines"]], "pycbc.strain.recalibrate module": [[74, "module-pycbc.strain.recalibrate"]], "pycbc.strain.strain module": [[74, "module-pycbc.strain.strain"]], "pycbc.tmpltbank package": [[75, null]], "pycbc.tmpltbank.bank_conversions module": [[75, "module-pycbc.tmpltbank.bank_conversions"]], "pycbc.tmpltbank.bank_output_utils module": [[75, "module-pycbc.tmpltbank.bank_output_utils"]], "pycbc.tmpltbank.brute_force_methods module": [[75, "module-pycbc.tmpltbank.brute_force_methods"]], "pycbc.tmpltbank.calc_moments module": [[75, "module-pycbc.tmpltbank.calc_moments"]], "pycbc.tmpltbank.coord_utils module": [[75, "module-pycbc.tmpltbank.coord_utils"]], "pycbc.tmpltbank.lambda_mapping module": [[75, "module-pycbc.tmpltbank.lambda_mapping"]], "pycbc.tmpltbank.lattice_utils module": [[75, "module-pycbc.tmpltbank.lattice_utils"]], "pycbc.tmpltbank.option_utils module": [[75, "module-pycbc.tmpltbank.option_utils"]], "pycbc.tmpltbank.partitioned_bank module": [[75, "module-pycbc.tmpltbank.partitioned_bank"]], "pycbc.tmpltbank.sky_grid module": [[75, "module-pycbc.tmpltbank.sky_grid"]], "pycbc.transforms module": [[52, "module-pycbc.transforms"]], "pycbc.types package": [[76, null]], "pycbc.types.aligned module": [[76, "module-pycbc.types.aligned"]], "pycbc.types.array module": [[76, "module-pycbc.types.array"]], "pycbc.types.array_cpu module": [[76, "module-pycbc.types.array_cpu"]], "pycbc.types.array_cupy module": [[76, "module-pycbc.types.array_cupy"]], "pycbc.types.config module": [[76, "module-pycbc.types.config"]], "pycbc.types.frequencyseries module": [[76, "module-pycbc.types.frequencyseries"]], "pycbc.types.optparse module": [[76, "module-pycbc.types.optparse"]], "pycbc.types.timeseries module": [[76, "module-pycbc.types.timeseries"]], "pycbc.version module": [[52, "module-pycbc.version"]], "pycbc.vetoes package": [[77, null]], "pycbc.vetoes.autochisq module": [[77, "module-pycbc.vetoes.autochisq"]], "pycbc.vetoes.bank_chisq module": [[77, "module-pycbc.vetoes.bank_chisq"]], "pycbc.vetoes.chisq module": [[77, "module-pycbc.vetoes.chisq"]], "pycbc.vetoes.chisq_cpu module": [[77, "module-pycbc.vetoes.chisq_cpu"]], "pycbc.vetoes.chisq_cupy module": [[77, "module-pycbc.vetoes.chisq_cupy"]], "pycbc.vetoes.sgchisq module": [[77, "module-pycbc.vetoes.sgchisq"]], "pycbc.waveform package": [[78, null]], "pycbc.waveform.bank module": [[78, "module-pycbc.waveform.bank"]], "pycbc.waveform.compress module": [[78, "module-pycbc.waveform.compress"]], "pycbc.waveform.decompress_cpu module": [[78, "module-pycbc.waveform.decompress_cpu"]], "pycbc.waveform.decompress_cpu_cython module": [[78, "module-pycbc.waveform.decompress_cpu_cython"]], "pycbc.waveform.decompress_cupy module": [[78, "module-pycbc.waveform.decompress_cupy"]], "pycbc.waveform.generator module": [[78, "module-pycbc.waveform.generator"]], "pycbc.waveform.multiband module": [[78, "module-pycbc.waveform.multiband"]], "pycbc.waveform.nltides module": [[78, "module-pycbc.waveform.nltides"]], "pycbc.waveform.parameters module": [[78, "module-pycbc.waveform.parameters"]], "pycbc.waveform.plugin module": [[78, "module-pycbc.waveform.plugin"]], "pycbc.waveform.premerger module": [[78, "module-pycbc.waveform.premerger"]], "pycbc.waveform.pycbc_phenomC_tmplt module": [[78, "pycbc-waveform-pycbc-phenomc-tmplt-module"]], "pycbc.waveform.ringdown module": [[78, "module-pycbc.waveform.ringdown"]], "pycbc.waveform.sinegauss module": [[78, "module-pycbc.waveform.sinegauss"]], "pycbc.waveform.spa_tmplt module": [[78, "module-pycbc.waveform.spa_tmplt"]], "pycbc.waveform.spa_tmplt_cpu module": [[78, "module-pycbc.waveform.spa_tmplt_cpu"]], "pycbc.waveform.spa_tmplt_cupy module": [[78, "module-pycbc.waveform.spa_tmplt_cupy"]], "pycbc.waveform.supernovae module": [[78, "module-pycbc.waveform.supernovae"]], "pycbc.waveform.utils module": [[78, "module-pycbc.waveform.utils"]], "pycbc.waveform.utils_cpu module": [[78, "module-pycbc.waveform.utils_cpu"]], "pycbc.waveform.utils_cupy module": [[78, "module-pycbc.waveform.utils_cupy"]], "pycbc.waveform.waveform module": [[78, "module-pycbc.waveform.waveform"]], "pycbc.waveform.waveform_modes module": [[78, "module-pycbc.waveform.waveform_modes"]], "pycbc.workflow package": [[79, null]], "pycbc.workflow.coincidence module": [[79, "module-pycbc.workflow.coincidence"]], "pycbc.workflow.configparser_test module": [[79, "module-pycbc.workflow.configparser_test"]], "pycbc.workflow.configuration Module": [[92, "pycbc-workflow-configuration-module"]], "pycbc.workflow.configuration module": [[79, "module-pycbc.workflow.configuration"]], "pycbc.workflow.core module": [[79, "module-pycbc.workflow.core"]], "pycbc.workflow.datafind Module": [[90, "pycbc-workflow-datafind-module"]], "pycbc.workflow.datafind module": [[79, "module-pycbc.workflow.datafind"]], "pycbc.workflow.dq module": [[79, "module-pycbc.workflow.dq"]], "pycbc.workflow.grb_utils module": [[79, "module-pycbc.workflow.grb_utils"]], "pycbc.workflow.inference_followups module": [[79, "module-pycbc.workflow.inference_followups"]], "pycbc.workflow.injection Module": [[93, "pycbc-workflow-injection-module"]], "pycbc.workflow.injection module": [[79, "module-pycbc.workflow.injection"]], "pycbc.workflow.jobsetup module": [[79, "module-pycbc.workflow.jobsetup"]], "pycbc.workflow.matched_filter Module": [[94, "pycbc-workflow-matched-filter-module"]], "pycbc.workflow.matched_filter module": [[79, "module-pycbc.workflow.matched_filter"]], "pycbc.workflow.minifollowups module": [[79, "module-pycbc.workflow.minifollowups"]], "pycbc.workflow.pegasus_sites module": [[79, "module-pycbc.workflow.pegasus_sites"]], "pycbc.workflow.pegasus_workflow module": [[79, "module-pycbc.workflow.pegasus_workflow"]], "pycbc.workflow.plotting module": [[79, "module-pycbc.workflow.plotting"]], "pycbc.workflow.psd module": [[79, "module-pycbc.workflow.psd"]], "pycbc.workflow.psdfiles module": [[79, "module-pycbc.workflow.psdfiles"]], "pycbc.workflow.segment Module": [[100, "pycbc-workflow-segment-module"]], "pycbc.workflow.segment module": [[79, "module-pycbc.workflow.segment"]], "pycbc.workflow.splittable Module": [[101, "pycbc-workflow-splittable-module"]], "pycbc.workflow.splittable module": [[79, "module-pycbc.workflow.splittable"]], "pycbc.workflow.tmpltbank Module": [[102, "pycbc-workflow-tmpltbank-module"]], "pycbc.workflow.tmpltbank module": [[79, "module-pycbc.workflow.tmpltbank"]], "pycbc.workflow.versioning module": [[79, "module-pycbc.workflow.versioning"]], "pycbc_condition_strain: operations with strain data files": [[80, null]], "pycbc_geom_nonspinbank": [[102, "pycbc-geom-nonspinbank"]], "pycbc_inspiral": [[94, "pycbc-inspiral"]], "pycbc_make_inference_inj_workflow: A parameter estimation workflow generator for injections": [[95, null]], "pycbc_make_inference_workflow: A parameter estimation workflow generator": [[96, null]], "pycbc_make_offline_grb_workflow: A GRB triggered CBC analysis workflow generator": [[99, null]], "pycbc_make_offline_search_workflow: A workflow to search for gravitational waves": [[97, null]], "pycbc_make_psd_estimation_workflow: A workflow generator for noise estimation": [[98, null]], "pycbc_splitbank": [[101, "pycbc-splitbank"]], "region reference arrays": [[24, "id7"]], "reserved columns": [[24, "id5"]], "single inspiral triggers": [[24, "single-inspiral-triggers"]], "which(executable)": [[92, "which-executable"]]}, "docnames": ["_include/distributions-table", "_include/inference_data_opts-table", "_include/inference_io_inheritance_diagrams", "_include/models-table", "_include/psd_models-table", "_include/sampler_inheritance_diagrams", "_include/samplers-table", "_include/transforms-table", "_include/waveform-parameters", "apps", "banksim", "build_gh_pages", "catalog", "credit", "dataquality", "detector", "devs", "distributions", "docker", "documentation", "extend", "faithsim", "fft", "filter", "formats/hdf_format", "frame", "genindex", "gw150914", "hwinj", "index", "inference", "inference/examples/analytic", "inference/examples/bbh", "inference/examples/gw150914", "inference/examples/hierarchical", "inference/examples/lisa_smbhb_inj_pe", "inference/examples/lisa_smbhb_ldc_pe", "inference/examples/margtime", "inference/examples/relative", "inference/examples/sampler_platter", "inference/examples/single", "inference/io", "inference/models", "inference/sampler_api", "inference/viz", "install", "install_cuda", "install_lalsuite", "install_virtualenv", "modules", "noise", "psd", "pycbc", "pycbc.catalog", "pycbc.coordinates", "pycbc.detector", "pycbc.distributions", "pycbc.events", "pycbc.fft", "pycbc.filter", "pycbc.frame", "pycbc.inference", "pycbc.inference.io", "pycbc.inference.jump", "pycbc.inference.models", "pycbc.inference.sampler", "pycbc.inject", "pycbc.io", "pycbc.live", "pycbc.neutron_stars", "pycbc.noise", "pycbc.population", "pycbc.psd", "pycbc.results", "pycbc.strain", "pycbc.tmpltbank", "pycbc.types", "pycbc.vetoes", "pycbc.waveform", "pycbc.workflow", "pycbc_condition_strain", "release", "searches", "searches/ranking_statistic", "tmpltbank", "tutorials", "upload_to_gracedb", "waveform", "waveform_plugin", "workflow", "workflow/datafind", "workflow/hdf_coincidence", "workflow/initialization", "workflow/injections", "workflow/matched_filter", "workflow/pycbc_make_inference_inj_workflow", "workflow/pycbc_make_inference_workflow", "workflow/pycbc_make_offline_search_workflow", "workflow/pycbc_make_psd_estimation_workflow", "workflow/pygrb", "workflow/segments", "workflow/splittable", "workflow/template_bank"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_include/distributions-table.rst", "_include/inference_data_opts-table.rst", "_include/inference_io_inheritance_diagrams.rst", "_include/models-table.rst", "_include/psd_models-table.rst", "_include/sampler_inheritance_diagrams.rst", "_include/samplers-table.rst", "_include/transforms-table.rst", "_include/waveform-parameters.rst", "apps.rst", "banksim.rst", "build_gh_pages.rst", "catalog.rst", "credit.rst", "dataquality.rst", "detector.rst", "devs.rst", "distributions.rst", "docker.rst", "documentation.rst", "extend.rst", "faithsim.rst", "fft.rst", "filter.rst", "formats/hdf_format.rst", "frame.rst", "genindex.rst", "gw150914.rst", "hwinj.rst", "index.rst", "inference.rst", "inference/examples/analytic.rst", "inference/examples/bbh.rst", "inference/examples/gw150914.rst", "inference/examples/hierarchical.rst", "inference/examples/lisa_smbhb_inj_pe.rst", "inference/examples/lisa_smbhb_ldc_pe.rst", "inference/examples/margtime.rst", "inference/examples/relative.rst", "inference/examples/sampler_platter.rst", "inference/examples/single.rst", "inference/io.rst", "inference/models.rst", "inference/sampler_api.rst", "inference/viz.rst", "install.rst", "install_cuda.rst", "install_lalsuite.rst", "install_virtualenv.rst", "modules.rst", "noise.rst", "psd.rst", "pycbc.rst", "pycbc.catalog.rst", "pycbc.coordinates.rst", "pycbc.detector.rst", "pycbc.distributions.rst", "pycbc.events.rst", "pycbc.fft.rst", "pycbc.filter.rst", "pycbc.frame.rst", "pycbc.inference.rst", "pycbc.inference.io.rst", "pycbc.inference.jump.rst", "pycbc.inference.models.rst", "pycbc.inference.sampler.rst", "pycbc.inject.rst", "pycbc.io.rst", "pycbc.live.rst", "pycbc.neutron_stars.rst", "pycbc.noise.rst", "pycbc.population.rst", "pycbc.psd.rst", "pycbc.results.rst", "pycbc.strain.rst", "pycbc.tmpltbank.rst", "pycbc.types.rst", "pycbc.vetoes.rst", "pycbc.waveform.rst", "pycbc.workflow.rst", "pycbc_condition_strain.rst", "release.rst", "searches.rst", "searches/ranking_statistic.rst", "tmpltbank.rst", "tutorials.rst", "upload_to_gracedb.rst", "waveform.rst", "waveform_plugin.rst", "workflow.rst", "workflow/datafind.rst", "workflow/hdf_coincidence.rst", "workflow/initialization.rst", "workflow/injections.rst", "workflow/matched_filter.rst", "workflow/pycbc_make_inference_inj_workflow.rst", "workflow/pycbc_make_inference_workflow.rst", "workflow/pycbc_make_offline_search_workflow.rst", "workflow/pycbc_make_psd_estimation_workflow.rst", "workflow/pygrb.rst", "workflow/segments.rst", "workflow/splittable.rst", "workflow/template_bank.rst"], "indexentries": {"a0() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.A0", false]], "a3() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.A3", false]], "abs_arg_max() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.abs_arg_max", false]], "abs_arg_max() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.abs_arg_max", false]], "abs_arg_max() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.abs_arg_max", false]], "abs_arg_max_complex() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.abs_arg_max_complex", false]], "abs_max_loc() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.abs_max_loc", false]], "abs_max_loc() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.abs_max_loc", false]], "abs_max_loc() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.abs_max_loc", false]], "acl (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.acl", false]], "acl (pycbc.inference.sampler.base_mcmc.ensemblesupport property)": [[65, "pycbc.inference.sampler.base_mcmc.EnsembleSupport.acl", false]], "acl (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.acl", false]], "acl() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.acl", false]], "acl_from_raw_acls() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.acl_from_raw_acls", false]], "act (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.act", false]], "act (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.act", false]], "actions (pycbc.inference.io.resultsargumentparser property)": [[62, "pycbc.inference.io.ResultsArgumentParser.actions", false]], "adaptation_lag (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.adaptation_lag", false]], "adaptation_time (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.adaptation_time", false]], "adaptive (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.adaptive", false]], "add() (pycbc.events.coinc.coincexpirebuffer method)": [[57, "pycbc.events.coinc.CoincExpireBuffer.add", false]], "add() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.add", false]], "add_approximant_arg() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.add_approximant_arg", false]], "add_arg() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_arg", false]], "add_background() (pycbc.population.fgmc_functions.backgroundeventrate method)": [[71, "pycbc.population.fgmc_functions.BackgroundEventRate.add_background", false]], "add_bank() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.add_bank", false]], "add_common_pycbc_options() (in module pycbc)": [[52, "pycbc.add_common_pycbc_options", false]], "add_condorpool_copy_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_condorpool_copy_site", false]], "add_condorpool_shared_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_condorpool_shared_site", false]], "add_condorpool_symlink_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_condorpool_symlink_site", false]], "add_container() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_container", false]], "add_custom_waveform() (in module pycbc.waveform.plugin)": [[78, "pycbc.waveform.plugin.add_custom_waveform", false]], "add_density_option_group() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.add_density_option_group", false]], "add_detector_on_earth() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.add_detector_on_earth", false]], "add_end_frequency_estimator() (in module pycbc.waveform.plugin)": [[78, "pycbc.waveform.plugin.add_end_frequency_estimator", false]], "add_explicit_dependancy() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_explicit_dependancy", false]], "add_fields() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.add_fields", false]], "add_functions() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.add_functions", false]], "add_gate_option_group() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.add_gate_option_group", false]], "add_hard_count() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.add_hard_count", false]], "add_ini_profile() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.add_ini_profile", false]], "add_ini_site_profile() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_ini_site_profile", false]], "add_injections() (pycbc.population.fgmc_functions.signaleventrate method)": [[71, "pycbc.population.fgmc_functions.SignalEventRate.add_injections", false]], "add_injsamples_map_opt() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.add_injsamples_map_opt", false]], "add_input() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_input", false]], "add_input_arg() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_input_arg", false]], "add_input_list_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_input_list_opt", false]], "add_input_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_input_opt", false]], "add_into() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.add_into", false]], "add_into_workflow() (pycbc.workflow.pegasus_workflow.subworkflow method)": [[79, "pycbc.workflow.pegasus_workflow.SubWorkflow.add_into_workflow", false]], "add_length_estimator() (in module pycbc.waveform.plugin)": [[78, "pycbc.waveform.plugin.add_length_estimator", false]], "add_list_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_list_opt", false]], "add_live_significance_duration_bin_options() (in module pycbc.live.significance_fits)": [[68, "pycbc.live.significance_fits.add_live_significance_duration_bin_options", false]], "add_live_significance_trigger_pruning_options() (in module pycbc.live.significance_fits)": [[68, "pycbc.live.significance_fits.add_live_significance_trigger_pruning_options", false]], "add_live_trigger_selection_options() (in module pycbc.io.live)": [[67, "pycbc.io.live.add_live_trigger_selection_options", false]], "add_local_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_local_site", false]], "add_metadata() (pycbc.workflow.core.file method)": [[79, "pycbc.workflow.core.File.add_metadata", false]], "add_methods() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.add_methods", false]], "add_multiifo_input_list_opt() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.add_multiifo_input_list_opt", false]], "add_multiifo_output_list_opt() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.add_multiifo_output_list_opt", false]], "add_node() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_node", false]], "add_opt() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.add_opt", false]], "add_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_opt", false]], "add_options_to_section() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.add_options_to_section", false]], "add_options_to_section() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.add_options_to_section", false]], "add_osg_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_osg_site", false]], "add_output() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_output", false]], "add_output_arg() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_output_arg", false]], "add_output_list_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_output_list_opt", false]], "add_output_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_output_opt", false]], "add_pfn() (pycbc.workflow.pegasus_workflow.file method)": [[79, "pycbc.workflow.pegasus_workflow.File.add_pfn", false]], "add_planner_arg() (pycbc.workflow.pegasus_workflow.subworkflow method)": [[79, "pycbc.workflow.pegasus_workflow.SubWorkflow.add_planner_arg", false]], "add_plot_posterior_option_group() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.add_plot_posterior_option_group", false]], "add_point_by_chi_coords() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_point_by_chi_coords", false]], "add_point_by_masses() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_point_by_masses", false]], "add_profile() (pycbc.workflow.pegasus_workflow.executable method)": [[79, "pycbc.workflow.pegasus_workflow.Executable.add_profile", false]], "add_profile() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_profile", false]], "add_properties() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.add_properties", false]], "add_raw_arg() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.add_raw_arg", false]], "add_results_option_group() (pycbc.inference.io.resultsargumentparser method)": [[62, "pycbc.inference.io.ResultsArgumentParser.add_results_option_group", false]], "add_scatter_option_group() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.add_scatter_option_group", false]], "add_singles() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.add_singles", false]], "add_site() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_site", false]], "add_site_pegasus_profile() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.add_site_pegasus_profile", false]], "add_style_opt_to_parser() (in module pycbc.results.plot)": [[73, "pycbc.results.plot.add_style_opt_to_parser", false]], "add_subworkflow_dependancy() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_subworkflow_dependancy", false]], "add_template_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.add_template_events", false]], "add_template_events_to_network() (pycbc.events.eventmgr.eventmanagercoherent method)": [[57, "pycbc.events.eventmgr.EventManagerCoherent.add_template_events_to_network", false]], "add_template_network_events() (pycbc.events.eventmgr.eventmanagercoherent method)": [[57, "pycbc.events.eventmgr.EventManagerCoherent.add_template_network_events", false]], "add_template_params() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.add_template_params", false]], "add_tmpltbank_from_hdf_file() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_tmpltbank_from_hdf_file", false]], "add_tmpltbank_from_xml_table() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_tmpltbank_from_xml_table", false]], "add_transformation() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_transformation", false]], "add_virtualfields() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.add_virtualfields", false]], "add_workflow() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.add_workflow", false]], "add_workflow_command_line_group() (in module pycbc.workflow.configuration)": [[79, "pycbc.workflow.configuration.add_workflow_command_line_group", false]], "add_workflow_settings_cli() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.add_workflow_settings_cli", false]], "add_zerolag() (pycbc.population.fgmc_functions.foregroundevents method)": [[71, "pycbc.population.fgmc_functions.ForegroundEvents.add_zerolag", false]], "addattr() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.addattr", false]], "adjust_strain() (pycbc.strain.recalibrate.physicalmodel method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.adjust_strain", false]], "advance() (pycbc.frame.frame.databuffer method)": [[60, "pycbc.frame.frame.DataBuffer.advance", false]], "advance() (pycbc.frame.frame.idqbuffer method)": [[60, "pycbc.frame.frame.iDQBuffer.advance", false]], "advance() (pycbc.frame.frame.statusbuffer method)": [[60, "pycbc.frame.frame.StatusBuffer.advance", false]], "advance() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.advance", false]], "advance_time() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.advance_time", false]], "advbnsoptimizedsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVBNSOptimizedSensitivityP1200087", false]], "advdesignsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVDesignSensitivityP1200087", false]], "advearlyhighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVEarlyHighSensitivityP1200087", false]], "advearlylowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVEarlyLowSensitivityP1200087", false]], "advlatehighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVLateHighSensitivityP1200087", false]], "advlatelowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVLateLowSensitivityP1200087", false]], "advmidhighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVMidHighSensitivityP1200087", false]], "advmidlowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVMidLowSensitivityP1200087", false]], "advo3lowt1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVO3LowT1800545", false]], "advo4intermediatet1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVO4IntermediateT1800545", false]], "advo4t1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdVO4T1800545", false]], "advvirgo() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.AdvVirgo", false]], "aliases (pycbc.io.record.fieldarray property)": [[67, "pycbc.io.record.FieldArray.aliases", false]], "alignedmassspintocartesianspin (class in pycbc.transforms)": [[52, "pycbc.transforms.AlignedMassSpinToCartesianSpin", false]], "aligntotalspin (class in pycbc.transforms)": [[52, "pycbc.transforms.AlignTotalSpin", false]], "aligo140mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGO140MpcT1800545", false]], "aligo175mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGO175MpcT1800545", false]], "aligoadvo3lowt1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOAdVO3LowT1800545", false]], "aligoadvo4intermediatet1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOAdVO4IntermediateT1800545", false]], "aligoadvo4t1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOAdVO4T1800545", false]], "aligoaligo140mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOaLIGO140MpcT1800545", false]], "aligoaligo175mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOaLIGO175MpcT1800545", false]], "aligoaligodesignsensitivityt1800044() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOaLIGODesignSensitivityT1800044", false]], "aligoaligoo3lowt1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOaLIGOO3LowT1800545", false]], "aligoaplusdesignsensitivityt1800042() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOAPlusDesignSensitivityT1800042", false]], "aligobhbh20deg() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOBHBH20Deg", false]], "aligobhbh20deggwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOBHBH20DegGWINC", false]], "aligobnsoptimizedsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOBNSOptimizedSensitivityP1200087", false]], "aligodesignsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGODesignSensitivityP1200087", false]], "aligodesignsensitivityt1800044() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGODesignSensitivityT1800044", false]], "aligoearlyhighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOEarlyHighSensitivityP1200087", false]], "aligoearlylowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOEarlyLowSensitivityP1200087", false]], "aligohighfrequency() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOHighFrequency", false]], "aligohighfrequencygwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOHighFrequencyGWINC", false]], "aligokagra128mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOKAGRA128MpcT1800545", false]], "aligokagra25mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOKAGRA25MpcT1800545", false]], "aligokagra80mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOKAGRA80MpcT1800545", false]], "aligolatehighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOLateHighSensitivityP1200087", false]], "aligolatelowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOLateLowSensitivityP1200087", false]], "aligomidhighsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOMidHighSensitivityP1200087", false]], "aligomidlowsensitivityp1200087() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOMidLowSensitivityP1200087", false]], "aligonosrmhighpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGONoSRMHighPower", false]], "aligonosrmlowpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGONoSRMLowPower", false]], "aligonosrmlowpowergwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGONoSRMLowPowerGWINC", false]], "aligonsnsopt() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGONSNSOpt", false]], "aligonsnsoptgwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGONSNSOptGWINC", false]], "aligoo3lowt1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOO3LowT1800545", false]], "aligoquantumbhbh20deg() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumBHBH20Deg", false]], "aligoquantumhighfrequency() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumHighFrequency", false]], "aligoquantumnosrmhighpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumNoSRMHighPower", false]], "aligoquantumnosrmlowpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumNoSRMLowPower", false]], "aligoquantumnsnsopt() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumNSNSOpt", false]], "aligoquantumzerodethighpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumZeroDetHighPower", false]], "aligoquantumzerodetlowpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOQuantumZeroDetLowPower", false]], "aligothermal() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOThermal", false]], "aligozerodethighpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOZeroDetHighPower", false]], "aligozerodethighpowergwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOZeroDetHighPowerGWINC", false]], "aligozerodetlowpower() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOZeroDetLowPower", false]], "aligozerodetlowpowergwinc() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.aLIGOZeroDetLowPowerGWINC", false]], "all_triggers (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.ALL_TRIGGERS", false]], "allmap() (pycbc.pool.broadcastpool method)": [[52, "pycbc.pool.BroadcastPool.allmap", false]], "alltimes() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.alltimes", false]], "almost_equal_elem() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.almost_equal_elem", false]], "almost_equal_elem() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.almost_equal_elem", false]], "almost_equal_elem() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.almost_equal_elem", false]], "almost_equal_norm() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.almost_equal_norm", false]], "almost_equal_norm() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.almost_equal_norm", false]], "almost_equal_norm() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.almost_equal_norm", false]], "amplitude (pycbc.waveform.compress.compressedwaveform property)": [[78, "pycbc.waveform.compress.CompressedWaveform.amplitude", false]], "amplitude_from_frequencyseries() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.amplitude_from_frequencyseries", false]], "amplitude_from_polarizations() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.amplitude_from_polarizations", false]], "analytical_csd_lisa_tdi_xy() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_csd_lisa_tdi_XY", false]], "analytical_psd_lisa_tdi_ae() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_lisa_tdi_AE", false]], "analytical_psd_lisa_tdi_ae_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_lisa_tdi_AE_confusion", false]], "analytical_psd_lisa_tdi_t() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_lisa_tdi_T", false]], "analytical_psd_lisa_tdi_xyz() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_lisa_tdi_XYZ", false]], "analytical_psd_taiji_confusion_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_taiji_confusion_noise", false]], "analytical_psd_taiji_tdi_ae() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_taiji_tdi_AE", false]], "analytical_psd_taiji_tdi_ae_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_taiji_tdi_AE_confusion", false]], "analytical_psd_taiji_tdi_t() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_taiji_tdi_T", false]], "analytical_psd_taiji_tdi_xyz() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_taiji_tdi_XYZ", false]], "analytical_psd_tianqin_confusion_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_tianqin_confusion_noise", false]], "analytical_psd_tianqin_tdi_ae() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_tianqin_tdi_AE", false]], "analytical_psd_tianqin_tdi_ae_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_tianqin_tdi_AE_confusion", false]], "analytical_psd_tianqin_tdi_t() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_tianqin_tdi_T", false]], "analytical_psd_tianqin_tdi_xyz() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.analytical_psd_tianqin_tdi_XYZ", false]], "and_masks() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.and_masks", false]], "angle_as_radians() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.angle_as_radians", false]], "antenna_pattern() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.antenna_pattern", false]], "append() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.append", false]], "append_zeros() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.append_zeros", false]], "apply() (pycbc.inference.models.base.samplingtransforms method)": [[64, "pycbc.inference.models.base.SamplingTransforms.apply", false]], "apply() (pycbc.inject.inject.cbchdfinjectionset method)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.apply", false]], "apply() (pycbc.inject.inject.incoherentfromfilehdfinjectionset method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.apply", false]], "apply() (pycbc.inject.inject.ringdownhdfinjectionset method)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.apply", false]], "apply() (pycbc.inject.inject.sgburstinjectionset method)": [[66, "pycbc.inject.inject.SGBurstInjectionSet.apply", false]], "apply_boundary_conditions() (pycbc.distributions.angular.uniformangle method)": [[56, "pycbc.distributions.angular.UniformAngle.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.angular.uniformsolidangle method)": [[56, "pycbc.distributions.angular.UniformSolidAngle.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.bounded.boundeddist method)": [[56, "pycbc.distributions.bounded.BoundedDist.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.external.external method)": [[56, "pycbc.distributions.external.External.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.fixedsamples.fixedsamples method)": [[56, "pycbc.distributions.fixedsamples.FixedSamples.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.joint.jointdistribution method)": [[56, "pycbc.distributions.joint.JointDistribution.apply_boundary_conditions", false]], "apply_boundary_conditions() (pycbc.distributions.spins.independentchipchieff method)": [[56, "pycbc.distributions.spins.IndependentChiPChiEff.apply_boundary_conditions", false]], "apply_calibration() (pycbc.strain.calibration.cubicspline method)": [[74, "pycbc.strain.calibration.CubicSpline.apply_calibration", false]], "apply_calibration() (pycbc.strain.calibration.recalibrate method)": [[74, "pycbc.strain.calibration.Recalibrate.apply_calibration", false]], "apply_calibration() (pycbc.strain.recalibrate.cubicspline method)": [[74, "pycbc.strain.recalibrate.CubicSpline.apply_calibration", false]], "apply_calibration() (pycbc.strain.recalibrate.recalibrate method)": [[74, "pycbc.strain.recalibrate.Recalibrate.apply_calibration", false]], "apply_conditions() (pycbc.boundaries.bounds method)": [[52, "pycbc.boundaries.Bounds.apply_conditions", false]], "apply_cyclic() (in module pycbc.boundaries)": [[52, "pycbc.boundaries.apply_cyclic", false]], "apply_far_limit() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.apply_far_limit", false]], "apply_fd_time_shift() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.apply_fd_time_shift", false]], "apply_fseries_time_shift() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.apply_fseries_time_shift", false]], "apply_fseries_time_shift() (in module pycbc.waveform.utils_cpu)": [[78, "pycbc.waveform.utils_cpu.apply_fseries_time_shift", false]], "apply_fseries_time_shift() (in module pycbc.waveform.utils_cupy)": [[78, "pycbc.waveform.utils_cupy.apply_fseries_time_shift", false]], "apply_gates_to_fd() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.apply_gates_to_fd", false]], "apply_gates_to_td() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.apply_gates_to_td", false]], "apply_mask() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.apply_mask", false]], "apply_significance_limits() (pycbc.population.live_pastro_utils.pastrodata method)": [[71, "pycbc.population.live_pastro_utils.PAstroData.apply_significance_limits", false]], "apply_template_cuts() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.apply_template_cuts", false]], "apply_template_fit_cut() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.apply_template_fit_cut", false]], "apply_transforms() (in module pycbc.transforms)": [[52, "pycbc.transforms.apply_transforms", false]], "apply_trigger_cuts() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.apply_trigger_cuts", false]], "apply_vetoes_to_found_injs() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.apply_vetoes_to_found_injs", false]], "approximant (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.approximant", false]], "approximant() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.approximant", false]], "arbitrary (class in pycbc.distributions.arbitrary)": [[56, "pycbc.distributions.arbitrary.Arbitrary", false]], "argmax() (pycbc.bin_utils.binnedarray method)": [[52, "pycbc.bin_utils.BinnedArray.argmax", false]], "argmin() (pycbc.bin_utils.binnedarray method)": [[52, "pycbc.bin_utils.BinnedArray.argmin", false]], "arithmetic_mean_estimator() (in module pycbc.inference.evidence)": [[61, "pycbc.inference.evidence.arithmetic_mean_estimator", false]], "array (class in pycbc.types.array)": [[76, "pycbc.types.array.Array", false]], "arrival_time() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.arrival_time", false]], "asdict (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.asdict", false]], "aslist (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.aslist", false]], "assign_dq_rates() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.assign_dq_rates", false]], "assign_fits() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.assign_fits", false]], "assign_kdes() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.assign_kdes", false]], "assign_template_bins() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.assign_template_bins", false]], "associate_psds_to_multi_ifo_segments() (in module pycbc.psd)": [[72, "pycbc.psd.associate_psds_to_multi_ifo_segments", false]], "associate_psds_to_segments() (in module pycbc.psd)": [[72, "pycbc.psd.associate_psds_to_segments", false]], "associate_psds_to_single_ifo_segments() (in module pycbc.psd)": [[72, "pycbc.psd.associate_psds_to_single_ifo_segments", false]], "astro_redshifts() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.astro_redshifts", false]], "astype() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.astype", false]], "at_frequency() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.at_frequency", false]], "at_time() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.at_time", false]], "at_times() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.at_times", false]], "attempt_advance() (pycbc.frame.frame.databuffer method)": [[60, "pycbc.frame.frame.DataBuffer.attempt_advance", false]], "augmented_rv_continuous (class in pycbc.population.fgmc_laguerre)": [[71, "pycbc.population.fgmc_laguerre.augmented_rv_continuous", false]], "autochisq_from_precomputed() (in module pycbc.vetoes.autochisq)": [[77, "pycbc.vetoes.autochisq.autochisq_from_precomputed", false]], "available_models() (in module pycbc.inference.models)": [[64, "pycbc.inference.models.available_models", false]], "available_tests (pycbc.inference.burn_in.baseburnintests attribute)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.available_tests", false]], "available_tests (pycbc.inference.burn_in.ensemblemcmcburnintests attribute)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.available_tests", false]], "average_time_between_signals() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.average_time_between_signals", false]], "averaged_fplus_sq_approximated() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_fplus_sq_approximated", false]], "averaged_lisa_fplus_sq_numerical() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_lisa_fplus_sq_numerical", false]], "averaged_response_lisa_tdi() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_response_lisa_tdi", false]], "averaged_response_taiji_tdi() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_response_taiji_tdi", false]], "averaged_response_tianqin_tdi() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_response_tianqin_tdi", false]], "averaged_tianqin_fplus_sq_numerical() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.averaged_tianqin_fplus_sq_numerical", false]], "avg_inner_product() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.avg_inner_product", false]], "axis_max_value() (in module pycbc.results.pygrb_plotting_utils)": [[73, "pycbc.results.pygrb_plotting_utils.axis_max_value", false]], "axis_min_value() (in module pycbc.results.pygrb_plotting_utils)": [[73, "pycbc.results.pygrb_plotting_utils.axis_min_value", false]], "azimuthal_angle (pycbc.distributions.angular.uniformsolidangle property)": [[56, "pycbc.distributions.angular.UniformSolidAngle.azimuthal_angle", false]], "background_bin_from_string() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.background_bin_from_string", false]], "background_time (pycbc.events.coinc.livecoinctimeslidebackgroundestimator property)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.background_time", false]], "backgroundeventrate (class in pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.BackgroundEventRate", false]], "backout_last() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.backout_last", false]], "bandlimited_interpolate() (in module pycbc.psd.estimate)": [[72, "pycbc.psd.estimate.bandlimited_interpolate", false]], "bank_bins_from_cli() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.bank_bins_from_cli", false]], "bank_chisq_from_filters() (in module pycbc.vetoes.bank_chisq)": [[77, "pycbc.vetoes.bank_chisq.bank_chisq_from_filters", false]], "base_shape (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.base_shape", false]], "base_shape (pycbc.inference.sampler.emcee.emceeensemblesampler property)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.base_shape", false]], "base_shape (pycbc.inference.sampler.emcee_pt.emceeptsampler property)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.base_shape", false]], "base_shape (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.base_shape", false]], "base_shape (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.base_shape", false]], "baseburnintests (class in pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.BaseBurnInTests", false]], "basecbcgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.BaseCBCGenerator", false]], "basedatamodel (class in pycbc.inference.models.base_data)": [[64, "pycbc.inference.models.base_data.BaseDataModel", false]], "basefdomaindetframegenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator", false]], "basegatedgaussian (class in pycbc.inference.models.gated_gaussian_noise)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian", false]], "basegaussiannoise (class in pycbc.inference.models.gaussian_noise)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise", false]], "basegenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.BaseGenerator", false]], "baseinferencefile (class in pycbc.inference.io.base_hdf)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile", false]], "basemcmc (class in pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC", false]], "basemodel (class in pycbc.inference.models.base)": [[64, "pycbc.inference.models.base.BaseModel", false]], "basenestedsamplerfile (class in pycbc.inference.io.base_nested_sampler)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile", false]], "basesampler (class in pycbc.inference.sampler.base)": [[65, "pycbc.inference.sampler.base.BaseSampler", false]], "basesamplerfile (class in pycbc.inference.io.base_sampler)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile", false]], "basetransform (class in pycbc.transforms)": [[52, "pycbc.transforms.BaseTransform", false]], "batch_correlate_execute() (in module pycbc.filter.matchedfilter_cpu)": [[59, "pycbc.filter.matchedfilter_cpu.batch_correlate_execute", false]], "betas (pycbc.inference.io.emcee_pt.emceeptfile property)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.betas", false]], "betas (pycbc.inference.io.epsie.epsiefile property)": [[62, "pycbc.inference.io.epsie.EpsieFile.betas", false]], "betas (pycbc.inference.sampler.emcee_pt.emceeptsampler property)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.betas", false]], "betas (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.betas", false]], "betas (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.betas", false]], "betas_from_config() (pycbc.inference.sampler.base_multitemper.multitemperedsupport static method)": [[65, "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport.betas_from_config", false]], "binnedarray (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.BinnedArray", false]], "binnedratios (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.BinnedRatios", false]], "bins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.Bins", false]], "bins() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.bins", false]], "blob_data_to_dict() (in module pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.blob_data_to_dict", false]], "block() (in module pycbc.noise.reproduceable)": [[70, "pycbc.noise.reproduceable.block", false]], "boolargs_from_apprxstr() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.boolargs_from_apprxstr", false]], "bounded_from_config() (in module pycbc.distributions.bounded)": [[56, "pycbc.distributions.bounded.bounded_from_config", false]], "boundeddist (class in pycbc.distributions.bounded)": [[56, "pycbc.distributions.bounded.BoundedDist", false]], "bounds (class in pycbc.boundaries)": [[52, "pycbc.boundaries.Bounds", false]], "bounds (pycbc.distributions.angular.uniformsolidangle property)": [[56, "pycbc.distributions.angular.UniformSolidAngle.bounds", false]], "bounds (pycbc.distributions.bounded.boundeddist property)": [[56, "pycbc.distributions.bounded.BoundedDist.bounds", false]], "bounds (pycbc.distributions.joint.jointdistribution property)": [[56, "pycbc.distributions.joint.JointDistribution.bounds", false]], "bounds (pycbc.transforms.logistic property)": [[52, "pycbc.transforms.Logistic.bounds", false]], "bounds (pycbc.transforms.logit property)": [[52, "pycbc.transforms.Logit.bounds", false]], "broadcast() (pycbc.pool.broadcastpool method)": [[52, "pycbc.pool.BroadcastPool.broadcast", false]], "broadcast() (pycbc.pool.singlepool method)": [[52, "pycbc.pool.SinglePool.broadcast", false]], "broadcastpool (class in pycbc.pool)": [[52, "pycbc.pool.BroadcastPool", false]], "brutelisaskymodesmarginalize (class in pycbc.inference.models.brute_marg)": [[64, "pycbc.inference.models.brute_marg.BruteLISASkyModesMarginalize", false]], "bruteparallelgaussianmarginalize (class in pycbc.inference.models.brute_marg)": [[64, "pycbc.inference.models.brute_marg.BruteParallelGaussianMarginalize", false]], "build_segment_filelist() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.build_segment_filelist", false]], "burn_in (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.burn_in", false]], "burn_in_class (pycbc.inference.sampler.emcee.emceeensemblesampler attribute)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.burn_in_class", false]], "burn_in_class (pycbc.inference.sampler.emcee_pt.emceeptsampler attribute)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.burn_in_class", false]], "burn_in_class (pycbc.inference.sampler.epsie.epsiesampler attribute)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.burn_in_class", false]], "burn_in_class (pycbc.inference.sampler.ptemcee.ptemceesampler attribute)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.burn_in_class", false]], "burn_in_index (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.burn_in_index", false]], "burn_in_index() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.burn_in_index", false]], "burn_in_index() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.burn_in_index", false]], "burn_in_index() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.burn_in_index", false]], "burn_in_iteration (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.burn_in_iteration", false]], "c2c_correlate_ifft() (in module pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.c2c_correlate_ifft", false]], "c2c_half_correlate_ifft() (in module pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.c2c_half_correlate_ifft", false]], "cache_entry (pycbc.workflow.core.file property)": [[79, "pycbc.workflow.core.File.cache_entry", false]], "cache_overlaps() (pycbc.vetoes.bank_chisq.singledetbankveto method)": [[77, "pycbc.vetoes.bank_chisq.SingleDetBankVeto.cache_overlaps", false]], "cache_segment_snrs() (pycbc.vetoes.bank_chisq.singledetbankveto method)": [[77, "pycbc.vetoes.bank_chisq.SingleDetBankVeto.cache_segment_snrs", false]], "cached_arange() (in module pycbc.waveform.sinegauss)": [[78, "pycbc.waveform.sinegauss.cached_arange", false]], "cached_chisq_bins() (pycbc.vetoes.chisq.singledetpowerchisq method)": [[77, "pycbc.vetoes.chisq.SingleDetPowerChisq.cached_chisq_bins", false]], "calc_areas() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.calc_areas", false]], "calc_filt_psd_variation() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.calc_filt_psd_variation", false]], "calc_point_dist() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.calc_point_dist", false]], "calc_point_dist_vary() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.calc_point_dist_vary", false]], "calc_point_distance() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.calc_point_distance", false]], "calc_point_distance_vary() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.calc_point_distance_vary", false]], "calc_probabilities() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.calc_probabilities", false]], "calculate_acf() (in module pycbc.filter.autocorrelation)": [[59, "pycbc.filter.autocorrelation.calculate_acf", false]], "calculate_acl() (in module pycbc.filter.autocorrelation)": [[59, "pycbc.filter.autocorrelation.calculate_acl", false]], "calculate_antenna_patterns() (pycbc.tmpltbank.sky_grid.skygrid method)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.calculate_antenna_patterns", false]], "calculate_chisq_bins() (pycbc.vetoes.chisq.singledetskymaxpowerchisq method)": [[77, "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq.calculate_chisq_bins", false]], "calculate_ethinca_metric_comps() (in module pycbc.tmpltbank.bank_output_utils)": [[75, "pycbc.tmpltbank.bank_output_utils.calculate_ethinca_metric_comps", false]], "calculate_hihjs() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.calculate_hihjs", false]], "calculate_hihjs() (pycbc.inference.models.single_template.singletemplate method)": [[64, "pycbc.inference.models.single_template.SingleTemplate.calculate_hihjs", false]], "calculate_ifar() (pycbc.events.single.livesingle method)": [[57, "pycbc.events.single.LiveSingle.calculate_ifar", false]], "calculate_logevidence() (pycbc.inference.sampler.emcee_pt.emceeptsampler class method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.calculate_logevidence", false]], "calculate_logevidence() (pycbc.inference.sampler.ptemcee.ptemceesampler class method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.calculate_logevidence", false]], "calculate_metric() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.calculate_metric", false]], "calculate_metric_comp() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.calculate_metric_comp", false]], "calculate_moment() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.calculate_moment", false]], "calculate_time_delays() (pycbc.tmpltbank.sky_grid.skygrid method)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.calculate_time_delays", false]], "calibration_lines() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.calibration_lines", false]], "call_global_loglikelihood() (in module pycbc.inference.sampler.base_cube)": [[65, "pycbc.inference.sampler.base_cube.call_global_loglikelihood", false]], "call_global_logprior() (in module pycbc.inference.sampler.base_cube)": [[65, "pycbc.inference.sampler.base_cube.call_global_logprior", false]], "call_likelihood() (in module pycbc.inference.sampler.games)": [[65, "pycbc.inference.sampler.games.call_likelihood", false]], "call_model() (in module pycbc.inference.sampler.refine)": [[65, "pycbc.inference.sampler.refine.call_model", false]], "call_reconstruct() (in module pycbc.inference.sampler.dummy)": [[65, "pycbc.inference.sampler.dummy.call_reconstruct", false]], "callback_func() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.callback_func", false]], "calledprocesserrormod": [[79, "pycbc.workflow.core.CalledProcessErrorMod", false]], "callmodel (class in pycbc.inference.models)": [[64, "pycbc.inference.models.CallModel", false]], "candidateforgracedb (class in pycbc.io.gracedb)": [[67, "pycbc.io.gracedb.CandidateForGraceDB", false]], "cartesian_to_spherical() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.cartesian_to_spherical", false]], "cartesian_to_spherical() (in module pycbc.coordinates.base)": [[54, "pycbc.coordinates.base.cartesian_to_spherical", false]], "cartesian_to_spherical_azimuthal() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.cartesian_to_spherical_azimuthal", false]], "cartesian_to_spherical_azimuthal() (in module pycbc.coordinates.base)": [[54, "pycbc.coordinates.base.cartesian_to_spherical_azimuthal", false]], "cartesian_to_spherical_polar() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.cartesian_to_spherical_polar", false]], "cartesian_to_spherical_polar() (in module pycbc.coordinates.base)": [[54, "pycbc.coordinates.base.cartesian_to_spherical_polar", false]], "cartesian_to_spherical_rho() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.cartesian_to_spherical_rho", false]], "cartesian_to_spherical_rho() (in module pycbc.coordinates.base)": [[54, "pycbc.coordinates.base.cartesian_to_spherical_rho", false]], "cartesianspin1tosphericalspin1 (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianSpin1ToSphericalSpin1", false]], "cartesianspin2tosphericalspin2 (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianSpin2ToSphericalSpin2", false]], "cartesianspintoalignedmassspin (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin", false]], "cartesianspintochip (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianSpinToChiP", false]], "cartesianspintoprecessionmassspin (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin", false]], "cartesiantospherical (class in pycbc.transforms)": [[52, "pycbc.transforms.CartesianToSpherical", false]], "catalog (class in pycbc.catalog)": [[53, "pycbc.catalog.Catalog", false]], "catch_waveform_error() (in module pycbc.inference.models.gaussian_noise)": [[64, "pycbc.inference.models.gaussian_noise.catch_waveform_error", false]], "categorize_by_attr() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.categorize_by_attr", false]], "cbchdfinjectionset (class in pycbc.inject.inject)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet", false]], "cbrt_lookup() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.cbrt_lookup", false]], "ccorrf_parallel() (in module pycbc.filter.simd_correlate_cython)": [[59, "pycbc.filter.simd_correlate_cython.ccorrf_parallel", false]], "ccorrf_simd() (in module pycbc.filter.simd_correlate_cython)": [[59, "pycbc.filter.simd_correlate_cython.ccorrf_simd", false]], "cdf() (pycbc.distributions.gaussian.gaussian method)": [[56, "pycbc.distributions.gaussian.Gaussian.cdf", false]], "cdfinv() (pycbc.distributions.bounded.boundeddist method)": [[56, "pycbc.distributions.bounded.BoundedDist.cdfinv", false]], "cdfinv() (pycbc.distributions.fixedsamples.fixedsamples method)": [[56, "pycbc.distributions.fixedsamples.FixedSamples.cdfinv", false]], "cdfinv() (pycbc.distributions.joint.jointdistribution method)": [[56, "pycbc.distributions.joint.JointDistribution.cdfinv", false]], "ceilpow2() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.ceilpow2", false]], "censorforeground (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.CensorForeground", false]], "centres() (pycbc.bin_utils.binnedarray method)": [[52, "pycbc.bin_utils.BinnedArray.centres", false]], "centres() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.centres", false]], "centres() (pycbc.bin_utils.bins method)": [[52, "pycbc.bin_utils.Bins.centres", false]], "centres() (pycbc.bin_utils.irregularbins method)": [[52, "pycbc.bin_utils.IrregularBins.centres", false]], "centres() (pycbc.bin_utils.linearbins method)": [[52, "pycbc.bin_utils.LinearBins.centres", false]], "centres() (pycbc.bin_utils.linearplusoverflowbins method)": [[52, "pycbc.bin_utils.LinearPlusOverflowBins.centres", false]], "centres() (pycbc.bin_utils.logarithmicbins method)": [[52, "pycbc.bin_utils.LogarithmicBins.centres", false]], "centres() (pycbc.bin_utils.logarithmicplusoverflowbins method)": [[52, "pycbc.bin_utils.LogarithmicPlusOverflowBins.centres", false]], "centres() (pycbc.bin_utils.ndbins method)": [[52, "pycbc.bin_utils.NDBins.centres", false]], "chain (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.chain", false]], "check() (pycbc.events.single.livesingle method)": [[57, "pycbc.events.single.LiveSingle.check", false]], "check_aligned() (in module pycbc.types.aligned)": [[76, "pycbc.types.aligned.check_aligned", false]], "check_bin_existence() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.check_bin_existence", false]], "check_duplicate_options() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.check_duplicate_options", false]], "check_duplicate_options() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.check_duplicate_options", false]], "check_ethinca_against_bank_params() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.check_ethinca_against_bank_params", false]], "check_expired_triggers() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.check_expired_triggers", false]], "check_for_cartesian_spins() (in module pycbc.inference.models.base)": [[64, "pycbc.inference.models.base.check_for_cartesian_spins", false]], "check_for_nans() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.check_for_nans", false]], "check_hist_params() (in module pycbc.inference.entropy)": [[61, "pycbc.inference.entropy.check_hist_params", false]], "check_if_finished() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.check_if_finished", false]], "check_integrity() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.check_integrity", false]], "check_low_latency() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.check_low_latency", false]], "check_psd_dist() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.check_psd_dist", false]], "check_same_len_precision() (in module pycbc.types.array)": [[76, "pycbc.types.array.check_same_len_precision", false]], "check_significance_options() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.check_significance_options", false]], "check_snr_optimizer_options() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.check_snr_optimizer_options", false]], "check_status() (in module pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.check_status", false]], "check_template_param_bin_data() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.check_template_param_bin_data", false]], "check_update_cuts() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.check_update_cuts", false]], "check_update_files() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.check_update_files", false]], "check_valid() (pycbc.frame.frame.statusbuffer method)": [[60, "pycbc.frame.frame.StatusBuffer.check_valid", false]], "check_validtimes() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.check_validtimes", false]], "checkbank() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.checkbank", false]], "checkpoint() (pycbc.inference.sampler.base.basesampler method)": [[65, "pycbc.inference.sampler.base.BaseSampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.dummy.dummysampler method)": [[65, "pycbc.inference.sampler.dummy.DummySampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.snowline.snowlinesampler method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.checkpoint", false]], "checkpoint() (pycbc.inference.sampler.ultranest.ultranestsampler method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.checkpoint", false]], "checkpoint_callback() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.checkpoint_callback", false]], "checkpoint_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc static method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_from_config", false]], "checkpoint_interval (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_interval", false]], "checkpoint_interval (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.checkpoint_interval", false]], "checkpoint_signal (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_signal", false]], "chi_a() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_a", false]], "chi_eff (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.chi_eff", false]], "chi_eff() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_eff", false]], "chi_eff_from_spherical() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_eff_from_spherical", false]], "chi_p() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_p", false]], "chi_p_from_spherical() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_p_from_spherical", false]], "chi_p_from_xi1_xi2() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_p_from_xi1_xi2", false]], "chi_perp_from_mass1_mass2_xi2() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_perp_from_mass1_mass2_xi2", false]], "chi_perp_from_spinx_spiny() (in module pycbc.conversions)": [[52, "pycbc.conversions.chi_perp_from_spinx_spiny", false]], "chiptocartesianspin (class in pycbc.transforms)": [[52, "pycbc.transforms.ChiPToCartesianSpin", false]], "chirp_distance() (in module pycbc.conversions)": [[52, "pycbc.conversions.chirp_distance", false]], "chirp_distance() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.chirp_distance", false]], "chirp_volume_montecarlo() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.chirp_volume_montecarlo", false]], "chirpdistancetodistance (class in pycbc.transforms)": [[52, "pycbc.transforms.ChirpDistanceToDistance", false]], "chisq_accum_bin() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.chisq_accum_bin", false]], "chisq_accum_bin() (in module pycbc.vetoes.chisq_cpu)": [[77, "pycbc.vetoes.chisq_cpu.chisq_accum_bin", false]], "chisq_accum_bin() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.chisq_accum_bin", false]], "chisq_accum_bin_cython() (in module pycbc.vetoes.chisq_cpu)": [[77, "pycbc.vetoes.chisq_cpu.chisq_accum_bin_cython", false]], "chisq_accum_bin_numpy() (in module pycbc.vetoes.chisq_cpu)": [[77, "pycbc.vetoes.chisq_cpu.chisq_accum_bin_numpy", false]], "chisq_threshold() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.chisq_threshold", false]], "choose_pool() (in module pycbc.pool)": [[52, "pycbc.pool.choose_pool", false]], "choosebyschemedict (class in pycbc.scheme)": [[52, "pycbc.scheme.ChooseBySchemeDict", false]], "ckpt_signal_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc static method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.ckpt_signal_from_config", false]], "clean_cuda() (in module pycbc.scheme)": [[52, "pycbc.scheme.clean_cuda", false]], "clean_data() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.clean_data", false]], "clear() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.clear", false]], "clear() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.clear", false]], "clear() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.clear", false]], "clear_cache() (pycbc.waveform.compress.compressedwaveform method)": [[78, "pycbc.waveform.compress.CompressedWaveform.clear_cache", false]], "clear_samples() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.clear_samples", false]], "clear_samples() (pycbc.inference.sampler.emcee.emceeensemblesampler method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.clear_samples", false]], "clear_samples() (pycbc.inference.sampler.emcee_pt.emceeptsampler method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.clear_samples", false]], "clear_samples() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.clear_samples", false]], "clear_samples() (pycbc.inference.sampler.ptemcee.ptemceesampler method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.clear_samples", false]], "clicklink (class in pycbc.results.mpld3_utils)": [[73, "pycbc.results.mpld3_utils.ClickLink", false]], "close() (pycbc.io.hdf.filedata method)": [[67, "pycbc.io.hdf.FileData.close", false]], "close_pool() (pycbc.pool.broadcastpool method)": [[52, "pycbc.pool.BroadcastPool.close_pool", false]], "close_pool() (pycbc.pool.singlepool method)": [[52, "pycbc.pool.SinglePool.close_pool", false]], "closedbound (class in pycbc.boundaries)": [[52, "pycbc.boundaries.ClosedBound", false]], "cluster() (pycbc.io.hdf.multiifostatmapdata method)": [[67, "pycbc.io.hdf.MultiifoStatmapData.cluster", false]], "cluster() (pycbc.io.hdf.statmapdata method)": [[67, "pycbc.io.hdf.StatmapData.cluster", false]], "cluster_coincs() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.cluster_coincs", false]], "cluster_coincs_multiifo() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.cluster_coincs_multiifo", false]], "cluster_over_time() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.cluster_over_time", false]], "cluster_reduce() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.cluster_reduce", false]], "cluster_template_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.cluster_template_events", false]], "cluster_template_events_single_ifo() (pycbc.events.eventmgr.eventmanagermultidet method)": [[57, "pycbc.events.eventmgr.EventManagerMultiDet.cluster_template_events_single_ifo", false]], "cluster_template_network_events() (pycbc.events.eventmgr.eventmanagercoherent method)": [[57, "pycbc.events.eventmgr.EventManagerCoherent.cluster_template_network_events", false]], "cmd (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.cmd", false]], "coalescence_rate() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.coalescence_rate", false]], "coalign_waveforms() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.coalign_waveforms", false]], "coherent_snr() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.coherent_snr", false]], "coinc_lim_for_thresh() (pycbc.events.stat.expfitcombinedsnr method)": [[57, "pycbc.events.stat.ExpFitCombinedSNR.coinc_lim_for_thresh", false]], "coinc_lim_for_thresh() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.coinc_lim_for_thresh", false]], "coinc_lim_for_thresh() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.coinc_lim_for_thresh", false]], "coinc_lim_for_thresh() (pycbc.events.stat.quadraturesumstatistic method)": [[57, "pycbc.events.stat.QuadratureSumStatistic.coinc_lim_for_thresh", false]], "coinc_lim_for_thresh() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.coinc_lim_for_thresh", false]], "coinc_timeseries_plot() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.coinc_timeseries_plot", false]], "coincbuffer_expireelements() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.coincbuffer_expireelements", false]], "coincbuffer_numgreater() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.coincbuffer_numgreater", false]], "coincexpirebuffer (class in pycbc.events.coinc)": [[57, "pycbc.events.coinc.CoincExpireBuffer", false]], "coincident_snr() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.coincident_snr", false]], "colored_noise() (in module pycbc.noise.reproduceable)": [[70, "pycbc.noise.reproduceable.colored_noise", false]], "columns_from_file_list() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.columns_from_file_list", false]], "combination_noise_lograte() (in module pycbc.events.coinc_rate)": [[57, "pycbc.events.coinc_rate.combination_noise_lograte", false]], "combination_noise_rate() (in module pycbc.events.coinc_rate)": [[57, "pycbc.events.coinc_rate.combination_noise_rate", false]], "combine_and_copy() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.combine_and_copy", false]], "combine_layout() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.combine_layout", false]], "combine_results() (pycbc.filter.matchedfilter.livebatchmatchedfilter method)": [[59, "pycbc.filter.matchedfilter.LiveBatchMatchedFilter.combine_results", false]], "comments (pycbc.inference.io.txt.inferencetxtfile attribute)": [[62, "pycbc.inference.io.txt.InferenceTXTFile.comments", false]], "common_kind() (in module pycbc.types.array)": [[76, "pycbc.types.array.common_kind", false]], "commonmcmcmetadataio (class in pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO", false]], "commonmultitemperedmetadataio (class in pycbc.inference.io.base_multitemper)": [[62, "pycbc.inference.io.base_multitemper.CommonMultiTemperedMetadataIO", false]], "commonnestedmetadataio (class in pycbc.inference.io.dynesty)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO", false]], "compare_kde() (pycbc.inference.sampler.refine.refinesampler static method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.compare_kde", false]], "compile() (in module pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.compile", false]], "complex_median() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.complex_median", false]], "complex_same_precision_as() (in module pycbc.types.array)": [[76, "pycbc.types.array.complex_same_precision_as", false]], "compress_waveform() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.compress_waveform", false]], "compressedwaveform (class in pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.CompressedWaveform", false]], "compute_acf() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.compute_acf", false]], "compute_acf() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.compute_acf", false]], "compute_acf() (pycbc.inference.sampler.emcee.emceeensemblesampler static method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.compute_acf", false]], "compute_acf() (pycbc.inference.sampler.emcee_pt.emceeptsampler static method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.compute_acf", false]], "compute_acf() (pycbc.inference.sampler.epsie.epsiesampler static method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.compute_acf", false]], "compute_acf() (pycbc.inference.sampler.ptemcee.ptemceesampler static method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.compute_acf", false]], "compute_acl() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.compute_acl", false]], "compute_acl() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.compute_acl", false]], "compute_acl() (pycbc.inference.sampler.emcee.emceeensemblesampler static method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.compute_acl", false]], "compute_acl() (pycbc.inference.sampler.emcee_pt.emceeptsampler static method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.compute_acl", false]], "compute_acl() (pycbc.inference.sampler.epsie.epsiesampler static method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.compute_acl", false]], "compute_acl() (pycbc.inference.sampler.ptemcee.ptemceesampler static method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.compute_acl", false]], "compute_efficiency() (in module pycbc.rate)": [[52, "pycbc.rate.compute_efficiency", false]], "compute_followup_snr_series() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.compute_followup_snr_series", false]], "compute_inj_optimal_snr() (in module pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.compute_inj_optimal_snr", false]], "compute_jacobian() (in module pycbc.transforms)": [[52, "pycbc.transforms.compute_jacobian", false]], "compute_lower_limit() (in module pycbc.rate)": [[52, "pycbc.rate.compute_lower_limit", false]], "compute_max_snr_over_sky_loc_stat() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.compute_max_snr_over_sky_loc_stat", false]], "compute_max_snr_over_sky_loc_stat_no_phase() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.compute_max_snr_over_sky_loc_stat_no_phase", false]], "compute_minus_network_snr() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.compute_minus_network_snr", false]], "compute_minus_network_snr_pso() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.compute_minus_network_snr_pso", false]], "compute_network_snr_core() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.compute_network_snr_core", false]], "compute_pdf() (in module pycbc.inference.entropy)": [[61, "pycbc.inference.entropy.compute_pdf", false]], "compute_search_efficiency_in_bins() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.compute_search_efficiency_in_bins", false]], "compute_search_volume_in_bins() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.compute_search_volume_in_bins", false]], "compute_u_val_for_sky_loc_stat() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.compute_u_val_for_sky_loc_stat", false]], "compute_u_val_for_sky_loc_stat_no_phase() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.compute_u_val_for_sky_loc_stat_no_phase", false]], "compute_upper_limit() (in module pycbc.rate)": [[52, "pycbc.rate.compute_upper_limit", false]], "compute_volume_vs_mass() (in module pycbc.rate)": [[52, "pycbc.rate.compute_volume_vs_mass", false]], "confidence_interval_min_width() (in module pycbc.rate)": [[52, "pycbc.rate.confidence_interval_min_width", false]], "config_group (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.config_group", false]], "configparser_value_to_file() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.configparser_value_to_file", false]], "confusion_fit_lisa() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.confusion_fit_lisa", false]], "confusion_fit_taiji() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.confusion_fit_taiji", false]], "confusion_fit_tianqin() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.confusion_fit_tianqin", false]], "conj() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.conj", false]], "consolidate_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.consolidate_events", false]], "constraint (class in pycbc.distributions.constraints)": [[56, "pycbc.distributions.constraints.Constraint", false]], "constraints (pycbc.distributions.joint.jointdistribution attribute)": [[56, "pycbc.distributions.joint.JointDistribution.constraints", false]], "construct_kde() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.construct_kde", false]], "construct_trials() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.construct_trials", false]], "contains() (pycbc.distributions.joint.jointdistribution method)": [[56, "pycbc.distributions.joint.JointDistribution.contains", false]], "contains_conditioned() (pycbc.boundaries.bounds method)": [[52, "pycbc.boundaries.Bounds.contains_conditioned", false]], "contour_plotter() (in module pycbc.results.pygrb_plotting_utils)": [[73, "pycbc.results.pygrb_plotting_utils.contour_plotter", false]], "contracted_dvdc() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.contracted_dVdc", false]], "converged() (pycbc.inference.sampler.refine.refinesampler method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.converged", false]], "convert_bank_to_hdf() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.convert_bank_to_hdf", false]], "convert_cachelist_to_filelist() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.convert_cachelist_to_filelist", false]], "convert_inputstr() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.convert_inputstr", false]], "convert_to_lal_cache() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.convert_to_lal_cache", false]], "convert_to_process_params_dict() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.convert_to_process_params_dict", false]], "convert_to_sngl_inspiral_table() (in module pycbc.tmpltbank.bank_output_utils)": [[75, "pycbc.tmpltbank.bank_output_utils.convert_to_sngl_inspiral_table", false]], "convert_trig_to_hdf() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.convert_trig_to_hdf", false]], "converter() (pycbc.logformatter method)": [[52, "pycbc.LogFormatter.converter", false]], "copy() (pycbc.bin_utils.binnedarray method)": [[52, "pycbc.bin_utils.BinnedArray.copy", false]], "copy() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.copy", false]], "copy() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.copy", false]], "copy_info() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_info", false]], "copy_metadata() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_metadata", false]], "copy_opts_for_single_ifo() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.copy_opts_for_single_ifo", false]], "copy_samples() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_samples", false]], "correlate() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.correlate", false]], "correlate() (in module pycbc.filter.matchedfilter_cpu)": [[59, "pycbc.filter.matchedfilter_cpu.correlate", false]], "correlate() (in module pycbc.filter.matchedfilter_cupy)": [[59, "pycbc.filter.matchedfilter_cupy.correlate", false]], "correlate() (in module pycbc.filter.matchedfilter_numpy)": [[59, "pycbc.filter.matchedfilter_numpy.correlate", false]], "correlate() (pycbc.filter.matchedfilter_cpu.cpucorrelator method)": [[59, "pycbc.filter.matchedfilter_cpu.CPUCorrelator.correlate", false]], "correlate() (pycbc.filter.matchedfilter_cupy.cupycorrelator method)": [[59, "pycbc.filter.matchedfilter_cupy.CUPYCorrelator.correlate", false]], "correlate_numpy() (in module pycbc.filter.matchedfilter_cpu)": [[59, "pycbc.filter.matchedfilter_cpu.correlate_numpy", false]], "correlate_parallel() (in module pycbc.filter.simd_correlate)": [[59, "pycbc.filter.simd_correlate.correlate_parallel", false]], "correlate_simd() (in module pycbc.filter.simd_correlate)": [[59, "pycbc.filter.simd_correlate.correlate_simd", false]], "cosangle (class in pycbc.distributions.angular)": [[56, "pycbc.distributions.angular.CosAngle", false]], "cosmicexplorerp1600143() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.CosmicExplorerP1600143", false]], "cosmicexplorerpessimisticp1600143() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.CosmicExplorerPessimisticP1600143", false]], "cosmicexplorerwidebandp1600143() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.CosmicExplorerWidebandP1600143", false]], "cosmological_quantity_from_redshift() (in module pycbc.cosmology)": [[52, "pycbc.cosmology.cosmological_quantity_from_redshift", false]], "count_n_louder() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.count_n_louder", false]], "count_posterior (class in pycbc.population.fgmc_laguerre)": [[71, "pycbc.population.fgmc_laguerre.count_posterior", false]], "cpucorrelator (class in pycbc.filter.matchedfilter_cpu)": [[59, "pycbc.filter.matchedfilter_cpu.CPUCorrelator", false]], "cpuonly() (in module pycbc.scheme)": [[52, "pycbc.scheme.cpuonly", false]], "cpuscheme (class in pycbc.scheme)": [[52, "pycbc.scheme.CPUScheme", false]], "cputhresholdcluster (class in pycbc.events.threshold_cpu)": [[57, "pycbc.events.threshold_cpu.CPUThresholdCluster", false]], "create_axes_grid() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.create_axes_grid", false]], "create_data_parser() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.create_data_parser", false]], "create_density_plot() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.create_density_plot", false]], "create_descriptor() (in module pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.create_descriptor", false]], "create_fits_file() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.create_fits_file", false]], "create_full_filt() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.create_full_filt", false]], "create_marginalized_hist() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.create_marginalized_hist", false]], "create_memory_and_engine_for_class_based_fft() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.create_memory_and_engine_for_class_based_fft", false]], "create_multidim_plot() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.create_multidim_plot", false]], "create_new_output_file() (in module pycbc.inference.sampler.base)": [[65, "pycbc.inference.sampler.base.create_new_output_file", false]], "create_nodata_node() (pycbc.workflow.jobsetup.pycbctmpltbankexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.create_nodata_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcaddstatmap method)": [[79, "pycbc.workflow.coincidence.PyCBCAddStatmap.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcbank2hdfexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbccombinestatmap method)": [[79, "pycbc.workflow.coincidence.PyCBCCombineStatmap.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcdistributebackgroundbins method)": [[79, "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcexcludezerolag method)": [[79, "pycbc.workflow.coincidence.PyCBCExcludeZerolag.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcfindcoincexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCFindCoincExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcfindsnglsexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCFindSnglsExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcfitbytemplateexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcfitoverparamexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbchdfinjfindexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcsnglsstatmapexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcsnglsstatmapinjexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapInjExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcstatmapexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbcstatmapinjexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable.create_node", false]], "create_node() (pycbc.workflow.coincidence.pycbctrig2hdfexecutable method)": [[79, "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable.create_node", false]], "create_node() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.create_node", false]], "create_node() (pycbc.workflow.dq.pycbcbintemplatesdqexecutable method)": [[79, "pycbc.workflow.dq.PyCBCBinTemplatesDQExecutable.create_node", false]], "create_node() (pycbc.workflow.dq.pycbcbintriggerratesdqexecutable method)": [[79, "pycbc.workflow.dq.PyCBCBinTriggerRatesDQExecutable.create_node", false]], "create_node() (pycbc.workflow.grb_utils.pycbcgrbinjfinderexecutable method)": [[79, "pycbc.workflow.grb_utils.PycbcGrbInjFinderExecutable.create_node", false]], "create_node() (pycbc.workflow.grb_utils.pycbcgrbtrigclusterexecutable method)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigClusterExecutable.create_node", false]], "create_node() (pycbc.workflow.grb_utils.pycbcgrbtrigcombinerexecutable method)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigCombinerExecutable.create_node", false]], "create_node() (pycbc.workflow.injection.pycbcmergehdfexecutable method)": [[79, "pycbc.workflow.injection.PyCBCMergeHDFExecutable.create_node", false]], "create_node() (pycbc.workflow.injection.pycbcoptimalsnrexecutable method)": [[79, "pycbc.workflow.injection.PyCBCOptimalSNRExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.lalappsinspinjexecutable method)": [[79, "pycbc.workflow.jobsetup.LalappsInspinjExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.ligolwaddexecutable method)": [[79, "pycbc.workflow.jobsetup.LigolwAddExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcconditionstrainexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbccreateinjectionsexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbchdfsplitinjexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcHDFSplitInjExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcinferenceexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcInferenceExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcinspiralexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcmultiinspiralexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcsplitbankexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbcsplitinspinjexecutable method)": [[79, "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable.create_node", false]], "create_node() (pycbc.workflow.jobsetup.pycbctmpltbankexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.create_node", false]], "create_node() (pycbc.workflow.plotting.plotexecutable method)": [[79, "pycbc.workflow.plotting.PlotExecutable.create_node", false]], "create_posterior_files() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.create_posterior_files", false]], "create_process_table() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.create_process_table", false]], "create_transformation() (pycbc.workflow.pegasus_workflow.executable method)": [[79, "pycbc.workflow.pegasus_workflow.Executable.create_transformation", false]], "create_waveform_generator() (in module pycbc.inference.models.gaussian_noise)": [[64, "pycbc.inference.models.gaussian_noise.create_waveform_generator", false]], "crop() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.crop", false]], "cubemodel (class in pycbc.inference.sampler.base_cube)": [[65, "pycbc.inference.sampler.base_cube.CubeModel", false]], "cubicspline (class in pycbc.strain.calibration)": [[74, "pycbc.strain.calibration.CubicSpline", false]], "cubicspline (class in pycbc.strain.recalibrate)": [[74, "pycbc.strain.recalibrate.CubicSpline", false]], "cudascheme (class in pycbc.scheme)": [[52, "pycbc.scheme.CUDAScheme", false]], "cudathresholdcluster (class in pycbc.events.threshold_cupy)": [[57, "pycbc.events.threshold_cupy.CUDAThresholdCluster", false]], "cum_fit() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.cum_fit", false]], "cumsum() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.cumsum", false]], "cumsum() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.cumsum", false]], "cumsum() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.cumsum", false]], "cupycorrelator (class in pycbc.filter.matchedfilter_cupy)": [[59, "pycbc.filter.matchedfilter_cupy.CUPYCorrelator", false]], "cupylinearinterpolate (class in pycbc.waveform.decompress_cupy)": [[78, "pycbc.waveform.decompress_cupy.CUPYLinearInterpolate", false]], "cupyscheme (class in pycbc.scheme)": [[52, "pycbc.scheme.CUPYScheme", false]], "current_params (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.current_params", false]], "current_params (pycbc.inference.models.tools.distmarg property)": [[64, "pycbc.inference.models.tools.DistMarg.current_params", false]], "current_params (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.current_params", false]], "current_params (pycbc.waveform.generator.basegenerator attribute)": [[78, "pycbc.waveform.generator.BaseGenerator.current_params", false]], "current_params (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.current_params", false]], "current_params (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.current_params", false]], "current_params (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.current_params", false]], "current_params (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.current_params", false]], "current_prefix() (in module pycbc.scheme)": [[52, "pycbc.scheme.current_prefix", false]], "current_retention_level (pycbc.workflow.coincidence.censorforeground attribute)": [[79, "pycbc.workflow.coincidence.CensorForeground.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.mergeexecutable attribute)": [[79, "pycbc.workflow.coincidence.MergeExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcaddstatmap attribute)": [[79, "pycbc.workflow.coincidence.PyCBCAddStatmap.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcbank2hdfexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbccombinestatmap attribute)": [[79, "pycbc.workflow.coincidence.PyCBCCombineStatmap.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcdistributebackgroundbins attribute)": [[79, "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcexcludezerolag attribute)": [[79, "pycbc.workflow.coincidence.PyCBCExcludeZerolag.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcfindcoincexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCFindCoincExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcfindsnglsexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCFindSnglsExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcfitbytemplateexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcfitoverparamexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbchdfinjfindexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcsnglsstatmapexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcsnglsstatmapinjexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapInjExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcstatmapexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbcstatmapinjexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.coincidence.pycbctrig2hdfexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.current_retention_level", false]], "current_retention_level (pycbc.workflow.dq.pycbcbintemplatesdqexecutable attribute)": [[79, "pycbc.workflow.dq.PyCBCBinTemplatesDQExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.dq.pycbcbintriggerratesdqexecutable attribute)": [[79, "pycbc.workflow.dq.PyCBCBinTriggerRatesDQExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.grb_utils.pycbcgrbinjfinderexecutable attribute)": [[79, "pycbc.workflow.grb_utils.PycbcGrbInjFinderExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.grb_utils.pycbcgrbtrigclusterexecutable attribute)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigClusterExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.grb_utils.pycbcgrbtrigcombinerexecutable attribute)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigCombinerExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.injection.pycbcmergehdfexecutable attribute)": [[79, "pycbc.workflow.injection.PyCBCMergeHDFExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.injection.pycbcoptimalsnrexecutable attribute)": [[79, "pycbc.workflow.injection.PyCBCOptimalSNRExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.lalappsinspinjexecutable attribute)": [[79, "pycbc.workflow.jobsetup.LalappsInspinjExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.ligolwaddexecutable attribute)": [[79, "pycbc.workflow.jobsetup.LigolwAddExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcconditionstrainexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbccreateinjectionsexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbchdfsplitinjexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcHDFSplitInjExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcinferenceexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcInferenceExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcinspiralexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcmultiinspiralexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcsplitbankexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbcsplitinspinjexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.jobsetup.pycbctmpltbankexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.plotting.plotexecutable attribute)": [[79, "pycbc.workflow.plotting.PlotExecutable.current_retention_level", false]], "current_retention_level (pycbc.workflow.versioning.versioningexecutable attribute)": [[79, "pycbc.workflow.versioning.VersioningExecutable.current_retention_level", false]], "current_stats (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.current_stats", false]], "customtransform (class in pycbc.transforms)": [[52, "pycbc.transforms.CustomTransform", false]], "customtransformmultioutputs (class in pycbc.transforms)": [[52, "pycbc.transforms.CustomTransformMultiOutputs", false]], "cut_distant_injections() (in module pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.cut_distant_injections", false]], "cut_events_via_indices() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.cut_events_via_indices", false]], "cut_events_via_mask() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.cut_events_via_mask", false]], "cyclic (pycbc.boundaries.bounds property)": [[52, "pycbc.boundaries.Bounds.cyclic", false]], "cyclic (pycbc.distributions.joint.jointdistribution property)": [[56, "pycbc.distributions.joint.JointDistribution.cyclic", false]], "cyclic_time_shift() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.cyclic_time_shift", false]], "cyclic_time_shift() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.cyclic_time_shift", false]], "data (pycbc.events.coinc.coincexpirebuffer property)": [[57, "pycbc.events.coinc.CoincExpireBuffer.data", false]], "data (pycbc.inference.models.base_data.basedatamodel property)": [[64, "pycbc.inference.models.base_data.BaseDataModel.data", false]], "data (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian property)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.data", false]], "data (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.data", false]], "data (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.data", false]], "data() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.data", false]], "data_from_cli() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.data_from_cli", false]], "data_group (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.data_group", false]], "data_opts_from_config() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.data_opts_from_config", false]], "databuffer (class in pycbc.frame.frame)": [[60, "pycbc.frame.frame.DataBuffer", false]], "datafind_keep_unique_backups() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.datafind_keep_unique_backups", false]], "datafromfiles (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.DataFromFiles", false]], "dax_repr (pycbc.workflow.pegasus_workflow.file property)": [[79, "pycbc.workflow.pegasus_workflow.File.dax_repr", false]], "decomp_ccode_double() (in module pycbc.waveform.decompress_cpu_cython)": [[78, "pycbc.waveform.decompress_cpu_cython.decomp_ccode_double", false]], "decomp_ccode_float() (in module pycbc.waveform.decompress_cpu_cython)": [[78, "pycbc.waveform.decompress_cpu_cython.decomp_ccode_float", false]], "decompress() (pycbc.waveform.compress.compressedwaveform method)": [[78, "pycbc.waveform.compress.CompressedWaveform.decompress", false]], "decs (pycbc.tmpltbank.sky_grid.skygrid property)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.decs", false]], "deepcopyableconfigparser (class in pycbc.types.config)": [[76, "pycbc.types.config.DeepCopyableConfigParser", false]], "default_delta_bh_spin (pycbc.tmpltbank.option_utils.massrangeparameters attribute)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.default_delta_bh_spin", false]], "default_delta_ns_mass (pycbc.tmpltbank.option_utils.massrangeparameters attribute)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.default_delta_ns_mass", false]], "default_dict() (pycbc.waveform.parameters.parameterlist method)": [[78, "pycbc.waveform.parameters.ParameterList.default_dict", false]], "default_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.default_modes", false]], "default_ns_eos (pycbc.tmpltbank.option_utils.massrangeparameters attribute)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.default_ns_eos", false]], "default_nsbh_boundary_mass (pycbc.tmpltbank.option_utils.massrangeparameters attribute)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.default_nsbh_boundary_mass", false]], "default_null_value() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.default_null_value", false]], "default_params_name (pycbc.transforms.geotossb attribute)": [[52, "pycbc.transforms.GEOToSSB.default_params_name", false]], "default_params_name (pycbc.transforms.lisatogeo attribute)": [[52, "pycbc.transforms.LISAToGEO.default_params_name", false]], "default_params_name (pycbc.transforms.lisatossb attribute)": [[52, "pycbc.transforms.LISAToSSB.default_params_name", false]], "default_set (pycbc.types.optparse.dictwithdefaultreturn attribute)": [[76, "pycbc.types.optparse.DictWithDefaultReturn.default_set", false]], "default_stats (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.default_stats", false]], "defaults() (pycbc.waveform.parameters.parameterlist method)": [[78, "pycbc.waveform.parameters.ParameterList.defaults", false]], "defaultscheme (class in pycbc.scheme)": [[52, "pycbc.scheme.DefaultScheme", false]], "del_functions() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.del_functions", false]], "delim (pycbc.inference.models.hierarchical.hierarchicalparam attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.delim", false]], "delimiter (pycbc.inference.io.txt.inferencetxtfile attribute)": [[62, "pycbc.inference.io.txt.InferenceTXTFile.delimiter", false]], "delta_f (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.delta_f", false]], "delta_f (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.delta_f", false]], "delta_lambda_tilde() (in module pycbc.conversions)": [[52, "pycbc.conversions.delta_lambda_tilde", false]], "delta_t (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.delta_t", false]], "delta_t (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.delta_t", false]], "deltam_f() (in module pycbc.filter.qtransform)": [[59, "pycbc.filter.qtransform.deltam_f", false]], "description_dict (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.description_dict", false]], "descriptions (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.descriptions", false]], "det_cplx_loglr() (pycbc.inference.models.gaussian_noise.gaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.det_cplx_loglr", false]], "det_lognl() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.det_lognl", false]], "det_lognl() (pycbc.inference.models.gaussian_noise.basegaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.det_lognl", false]], "det_lognorm() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.det_lognorm", false]], "det_lognorm() (pycbc.inference.models.gaussian_noise.basegaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.det_lognorm", false]], "det_optimal_snrsq() (pycbc.inference.models.gaussian_noise.gaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.det_optimal_snrsq", false]], "det_tc() (in module pycbc.conversions)": [[52, "pycbc.conversions.det_tc", false]], "detect_loud_glitches() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.detect_loud_glitches", false]], "detector (class in pycbc.detector.ground)": [[55, "pycbc.detector.ground.Detector", false]], "detector_names (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.detector_names", false]], "detector_names (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.detector_names", false]], "detector_names (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.detector_names", false]], "detector_names (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.detector_names", false]], "detector_names (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.detector_names", false]], "detectors (pycbc.inference.models.base_data.basedatamodel property)": [[64, "pycbc.inference.models.base_data.BaseDataModel.detectors", false]], "detectors (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.detectors", false]], "detectors (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.detectors", false]], "detectors (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.detectors", false]], "detectors (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.detectors", false]], "detectors (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.detectors", false]], "detectors_with_valid_data() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.detectors_with_valid_data", false]], "determine_eigen_directions() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.determine_eigen_directions", false]], "detrend() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.detrend", false]], "dict_to_args() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.dict_to_args", false]], "dictarray (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.DictArray", false]], "dictoptionaction (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.DictOptionAction", false]], "dictwithdefaultreturn (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.DictWithDefaultReturn", false]], "diff_lookback_time() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.diff_lookback_time", false]], "digest_significance_options() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.digest_significance_options", false]], "dim (pycbc.distributions.power_law.uniformpowerlaw attribute)": [[56, "pycbc.distributions.power_law.UniformPowerLaw.dim", false]], "discard_last() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.discard_last", false]], "dist_summary() (in module pycbc.population.fgmc_plots)": [[71, "pycbc.population.fgmc_plots.dist_summary", false]], "distance (pycbc.transforms.lambdafrommultipletovfiles property)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.distance", false]], "distance (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.distance", false]], "distance_from_comoving_volume() (in module pycbc.cosmology)": [[52, "pycbc.cosmology.distance_from_comoving_volume", false]], "distance_from_rate() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.distance_from_rate", false]], "distancetochirpdistance (class in pycbc.transforms)": [[52, "pycbc.transforms.DistanceToChirpDistance", false]], "distancetoredshift (class in pycbc.transforms)": [[52, "pycbc.transforms.DistanceToRedshift", false]], "distmarg (class in pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.DistMarg", false]], "distributionfunctionfromfile (class in pycbc.distributions.external)": [[56, "pycbc.distributions.external.DistributionFunctionFromFile", false]], "distributions (pycbc.distributions.joint.jointdistribution attribute)": [[56, "pycbc.distributions.joint.JointDistribution.distributions", false]], "dlogz (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.dlogz", false]], "dlum_to_z() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.dlum_to_z", false]], "do_not_keep (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.DO_NOT_KEEP", false]], "do_pastro_calc() (pycbc.population.live_pastro_utils.pastrodata method)": [[71, "pycbc.population.live_pastro_utils.PAstroData.do_pastro_calc", false]], "docstr() (pycbc.waveform.parameters.parameter method)": [[78, "pycbc.waveform.parameters.Parameter.docstr", false]], "docstr() (pycbc.waveform.parameters.parameterlist method)": [[78, "pycbc.waveform.parameters.ParameterList.docstr", false]], "domain (pycbc.distributions.angular.uniformangle property)": [[56, "pycbc.distributions.angular.UniformAngle.domain", false]], "dot() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.dot", false]], "dot() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.dot", false]], "dot() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.dot", false]], "dquadmon_from_lambda() (in module pycbc.conversions)": [[52, "pycbc.conversions.dquadmon_from_lambda", false]], "draw_flat_samples() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.draw_flat_samples", false]], "draw_ifos() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.draw_ifos", false]], "draw_imf_samples() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.draw_imf_samples", false]], "draw_lnm_samples() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.draw_lnm_samples", false]], "draw_sample() (in module pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.draw_sample", false]], "draw_samples() (pycbc.inference.sampler.refine.refinesampler method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.draw_samples", false]], "draw_samples_from_bin() (pycbc.inference.sampler.games.gamesampler method)": [[65, "pycbc.inference.sampler.games.GameSampler.draw_samples_from_bin", false]], "draw_samples_from_config() (in module pycbc.distributions.utils)": [[56, "pycbc.distributions.utils.draw_samples_from_config", false]], "draw_sky_times() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.draw_sky_times", false]], "draw_times() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.draw_times", false]], "drop_trailing_zeros() (in module pycbc.results.str_utils)": [[73, "pycbc.results.str_utils.drop_trailing_zeros", false]], "dtype (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.dtype", false]], "dtype_dict (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.dtype_dict", false]], "dtypes (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.dtypes", false]], "dummysampler (class in pycbc.inference.sampler.dummy)": [[65, "pycbc.inference.sampler.dummy.DummySampler", false]], "dump() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.dump", false]], "dump_pickle_to_hdf() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.dump_pickle_to_hdf", false]], "dump_state() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.dump_state", false]], "duration (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.duration", false]], "duration (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.duration", false]], "duration_bins_from_cli() (in module pycbc.live.significance_fits)": [[68, "pycbc.live.significance_fits.duration_bins_from_cli", false]], "dynestyfile (class in pycbc.inference.io.dynesty)": [[62, "pycbc.inference.io.dynesty.DynestyFile", false]], "dynestysampler (class in pycbc.inference.sampler.dynesty)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler", false]], "earth_position_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.earth_position_ssb", false]], "earth_position_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.earth_position_ssb", false]], "effective_distance() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.effective_distance", false]], "effective_nsamples (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.effective_nsamples", false]], "effective_nsamples (pycbc.inference.sampler.base_mcmc.ensemblesupport property)": [[65, "pycbc.inference.sampler.base_mcmc.EnsembleSupport.effective_nsamples", false]], "effective_nsamples (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.effective_nsamples", false]], "effective_nsamples() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.effective_nsamples", false]], "effective_spin (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.effective_spin", false]], "effsnr() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.effsnr", false]], "einsteintelescopep1600143() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.EinsteinTelescopeP1600143", false]], "eligomodel() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.eLIGOModel", false]], "eligoshot() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.eLIGOShot", false]], "emceeensemblesampler (class in pycbc.inference.sampler.emcee)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler", false]], "emceefile (class in pycbc.inference.io.emcee)": [[62, "pycbc.inference.io.emcee.EmceeFile", false]], "emceeptfile (class in pycbc.inference.io.emcee_pt)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile", false]], "emceeptsampler (class in pycbc.inference.sampler.emcee_pt)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler", false]], "empty() (in module pycbc.types.aligned)": [[76, "pycbc.types.aligned.empty", false]], "empty() (in module pycbc.types.array)": [[76, "pycbc.types.array.empty", false]], "empty() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.empty", false]], "empty() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.empty", false]], "end_frequency() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.end_frequency", false]], "end_time (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.end_time", false]], "end_time (pycbc.strain.strain.strainbuffer property)": [[74, "pycbc.strain.strain.StrainBuffer.end_time", false]], "end_time (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.end_time", false]], "end_time (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.end_time", false]], "end_times() (pycbc.inject.inject.cbchdfinjectionset method)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.end_times", false]], "end_times() (pycbc.inject.inject.incoherentfromfilehdfinjectionset method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.end_times", false]], "end_times() (pycbc.inject.inject.ringdownhdfinjectionset method)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.end_times", false]], "endelementns() (pycbc.io.ligolw.ligolwcontenthandler method)": [[67, "pycbc.io.ligolw.LIGOLWContentHandler.endElementNS", false]], "energy() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.energy", false]], "energy_coefficients() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.energy_coefficients", false]], "ensemble (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.ensemble", false]], "ensemble_compute_acf() (in module pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.ensemble_compute_acf", false]], "ensemble_compute_acf() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.ensemble_compute_acf", false]], "ensemble_compute_acl() (in module pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.ensemble_compute_acl", false]], "ensemble_compute_acl() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.ensemble_compute_acl", false]], "ensemble_read_raw_samples() (in module pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.ensemble_read_raw_samples", false]], "ensemble_read_raw_samples() (in module pycbc.inference.io.base_multitemper)": [[62, "pycbc.inference.io.base_multitemper.ensemble_read_raw_samples", false]], "ensemblemcmcburnintests (class in pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests", false]], "ensemblemcmcmetadataio (class in pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.EnsembleMCMCMetadataIO", false]], "ensemblemultitemperedmcmcburnintests (class in pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.EnsembleMultiTemperedMCMCBurnInTests", false]], "ensemblesupport (class in pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.EnsembleSupport", false]], "ensure_directories() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.ensure_directories", false]], "ensure_hash() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.ensure_hash", false]], "ensure_one_opt() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.ensure_one_opt", false]], "ensure_one_opt_multi_ifo() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.ensure_one_opt_multi_ifo", false]], "ensure_standard_filter_columns() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.ensure_standard_filter_columns", false]], "entropy() (in module pycbc.inference.entropy)": [[61, "pycbc.inference.entropy.entropy", false]], "entry_class (pycbc.workflow.core.filelist attribute)": [[79, "pycbc.workflow.core.FileList.entry_class", false]], "epoch (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.epoch", false]], "epoch (pycbc.waveform.generator.basefdomaindetframegenerator property)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.epoch", false]], "epoch (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.epoch", false]], "epoch (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.epoch", false]], "epoch (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.epoch", false]], "epoch (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.epoch", false]], "epoch (pycbc.waveform.generator.fdomaindirectdetframegenerator property)": [[78, "pycbc.waveform.generator.FDomainDirectDetFrameGenerator.epoch", false]], "epoch_close() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.epoch_close", false]], "epsie_adaptive_from_config() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.epsie_adaptive_from_config", false]], "epsie_at_adaptive_from_config() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.epsie_at_adaptive_from_config", false]], "epsie_from_config() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.epsie_from_config", false]], "epsie_proposals_from_config() (in module pycbc.inference.jump)": [[63, "pycbc.inference.jump.epsie_proposals_from_config", false]], "epsieadaptiveangular (class in pycbc.inference.jump.angular)": [[63, "pycbc.inference.jump.angular.EpsieAdaptiveAngular", false]], "epsieadaptiveboundeddiscrete (class in pycbc.inference.jump.discrete)": [[63, "pycbc.inference.jump.discrete.EpsieAdaptiveBoundedDiscrete", false]], "epsieadaptiveboundednormal (class in pycbc.inference.jump.bounded_normal)": [[63, "pycbc.inference.jump.bounded_normal.EpsieAdaptiveBoundedNormal", false]], "epsieadaptivenormal (class in pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.EpsieAdaptiveNormal", false]], "epsieadaptivenormaldiscrete (class in pycbc.inference.jump.discrete)": [[63, "pycbc.inference.jump.discrete.EpsieAdaptiveNormalDiscrete", false]], "epsieangular (class in pycbc.inference.jump.angular)": [[63, "pycbc.inference.jump.angular.EpsieAngular", false]], "epsieatadaptiveangular (class in pycbc.inference.jump.angular)": [[63, "pycbc.inference.jump.angular.EpsieATAdaptiveAngular", false]], "epsieatadaptiveboundednormal (class in pycbc.inference.jump.bounded_normal)": [[63, "pycbc.inference.jump.bounded_normal.EpsieATAdaptiveBoundedNormal", false]], "epsieatadaptivenormal (class in pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.EpsieATAdaptiveNormal", false]], "epsieboundeddiscrete (class in pycbc.inference.jump.discrete)": [[63, "pycbc.inference.jump.discrete.EpsieBoundedDiscrete", false]], "epsieboundednormal (class in pycbc.inference.jump.bounded_normal)": [[63, "pycbc.inference.jump.bounded_normal.EpsieBoundedNormal", false]], "epsiefile (class in pycbc.inference.io.epsie)": [[62, "pycbc.inference.io.epsie.EpsieFile", false]], "epsienormal (class in pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.EpsieNormal", false]], "epsienormaldiscrete (class in pycbc.inference.jump.discrete)": [[63, "pycbc.inference.jump.discrete.EpsieNormalDiscrete", false]], "epsiesampler (class in pycbc.inference.sampler.epsie)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler", false]], "estimate_mass_range() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.estimate_mass_range", false]], "estimate_nmcmc() (in module pycbc.inference.sampler.dynesty)": [[65, "pycbc.inference.sampler.dynesty.estimate_nmcmc", false]], "estimate_vt() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.estimate_vt", false]], "eta (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.eta", false]], "eta (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.eta", false]], "eta_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.eta_from_mass1_mass2", false]], "eta_from_q() (in module pycbc.conversions)": [[52, "pycbc.conversions.eta_from_q", false]], "eta_from_tau0_tau3() (in module pycbc.conversions)": [[52, "pycbc.conversions.eta_from_tau0_tau3", false]], "eta_mass1_to_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.eta_mass1_to_mass2", false]], "ethinca_order_from_string() (in module pycbc.tmpltbank.lambda_mapping)": [[75, "pycbc.tmpltbank.lambda_mapping.ethinca_order_from_string", false]], "ethincaparameters (class in pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.ethincaParameters", false]], "eval_pdf() (pycbc.population.fgmc_functions.backgroundeventrate method)": [[71, "pycbc.population.fgmc_functions.BackgroundEventRate.eval_pdf", false]], "eval_pdf() (pycbc.population.fgmc_functions.signaleventrate method)": [[71, "pycbc.population.fgmc_functions.SignalEventRate.eval_pdf", false]], "evals (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.evals", false]], "evaluate() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.evaluate", false]], "evaluate() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.evaluate", false]], "evaluate() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.evaluate", false]], "evaluate_tests() (in module pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.evaluate_tests", false]], "evecs (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.evecs", false]], "evecscv (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.evecsCV", false]], "eventmanager (class in pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.EventManager", false]], "eventmanagercoherent (class in pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.EventManagerCoherent", false]], "eventmanagermultidet (class in pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.EventManagerMultiDet", false]], "eventrate (class in pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.EventRate", false]], "events (pycbc.events.eventmgr.eventmanager property)": [[57, "pycbc.events.eventmgr.EventManager.events", false]], "excludestr() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.excludestr", false]], "exec_sites_str (pycbc.workflow.core.workflow property)": [[79, "pycbc.workflow.core.Workflow.exec_sites_str", false]], "executable (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.Executable", false]], "executable (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.Executable", false]], "execute() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.execute", false]], "execute() (pycbc.fft.cupyfft.fft method)": [[58, "pycbc.fft.cupyfft.FFT.execute", false]], "execute() (pycbc.fft.cupyfft.ifft method)": [[58, "pycbc.fft.cupyfft.IFFT.execute", false]], "execute() (pycbc.fft.fftw.fft method)": [[58, "pycbc.fft.fftw.FFT.execute", false]], "execute() (pycbc.fft.fftw.ifft method)": [[58, "pycbc.fft.fftw.IFFT.execute", false]], "execute() (pycbc.fft.mkl.fft method)": [[58, "pycbc.fft.mkl.FFT.execute", false]], "execute() (pycbc.fft.mkl.ifft method)": [[58, "pycbc.fft.mkl.IFFT.execute", false]], "execute() (pycbc.fft.npfft.fft method)": [[58, "pycbc.fft.npfft.FFT.execute", false]], "execute() (pycbc.fft.npfft.ifft method)": [[58, "pycbc.fft.npfft.IFFT.execute", false]], "execute_cached_fft() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.execute_cached_fft", false]], "execute_cached_ifft() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.execute_cached_ifft", false]], "execute_node() (pycbc.workflow.core.workflow method)": [[79, "pycbc.workflow.core.Workflow.execute_node", false]], "expect() (pycbc.population.fgmc_laguerre.count_posterior method)": [[71, "pycbc.population.fgmc_laguerre.count_posterior.expect", false]], "expected_parameters_from_cli() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.expected_parameters_from_cli", false]], "expfitcombinedsnr (class in pycbc.events.stat)": [[57, "pycbc.events.stat.ExpFitCombinedSNR", false]], "expfitstatistic (class in pycbc.events.stat)": [[57, "pycbc.events.stat.ExpFitStatistic", false]], "expire_vector() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.expire_vector", false]], "exponent (class in pycbc.transforms)": [[52, "pycbc.transforms.Exponent", false]], "exponential_fitalpha() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.exponential_fitalpha", false]], "export_double_wisdom_to_filename() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.export_double_wisdom_to_filename", false]], "export_single_wisdom_to_filename() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.export_single_wisdom_to_filename", false]], "extension (pycbc.workflow.jobsetup.lalappsinspinjexecutable attribute)": [[79, "pycbc.workflow.jobsetup.LalappsInspinjExecutable.extension", false]], "extension (pycbc.workflow.jobsetup.pycbccreateinjectionsexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable.extension", false]], "extension (pycbc.workflow.jobsetup.pycbcsplitbankexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankExecutable.extension", false]], "extension (pycbc.workflow.jobsetup.pycbcsplitbankxmlexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable.extension", false]], "external (class in pycbc.distributions.external)": [[56, "pycbc.distributions.external.External", false]], "extra_args (pycbc.waveform.bank.templatebank attribute)": [[78, "pycbc.waveform.bank.TemplateBank.extra_args", false]], "extra_args_from_config() (pycbc.inference.models.base.basemodel static method)": [[64, "pycbc.inference.models.base.BaseModel.extra_args_from_config", false]], "extra_args_from_config() (pycbc.inference.models.relbin.relative static method)": [[64, "pycbc.inference.models.relbin.Relative.extra_args_from_config", false]], "extra_args_parser() (pycbc.inference.io.base_hdf.baseinferencefile static method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.extra_args_parser", false]], "extra_args_parser() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio static method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.extra_args_parser", false]], "extra_args_parser() (pycbc.inference.io.base_multitemper.commonmultitemperedmetadataio static method)": [[62, "pycbc.inference.io.base_multitemper.CommonMultiTemperedMetadataIO.extra_args_parser", false]], "extra_args_parser() (pycbc.inference.io.dynesty.commonnestedmetadataio static method)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO.extra_args_parser", false]], "extract_ifos() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.extract_ifos", false]], "extract_trig_properties() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.extract_trig_properties", false]], "f_bklisco() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_BKLISCO", false]], "f_erd() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_ERD", false]], "f_frd() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_FRD", false]], "f_lightring() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_LightRing", false]], "f_lower (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.f_lower", false]], "f_lrd() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_LRD", false]], "f_schwarzisco() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.f_SchwarzISCO", false]], "f_seobnrv2_peak (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.f_seobnrv2_peak", false]], "f_seobnrv4_peak (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.f_seobnrv4_peak", false]], "failedwaveformerror": [[78, "pycbc.waveform.waveform.FailedWaveformError", false]], "fastest_power_chisq_at_points() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.fastest_power_chisq_at_points", false]], "fd_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.fd_approximants", false]], "fd_damped_sinusoid() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.fd_damped_sinusoid", false]], "fd_data_from_strain_dict() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.fd_data_from_strain_dict", false]], "fd_decompress() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.fd_decompress", false]], "fd_output_vector() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.fd_output_vector", false]], "fd_sine_gaussian() (in module pycbc.waveform.sinegauss)": [[78, "pycbc.waveform.sinegauss.fd_sine_gaussian", false]], "fd_taper() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.fd_taper", false]], "fd_to_td() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.fd_to_td", false]], "fd_waveform_mode_approximants() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.fd_waveform_mode_approximants", false]], "fdomaincbcgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainCBCGenerator", false]], "fdomaincbcmodesgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainCBCModesGenerator", false]], "fdomaindetframegenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator", false]], "fdomaindetframemodesgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator", false]], "fdomaindetframetwopolgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator", false]], "fdomaindetframetwopolnorespgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator", false]], "fdomaindirectdetframegenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainDirectDetFrameGenerator", false]], "fdomainfreqtauringdowngenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainFreqTauRingdownGenerator", false]], "fdomainmassspinringdowngenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.FDomainMassSpinRingdownGenerator", false]], "fermi_core_tail_model() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.fermi_core_tail_model", false]], "fft (class in pycbc.fft.class_api)": [[58, "pycbc.fft.class_api.FFT", false]], "fft (class in pycbc.fft.cupyfft)": [[58, "pycbc.fft.cupyfft.FFT", false]], "fft (class in pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.FFT", false]], "fft (class in pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.FFT", false]], "fft (class in pycbc.fft.npfft)": [[58, "pycbc.fft.npfft.FFT", false]], "fft() (in module pycbc.fft.cupyfft)": [[58, "pycbc.fft.cupyfft.fft", false]], "fft() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.fft", false]], "fft() (in module pycbc.fft.func_api)": [[58, "pycbc.fft.func_api.fft", false]], "fft() (in module pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.fft", false]], "fft() (in module pycbc.fft.npfft)": [[58, "pycbc.fft.npfft.fft", false]], "fft_transpose() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.fft_transpose", false]], "fft_transpose_fftw() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.fft_transpose_fftw", false]], "fgmc() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.fgmc", false]], "fieldarray (class in pycbc.io.record)": [[67, "pycbc.io.record.FieldArray", false]], "fieldnames (pycbc.io.record.fieldarray property)": [[67, "pycbc.io.record.FieldArray.fieldnames", false]], "fields (pycbc.io.record.fieldarray property)": [[67, "pycbc.io.record.FieldArray.fields", false]], "file (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.File", false]], "file (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.File", false]], "file_input_options (pycbc.workflow.coincidence.pycbcfindsnglsexecutable attribute)": [[79, "pycbc.workflow.coincidence.PyCBCFindSnglsExecutable.file_input_options", false]], "file_input_options (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.file_input_options", false]], "file_input_options (pycbc.workflow.jobsetup.pycbcmultiinspiralexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.file_input_options", false]], "filedata (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.FileData", false]], "filehandler (pycbc.waveform.bank.templatebank attribute)": [[78, "pycbc.waveform.bank.TemplateBank.filehandler", false]], "filelist (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.FileList", false]], "filename (pycbc.distributions.arbitrary.fromfile property)": [[56, "pycbc.distributions.arbitrary.FromFile.filename", false]], "files_changed() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.files_changed", false]], "fill() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.fill", false]], "filled_time (pycbc.events.coinc.multiringbuffer property)": [[57, "pycbc.events.coinc.MultiRingBuffer.filled_time", false]], "filter_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.filter_approximants", false]], "filter_bin_lo_hi() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.filter_bin_lo_hi", false]], "filter_injections_by_mass() (in module pycbc.rate)": [[52, "pycbc.rate.filter_injections_by_mass", false]], "filter_psd() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.filter_psd", false]], "filter_templates() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.filter_templates", false]], "filter_tmplt_mchirp() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.filter_tmplt_mchirp", false]], "filter_zpk() (in module pycbc.filter.zpk)": [[59, "pycbc.filter.zpk.filter_zpk", false]], "filterbank (class in pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.FilterBank", false]], "filterbankskymax (class in pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.FilterBankSkyMax", false]], "final_mass_from_f0_tau() (in module pycbc.conversions)": [[52, "pycbc.conversions.final_mass_from_f0_tau", false]], "final_mass_from_initial() (in module pycbc.conversions)": [[52, "pycbc.conversions.final_mass_from_initial", false]], "final_result (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.FINAL_RESULT", false]], "final_spin_from_f0_tau() (in module pycbc.conversions)": [[52, "pycbc.conversions.final_spin_from_f0_tau", false]], "final_spin_from_initial() (in module pycbc.conversions)": [[52, "pycbc.conversions.final_spin_from_initial", false]], "finalize() (pycbc.inference.sampler.base.basesampler method)": [[65, "pycbc.inference.sampler.base.BaseSampler.finalize", false]], "finalize() (pycbc.inference.sampler.dummy.dummysampler method)": [[65, "pycbc.inference.sampler.dummy.DummySampler.finalize", false]], "finalize() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.finalize", false]], "finalize() (pycbc.inference.sampler.emcee.emceeensemblesampler method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.finalize", false]], "finalize() (pycbc.inference.sampler.emcee_pt.emceeptsampler method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.finalize", false]], "finalize() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.finalize", false]], "finalize() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.finalize", false]], "finalize() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.finalize", false]], "finalize() (pycbc.inference.sampler.ptemcee.ptemceesampler method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.finalize", false]], "finalize() (pycbc.inference.sampler.snowline.snowlinesampler method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.finalize", false]], "finalize() (pycbc.inference.sampler.ultranest.ultranestsampler method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.finalize", false]], "finalize_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.finalize_events", false]], "finalize_template_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.finalize_template_events", false]], "finalize_template_events() (pycbc.events.eventmgr.eventmanagercoherent method)": [[57, "pycbc.events.eventmgr.EventManagerCoherent.finalize_template_events", false]], "finalize_template_events() (pycbc.events.eventmgr.eventmanagermultidet method)": [[57, "pycbc.events.eventmgr.EventManagerMultiDet.finalize_template_events", false]], "find_all_output_in_range() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_all_output_in_range", false]], "find_closest_calculated_frequencies() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.find_closest_calculated_frequencies", false]], "find_dq_noise_rate() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.find_dq_noise_rate", false]], "find_dq_state_by_time() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.find_dq_state_by_time", false]], "find_event_in_catalog() (in module pycbc.catalog)": [[53, "pycbc.catalog.find_event_in_catalog", false]], "find_fits() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.find_fits", false]], "find_indices_in_injection_intervals() (pycbc.inject.injfilterrejector.injfilterrejector method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.find_indices_in_injection_intervals", false]], "find_injections_in_hdf_coinc() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.find_injections_in_hdf_coinc", false]], "find_kdes() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.find_kdes", false]], "find_max_and_min_frequencies() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.find_max_and_min_frequencies", false]], "find_output() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output", false]], "find_output_at_time() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output_at_time", false]], "find_output_in_range() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output_in_range", false]], "find_output_with_ifo() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output_with_ifo", false]], "find_output_with_tag() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output_with_tag", false]], "find_output_without_tag() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_output_without_tag", false]], "find_outputs_in_range() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.find_outputs_in_range", false]], "find_point_bin() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.find_point_bin", false]], "find_trigger_files() (in module pycbc.io.live)": [[67, "pycbc.io.live.find_trigger_files", false]], "find_trigger_files_from_cli() (in module pycbc.io.live)": [[67, "pycbc.io.live.find_trigger_files_from_cli", false]], "find_trigger_value() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.find_trigger_value", false]], "find_variable_start_frequency() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.find_variable_start_frequency", false]], "find_xi_extrema_brute() (in module pycbc.tmpltbank.brute_force_methods)": [[75, "pycbc.tmpltbank.brute_force_methods.find_xi_extrema_brute", false]], "findchirp_chirptime() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.findchirp_chirptime", false]], "findchirp_cluster_over_window() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.findchirp_cluster_over_window", false]], "findchirp_cluster_over_window_cython() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.findchirp_cluster_over_window_cython", false]], "fir_zero_filter() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.fir_zero_filter", false]], "fir_zero_filter() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.fir_zero_filter", false]], "first_phase() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.first_phase", false]], "fishersky (class in pycbc.distributions.sky_location)": [[56, "pycbc.distributions.sky_location.FisherSky", false]], "fit() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.fit", false]], "fit_above_thresh() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.fit_above_thresh", false]], "fit_fn() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.fit_fn", false]], "fixedsamples (class in pycbc.distributions.fixedsamples)": [[56, "pycbc.distributions.fixedsamples.FixedSamples", false]], "flag_at_times() (pycbc.frame.frame.idqbuffer method)": [[60, "pycbc.frame.frame.iDQBuffer.flag_at_times", false]], "flag_names_to_bitmask() (in module pycbc.frame)": [[60, "pycbc.frame.flag_names_to_bitmask", false]], "flat_unity() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.flat_unity", false]], "followup_event_significance() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.followup_event_significance", false]], "force_precision_to_match() (in module pycbc.types.array)": [[76, "pycbc.types.array.force_precision_to_match", false]], "foregroundevents (class in pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.ForegroundEvents", false]], "foregroundtriggers (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.ForegroundTriggers", false]], "format_attr() (in module pycbc.inference.io.base_hdf)": [[62, "pycbc.inference.io.base_hdf.format_attr", false]], "format_description() (pycbc.tmpltbank.option_utils.indentedhelpformatterwithnl method)": [[75, "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL.format_description", false]], "format_lmns() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.format_lmns", false]], "format_option() (pycbc.tmpltbank.option_utils.indentedhelpformatterwithnl method)": [[75, "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL.format_option", false]], "format_output() (pycbc.transforms.basetransform static method)": [[52, "pycbc.transforms.BaseTransform.format_output", false]], "format_value() (in module pycbc.results.str_utils)": [[73, "pycbc.results.str_utils.format_value", false]], "formattime() (pycbc.logformatter method)": [[52, "pycbc.LogFormatter.formatTime", false]], "foucart18() (in module pycbc.neutron_stars.eos_utils)": [[69, "pycbc.neutron_stars.eos_utils.foucart18", false]], "fourier_segments() (pycbc.strain.strain.strainsegments method)": [[74, "pycbc.strain.strain.StrainSegments.fourier_segments", false]], "frame_paths() (in module pycbc.frame.frame)": [[60, "pycbc.frame.frame.frame_paths", false]], "freq_from_final_mass_spin() (in module pycbc.conversions)": [[52, "pycbc.conversions.freq_from_final_mass_spin", false]], "freq_resolution_for_template() (pycbc.waveform.bank.livefilterbank method)": [[78, "pycbc.waveform.bank.LiveFilterBank.freq_resolution_for_template", false]], "freqlmn_from_other_lmn() (in module pycbc.conversions)": [[52, "pycbc.conversions.freqlmn_from_other_lmn", false]], "frequency_cutoff_from_name() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.frequency_cutoff_from_name", false]], "frequency_from_polarizations() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.frequency_from_polarizations", false]], "frequency_noise_from_psd() (in module pycbc.noise.gaussian)": [[70, "pycbc.noise.gaussian.frequency_noise_from_psd", false]], "frequency_to_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.frequency_to_velocity", false]], "frequencyseries (class in pycbc.types.frequencyseries)": [[76, "pycbc.types.frequencyseries.FrequencySeries", false]], "from_argparse() (pycbc.tmpltbank.option_utils.ethincaparameters class method)": [[75, "pycbc.tmpltbank.option_utils.ethincaParameters.from_argparse", false]], "from_argparse() (pycbc.tmpltbank.option_utils.massrangeparameters class method)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.from_argparse", false]], "from_argparse() (pycbc.tmpltbank.option_utils.metricparameters class method)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.from_argparse", false]], "from_arrays() (pycbc.io.record.fieldarray class method)": [[67, "pycbc.io.record.FieldArray.from_arrays", false]], "from_cli() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.from_cli", false]], "from_cli() (in module pycbc.fft.parser_support)": [[58, "pycbc.fft.parser_support.from_cli", false]], "from_cli() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.from_cli", false]], "from_cli() (in module pycbc.psd)": [[72, "pycbc.psd.from_cli", false]], "from_cli() (in module pycbc.scheme)": [[52, "pycbc.scheme.from_cli", false]], "from_cli() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.from_cli", false]], "from_cli() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator class method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.from_cli", false]], "from_cli() (pycbc.events.single.livesingle class method)": [[57, "pycbc.events.single.LiveSingle.from_cli", false]], "from_cli() (pycbc.inject.inject.injectionset static method)": [[66, "pycbc.inject.inject.InjectionSet.from_cli", false]], "from_cli() (pycbc.inject.injfilterrejector.injfilterrejector class method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli", false]], "from_cli() (pycbc.strain.strain.strainbuffer class method)": [[74, "pycbc.strain.strain.StrainBuffer.from_cli", false]], "from_cli() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.from_cli", false]], "from_cli() (pycbc.tmpltbank.sky_grid.skygrid class method)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.from_cli", false]], "from_cli() (pycbc.types.config.interpolatingconfigparser class method)": [[76, "pycbc.types.config.InterpolatingConfigParser.from_cli", false]], "from_cli() (pycbc.vetoes.sgchisq.singledetsgchisq class method)": [[77, "pycbc.vetoes.sgchisq.SingleDetSGChisq.from_cli", false]], "from_cli_multi_ifos() (in module pycbc.psd)": [[72, "pycbc.psd.from_cli_multi_ifos", false]], "from_cli_multi_ifos() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.from_cli_multi_ifos", false]], "from_cli_multi_ifos() (pycbc.inject.injfilterrejector.injfilterrejector class method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli_multi_ifos", false]], "from_cli_multi_ifos() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.from_cli_multi_ifos", false]], "from_cli_single_ifo() (in module pycbc.psd)": [[72, "pycbc.psd.from_cli_single_ifo", false]], "from_cli_single_ifo() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.from_cli_single_ifo", false]], "from_cli_single_ifo() (pycbc.inject.injfilterrejector.injfilterrejector class method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli_single_ifo", false]], "from_cli_single_ifo() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.from_cli_single_ifo", false]], "from_config() (pycbc.distributions.angular.uniformangle class method)": [[56, "pycbc.distributions.angular.UniformAngle.from_config", false]], "from_config() (pycbc.distributions.angular.uniformsolidangle class method)": [[56, "pycbc.distributions.angular.UniformSolidAngle.from_config", false]], "from_config() (pycbc.distributions.arbitrary.arbitrary class method)": [[56, "pycbc.distributions.arbitrary.Arbitrary.from_config", false]], "from_config() (pycbc.distributions.arbitrary.fromfile class method)": [[56, "pycbc.distributions.arbitrary.FromFile.from_config", false]], "from_config() (pycbc.distributions.bounded.boundeddist class method)": [[56, "pycbc.distributions.bounded.BoundedDist.from_config", false]], "from_config() (pycbc.distributions.external.distributionfunctionfromfile class method)": [[56, "pycbc.distributions.external.DistributionFunctionFromFile.from_config", false]], "from_config() (pycbc.distributions.external.external class method)": [[56, "pycbc.distributions.external.External.from_config", false]], "from_config() (pycbc.distributions.fixedsamples.fixedsamples class method)": [[56, "pycbc.distributions.fixedsamples.FixedSamples.from_config", false]], "from_config() (pycbc.distributions.gaussian.gaussian class method)": [[56, "pycbc.distributions.gaussian.Gaussian.from_config", false]], "from_config() (pycbc.distributions.mass.qfromuniformmass1mass2 class method)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2.from_config", false]], "from_config() (pycbc.distributions.power_law.uniformpowerlaw class method)": [[56, "pycbc.distributions.power_law.UniformPowerLaw.from_config", false]], "from_config() (pycbc.distributions.qnm.uniformf0tau class method)": [[56, "pycbc.distributions.qnm.UniformF0Tau.from_config", false]], "from_config() (pycbc.distributions.sky_location.fishersky class method)": [[56, "pycbc.distributions.sky_location.FisherSky.from_config", false]], "from_config() (pycbc.distributions.sky_location.healpixsky class method)": [[56, "pycbc.distributions.sky_location.HealpixSky.from_config", false]], "from_config() (pycbc.distributions.sky_location.uniformdisksky class method)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.from_config", false]], "from_config() (pycbc.distributions.spins.independentchipchieff class method)": [[56, "pycbc.distributions.spins.IndependentChiPChiEff.from_config", false]], "from_config() (pycbc.distributions.uniform.uniform class method)": [[56, "pycbc.distributions.uniform.Uniform.from_config", false]], "from_config() (pycbc.inference.burn_in.baseburnintests class method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.from_config", false]], "from_config() (pycbc.inference.jump.angular.epsieadaptiveangular class method)": [[63, "pycbc.inference.jump.angular.EpsieAdaptiveAngular.from_config", false]], "from_config() (pycbc.inference.jump.angular.epsieangular class method)": [[63, "pycbc.inference.jump.angular.EpsieAngular.from_config", false]], "from_config() (pycbc.inference.jump.angular.epsieatadaptiveangular class method)": [[63, "pycbc.inference.jump.angular.EpsieATAdaptiveAngular.from_config", false]], "from_config() (pycbc.inference.jump.bounded_normal.epsieadaptiveboundednormal class method)": [[63, "pycbc.inference.jump.bounded_normal.EpsieAdaptiveBoundedNormal.from_config", false]], "from_config() (pycbc.inference.jump.bounded_normal.epsieatadaptiveboundednormal class method)": [[63, "pycbc.inference.jump.bounded_normal.EpsieATAdaptiveBoundedNormal.from_config", false]], "from_config() (pycbc.inference.jump.bounded_normal.epsieboundednormal class method)": [[63, "pycbc.inference.jump.bounded_normal.EpsieBoundedNormal.from_config", false]], "from_config() (pycbc.inference.jump.discrete.epsieadaptiveboundeddiscrete class method)": [[63, "pycbc.inference.jump.discrete.EpsieAdaptiveBoundedDiscrete.from_config", false]], "from_config() (pycbc.inference.jump.discrete.epsieadaptivenormaldiscrete class method)": [[63, "pycbc.inference.jump.discrete.EpsieAdaptiveNormalDiscrete.from_config", false]], "from_config() (pycbc.inference.jump.discrete.epsieboundeddiscrete class method)": [[63, "pycbc.inference.jump.discrete.EpsieBoundedDiscrete.from_config", false]], "from_config() (pycbc.inference.jump.discrete.epsienormaldiscrete class method)": [[63, "pycbc.inference.jump.discrete.EpsieNormalDiscrete.from_config", false]], "from_config() (pycbc.inference.jump.normal.epsieadaptivenormal class method)": [[63, "pycbc.inference.jump.normal.EpsieAdaptiveNormal.from_config", false]], "from_config() (pycbc.inference.jump.normal.epsieatadaptivenormal class method)": [[63, "pycbc.inference.jump.normal.EpsieATAdaptiveNormal.from_config", false]], "from_config() (pycbc.inference.jump.normal.epsienormal class method)": [[63, "pycbc.inference.jump.normal.EpsieNormal.from_config", false]], "from_config() (pycbc.inference.models.base.basemodel class method)": [[64, "pycbc.inference.models.base.BaseModel.from_config", false]], "from_config() (pycbc.inference.models.base.samplingtransforms class method)": [[64, "pycbc.inference.models.base.SamplingTransforms.from_config", false]], "from_config() (pycbc.inference.models.brute_marg.brutelisaskymodesmarginalize class method)": [[64, "pycbc.inference.models.brute_marg.BruteLISASkyModesMarginalize.from_config", false]], "from_config() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian class method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.from_config", false]], "from_config() (pycbc.inference.models.gaussian_noise.basegaussiannoise class method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.from_config", false]], "from_config() (pycbc.inference.models.hierarchical.hierarchicalmodel class method)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.from_config", false]], "from_config() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel class method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.from_config", false]], "from_config() (pycbc.inference.sampler.base.basesampler method)": [[65, "pycbc.inference.sampler.base.BaseSampler.from_config", false]], "from_config() (pycbc.inference.sampler.dummy.dummysampler class method)": [[65, "pycbc.inference.sampler.dummy.DummySampler.from_config", false]], "from_config() (pycbc.inference.sampler.dynesty.dynestysampler class method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.from_config", false]], "from_config() (pycbc.inference.sampler.emcee.emceeensemblesampler class method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.from_config", false]], "from_config() (pycbc.inference.sampler.emcee_pt.emceeptsampler class method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.from_config", false]], "from_config() (pycbc.inference.sampler.epsie.epsiesampler class method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.from_config", false]], "from_config() (pycbc.inference.sampler.multinest.multinestsampler class method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.from_config", false]], "from_config() (pycbc.inference.sampler.nessai.nessaisampler class method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.from_config", false]], "from_config() (pycbc.inference.sampler.ptemcee.ptemceesampler class method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.from_config", false]], "from_config() (pycbc.inference.sampler.refine.refinesampler class method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.from_config", false]], "from_config() (pycbc.inference.sampler.snowline.snowlinesampler class method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.from_config", false]], "from_config() (pycbc.inference.sampler.ultranest.ultranestsampler class method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.from_config", false]], "from_config() (pycbc.strain.calibration.recalibrate class method)": [[74, "pycbc.strain.calibration.Recalibrate.from_config", false]], "from_config() (pycbc.strain.recalibrate.physicalmodel class method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.from_config", false]], "from_config() (pycbc.strain.recalibrate.recalibrate class method)": [[74, "pycbc.strain.recalibrate.Recalibrate.from_config", false]], "from_config() (pycbc.transforms.basetransform class method)": [[52, "pycbc.transforms.BaseTransform.from_config", false]], "from_config() (pycbc.transforms.customtransform class method)": [[52, "pycbc.transforms.CustomTransform.from_config", false]], "from_config() (pycbc.transforms.customtransformmultioutputs class method)": [[52, "pycbc.transforms.CustomTransformMultiOutputs.from_config", false]], "from_config() (pycbc.transforms.geotossb class method)": [[52, "pycbc.transforms.GEOToSSB.from_config", false]], "from_config() (pycbc.transforms.lambdafrommultipletovfiles class method)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.from_config", false]], "from_config() (pycbc.transforms.lambdafromtovfile class method)": [[52, "pycbc.transforms.LambdaFromTOVFile.from_config", false]], "from_config() (pycbc.transforms.lisatogeo class method)": [[52, "pycbc.transforms.LISAToGEO.from_config", false]], "from_config() (pycbc.transforms.lisatossb class method)": [[52, "pycbc.transforms.LISAToSSB.from_config", false]], "from_config() (pycbc.transforms.logistic class method)": [[52, "pycbc.transforms.Logistic.from_config", false]], "from_config() (pycbc.transforms.logit class method)": [[52, "pycbc.transforms.Logit.from_config", false]], "from_hdf() (pycbc.waveform.compress.compressedwaveform class method)": [[78, "pycbc.waveform.compress.CompressedWaveform.from_hdf", false]], "from_kwargs() (pycbc.io.record.fieldarray class method)": [[67, "pycbc.io.record.FieldArray.from_kwargs", false]], "from_ligolw_table() (pycbc.io.record.fieldarray class method)": [[67, "pycbc.io.record.FieldArray.from_ligolw_table", false]], "from_multi_ifo_interface() (pycbc.events.eventmgr.eventmanager class method)": [[57, "pycbc.events.eventmgr.EventManager.from_multi_ifo_interface", false]], "from_multi_segment_list() (pycbc.workflow.core.segfile class method)": [[79, "pycbc.workflow.core.SegFile.from_multi_segment_list", false]], "from_numpy_arrays() (in module pycbc.psd.read)": [[72, "pycbc.psd.read.from_numpy_arrays", false]], "from_path() (pycbc.workflow.core.file class method)": [[79, "pycbc.workflow.core.File.from_path", false]], "from_path() (pycbc.workflow.pegasus_workflow.file class method)": [[79, "pycbc.workflow.pegasus_workflow.File.from_path", false]], "from_records() (pycbc.io.record.fieldarray class method)": [[67, "pycbc.io.record.FieldArray.from_records", false]], "from_segment_list() (pycbc.workflow.core.segfile class method)": [[79, "pycbc.workflow.core.SegFile.from_segment_list", false]], "from_segment_list_dict() (pycbc.workflow.core.segfile class method)": [[79, "pycbc.workflow.core.SegFile.from_segment_list_dict", false]], "from_segment_xml() (pycbc.workflow.core.segfile class method)": [[79, "pycbc.workflow.core.SegFile.from_segment_xml", false]], "from_string() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.from_string", false]], "from_subname() (pycbc.inference.models.hierarchical.hierarchicalparam class method)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.from_subname", false]], "from_txt() (in module pycbc.psd.read)": [[72, "pycbc.psd.read.from_txt", false]], "from_unit_hypercube() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.from_unit_hypercube", false]], "from_xml() (in module pycbc.psd.read)": [[72, "pycbc.psd.read.from_xml", false]], "fromfile (class in pycbc.distributions.arbitrary)": [[56, "pycbc.distributions.arbitrary.FromFile", false]], "frozen_location_args (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.frozen_location_args", false]], "frozen_location_args (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.frozen_location_args", false]], "frozen_location_args (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.frozen_location_args", false]], "frozen_location_args (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.frozen_location_args", false]], "frozen_location_args (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.frozen_location_args", false]], "frozen_params (pycbc.waveform.generator.basegenerator attribute)": [[78, "pycbc.waveform.generator.BaseGenerator.frozen_params", false]], "fstimeshift() (in module pycbc.waveform.utils_cpu)": [[78, "pycbc.waveform.utils_cpu.fstimeshift", false]], "fstimeshift() (in module pycbc.waveform.utils_cupy)": [[78, "pycbc.waveform.utils_cupy.fstimeshift", false]], "fstimeshift32() (in module pycbc.waveform.utils_cpu)": [[78, "pycbc.waveform.utils_cpu.fstimeshift32", false]], "full_matched_filter_and_cluster() (pycbc.filter.matchedfilter.matchedfilterskymaxcontrol method)": [[59, "pycbc.filter.matchedfilter.MatchedFilterSkyMaxControl.full_matched_filter_and_cluster", false]], "full_matched_filter_and_cluster_fc() (pycbc.filter.matchedfilter.matchedfiltercontrol method)": [[59, "pycbc.filter.matchedfilter.MatchedFilterControl.full_matched_filter_and_cluster_fc", false]], "full_matched_filter_and_cluster_symm() (pycbc.filter.matchedfilter.matchedfiltercontrol method)": [[59, "pycbc.filter.matchedfilter.MatchedFilterControl.full_matched_filter_and_cluster_symm", false]], "full_matched_filter_thresh_only() (pycbc.filter.matchedfilter.matchedfiltercontrol method)": [[59, "pycbc.filter.matchedfilter.MatchedFilterControl.full_matched_filter_thresh_only", false]], "fullname (pycbc.inference.models.hierarchical.hierarchicalparam attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.fullname", false]], "functionlib (pycbc.io.record.fieldarray property)": [[67, "pycbc.io.record.FieldArray.functionlib", false]], "gamesampler (class in pycbc.inference.sampler.games)": [[65, "pycbc.inference.sampler.games.GameSampler", false]], "gate() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.gate", false]], "gate_and_paint() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.gate_and_paint", false]], "gate_data() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.gate_data", false]], "gate_indices() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.gate_indices", false]], "gate_overwhitened_data() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.gate_overwhitened_data", false]], "gatedgaussianmargpol (class in pycbc.inference.models.gated_gaussian_noise)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol", false]], "gatedgaussiannoise (class in pycbc.inference.models.gated_gaussian_noise)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise", false]], "gates_from_cli() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.gates_from_cli", false]], "gaussian (class in pycbc.distributions.gaussian)": [[56, "pycbc.distributions.gaussian.Gaussian", false]], "gaussiannoise (class in pycbc.inference.models.gaussian_noise)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise", false]], "gelman_rubin() (in module pycbc.inference.gelman_rubin)": [[61, "pycbc.inference.gelman_rubin.gelman_rubin", false]], "generate() (pycbc.waveform.generator.basefdomaindetframegenerator method)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.generate", false]], "generate() (pycbc.waveform.generator.basegenerator method)": [[78, "pycbc.waveform.generator.BaseGenerator.generate", false]], "generate() (pycbc.waveform.generator.fdomaindetframegenerator method)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.generate", false]], "generate() (pycbc.waveform.generator.fdomaindetframemodesgenerator method)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.generate", false]], "generate() (pycbc.waveform.generator.fdomaindetframetwopolgenerator method)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.generate", false]], "generate() (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator method)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.generate", false]], "generate() (pycbc.waveform.generator.fdomaindirectdetframegenerator method)": [[78, "pycbc.waveform.generator.FDomainDirectDetFrameGenerator.generate", false]], "generate_anstar_3d_lattice() (in module pycbc.tmpltbank.lattice_utils)": [[75, "pycbc.tmpltbank.lattice_utils.generate_anstar_3d_lattice", false]], "generate_asd_plot() (in module pycbc.results.psd)": [[73, "pycbc.results.psd.generate_asd_plot", false]], "generate_hexagonal_lattice() (in module pycbc.tmpltbank.lattice_utils)": [[75, "pycbc.tmpltbank.lattice_utils.generate_hexagonal_lattice", false]], "generate_inverse_mapping() (in module pycbc.tmpltbank.lambda_mapping)": [[75, "pycbc.tmpltbank.lambda_mapping.generate_inverse_mapping", false]], "generate_mapping() (in module pycbc.tmpltbank.lambda_mapping)": [[75, "pycbc.tmpltbank.lambda_mapping.generate_mapping", false]], "generate_overlapping_psds() (in module pycbc.psd)": [[72, "pycbc.psd.generate_overlapping_psds", false]], "generate_short_inj_from_inj() (pycbc.inject.injfilterrejector.injfilterrejector method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.generate_short_inj_from_inj", false]], "generate_snr_plot() (in module pycbc.results.snr)": [[73, "pycbc.results.snr.generate_snr_plot", false]], "generate_tc_prior() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.generate_tc_prior", false]], "generate_triggered_segment() (in module pycbc.workflow.segment)": [[79, "pycbc.workflow.segment.generate_triggered_segment", false]], "generate_with_delta_f_and_max_freq() (pycbc.waveform.bank.filterbank method)": [[78, "pycbc.waveform.bank.FilterBank.generate_with_delta_f_and_max_freq", false]], "generator (pycbc.waveform.generator.basegenerator attribute)": [[78, "pycbc.waveform.generator.BaseGenerator.generator", false]], "geo() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.GEO", false]], "geo_to_lisa() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.geo_to_lisa", false]], "geo_to_lisa() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.geo_to_lisa", false]], "geo_to_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.geo_to_ssb", false]], "geo_to_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.geo_to_ssb", false]], "geohf() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.GEOHF", false]], "geotolisa (class in pycbc.transforms)": [[52, "pycbc.transforms.GEOToLISA", false]], "geotossb (class in pycbc.transforms)": [[52, "pycbc.transforms.GEOToSSB", false]], "get_active_segments() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_active_segments", false]], "get_all_subkeys() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.get_all_subkeys", false]], "get_antenna_dist_factor() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.get_antenna_dist_factor", false]], "get_area() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.get_area", false]], "get_arrays_from_file() (pycbc.distributions.arbitrary.fromfile method)": [[56, "pycbc.distributions.arbitrary.FromFile.get_arrays_from_file", false]], "get_available_detectors() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.get_available_detectors", false]], "get_available_lal_detectors() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.get_available_lal_detectors", false]], "get_available_space_detectors() (in module pycbc.detector.space)": [[55, "pycbc.detector.space.get_available_space_detectors", false]], "get_backend() (in module pycbc.fft.backend_cpu)": [[58, "pycbc.fft.backend_cpu.get_backend", false]], "get_backend() (in module pycbc.fft.backend_cupy)": [[58, "pycbc.fft.backend_cupy.get_backend", false]], "get_backend() (in module pycbc.fft.backend_mkl)": [[58, "pycbc.fft.backend_mkl.get_backend", false]], "get_backend() (in module pycbc.fft.backend_support)": [[58, "pycbc.fft.backend_support.get_backend", false]], "get_backend_modules() (in module pycbc.fft.backend_support)": [[58, "pycbc.fft.backend_support.get_backend_modules", false]], "get_backend_names() (in module pycbc.fft.backend_support)": [[58, "pycbc.fft.backend_support.get_backend_names", false]], "get_bank_property() (in module pycbc.tmpltbank.bank_conversions)": [[75, "pycbc.tmpltbank.bank_conversions.get_bank_property", false]], "get_bankfile_array() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_bankfile_array", false]], "get_beta_sigma_from_aligned_spins() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.get_beta_sigma_from_aligned_spins", false]], "get_bg_pdf() (pycbc.population.fgmc_functions.foregroundevents method)": [[71, "pycbc.population.fgmc_functions.ForegroundEvents.get_bg_pdf", false]], "get_cached_bin_layout() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.get_cached_bin_layout", false]], "get_cached_pow2() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.get_cached_pow2", false]], "get_calibration_files_o1_o2_o3() (in module pycbc.strain.recalibrate)": [[74, "pycbc.strain.recalibrate.get_calibration_files_O1_O2_O3", false]], "get_cbrt() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.get_cbrt", false]], "get_chirp_params() (in module pycbc.tmpltbank.lambda_mapping)": [[75, "pycbc.tmpltbank.lambda_mapping.get_chirp_params", false]], "get_chisq_from_file_choice() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.get_chisq_from_file_choice", false]], "get_cli_option() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.get_cli_option", false]], "get_code_version_numbers() (in module pycbc.results.versioning)": [[73, "pycbc.results.versioning.get_code_version_numbers", false]], "get_coinc_indexes() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.get_coinc_indexes", false]], "get_coinc_snr() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.get_coinc_snr", false]], "get_coinc_triggers() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.get_coinc_triggers", false]], "get_coincfile_array() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_coincfile_array", false]], "get_column() (pycbc.io.hdf.datafromfiles method)": [[67, "pycbc.io.hdf.DataFromFiles.get_column", false]], "get_column() (pycbc.io.hdf.filedata method)": [[67, "pycbc.io.hdf.FileData.get_column", false]], "get_column() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.get_column", false]], "get_command_line() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.get_command_line", false]], "get_common_cbc_transforms() (in module pycbc.transforms)": [[52, "pycbc.transforms.get_common_cbc_transforms", false]], "get_common_parameters() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.get_common_parameters", false]], "get_conv_params() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_conv_params", false]], "get_corecollapse_bounce() (in module pycbc.waveform.supernovae)": [[78, "pycbc.waveform.supernovae.get_corecollapse_bounce", false]], "get_cov_params() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_cov_params", false]], "get_covaried_params() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_covaried_params", false]], "get_ctypes() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.get_ctypes", false]], "get_ctypes_library() (in module pycbc.libutils)": [[52, "pycbc.libutils.get_ctypes_library", false]], "get_current_stats() (pycbc.inference.models.base.basemodel method)": [[64, "pycbc.inference.models.base.BaseModel.get_current_stats", false]], "get_cutoff_indices() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.get_cutoff_indices", false]], "get_data() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_data", false]], "get_data() (pycbc.io.hdf.readbytemplate method)": [[67, "pycbc.io.hdf.ReadByTemplate.get_data", false]], "get_data_times_for_job() (pycbc.workflow.jobsetup.jobsegmenter method)": [[79, "pycbc.workflow.jobsetup.JobSegmenter.get_data_times_for_job", false]], "get_dckernel() (in module pycbc.waveform.decompress_cupy)": [[78, "pycbc.waveform.decompress_cupy.get_dckernel", false]], "get_decompressed_waveform() (pycbc.waveform.bank.filterbank method)": [[78, "pycbc.waveform.bank.FilterBank.get_decompressed_waveform", false]], "get_default_kwds() (pycbc.inference.sampler.nessai.nessaisampler static method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.get_default_kwds", false]], "get_delta_f() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.get_delta_f", false]], "get_delta_t() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_delta_t", false]], "get_diagnostic_plots() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.get_diagnostic_plots", false]], "get_duration() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_duration", false]], "get_embedded_config() (in module pycbc.results.render)": [[73, "pycbc.results.render.get_embedded_config", false]], "get_end_time() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_end_time", false]], "get_end_time() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_end_time", false]], "get_eos() (pycbc.transforms.lambdafrommultipletovfiles method)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.get_eos", false]], "get_epoch() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.get_epoch", false]], "get_epsie_adaptation_settings() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.get_epsie_adaptation_settings", false]], "get_epsie_discrete_successive_settings() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.get_epsie_discrete_successive_settings", false]], "get_ethinca_orders() (in module pycbc.tmpltbank.lambda_mapping)": [[75, "pycbc.tmpltbank.lambda_mapping.get_ethinca_orders", false]], "get_far() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.get_far", false]], "get_fd_det_waveform() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_fd_det_waveform", false]], "get_fd_det_waveform_sequence() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_fd_det_waveform_sequence", false]], "get_fd_from_final_mass_spin() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.get_fd_from_final_mass_spin", false]], "get_fd_from_freqtau() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.get_fd_from_freqtau", false]], "get_fd_generator() (in module pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.get_fd_generator", false]], "get_fd_waveform() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_fd_waveform", false]], "get_fd_waveform_from_td() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_fd_waveform_from_td", false]], "get_fd_waveform_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_fd_waveform_modes", false]], "get_fd_waveform_sequence() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_fd_waveform_sequence", false]], "get_file() (in module pycbc.io)": [[67, "pycbc.io.get_file", false]], "get_file_hashes() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.get_file_hashes", false]], "get_file_type() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.get_file_type", false]], "get_final_freq() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.get_final_freq", false]], "get_flag() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.get_flag", false]], "get_flag_segments_file() (in module pycbc.workflow.segment)": [[79, "pycbc.workflow.segment.get_flag_segments_file", false]], "get_fn_plan() (in module pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.get_fn_plan", false]], "get_found_param() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.get_found_param", false]], "get_freq() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.get_freq", false]], "get_freq_map_and_normalizations() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.get_freq_map_and_normalizations", false]], "get_full_analysis_chunk() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.get_full_analysis_chunk", false]], "get_gate_indices() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_gate_indices", false]], "get_gate_times() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_gate_times", false]], "get_gate_times_hmeco() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_gate_times_hmeco", false]], "get_gate_times_hmeco() (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.get_gate_times_hmeco", false]], "get_gated_data() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_gated_data", false]], "get_gated_waveforms() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_gated_waveforms", false]], "get_gated_waveforms() (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.get_gated_waveforms", false]], "get_gated_waveforms() (pycbc.inference.models.gated_gaussian_noise.gatedgaussiannoise method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise.get_gated_waveforms", false]], "get_glm() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_glm", false]], "get_gracedb_search_link() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.get_gracedb_search_link", false]], "get_hdf_injtype() (in module pycbc.inject.inject)": [[66, "pycbc.inject.inject.get_hdf_injtype", false]], "get_hist() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.get_hist", false]], "get_icrs_pos() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.get_icrs_pos", false]], "get_ifo_combinations() (pycbc.workflow.core.workflow method)": [[79, "pycbc.workflow.core.Workflow.get_ifo_combinations", false]], "get_ifos() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_ifos", false]], "get_imrphenomxh_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_imrphenomxh_modes", false]], "get_inj_end_times() (pycbc.inject.injfilterrejector.injfilterrejector method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.get_inj_end_times", false]], "get_inj_param() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.get_inj_param", false]], "get_inspiral_tf() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.get_inspiral_tf", false]], "get_kde_from_arrays() (pycbc.distributions.arbitrary.arbitrary static method)": [[56, "pycbc.distributions.arbitrary.Arbitrary.get_kde_from_arrays", false]], "get_lalsim_psd_list() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.get_lalsim_psd_list", false]], "get_lalsimulation_approximant() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_lalsimulation_approximant", false]], "get_lalsimulation_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_lalsimulation_modes", false]], "get_libpath_from_dirlist() (in module pycbc.libutils)": [[52, "pycbc.libutils.get_libpath_from_dirlist", false]], "get_library_version_info() (in module pycbc.results.versioning)": [[73, "pycbc.results.versioning.get_library_version_info", false]], "get_links() (pycbc.detector.space.spacedetector method)": [[55, "pycbc.detector.space.SpaceDetector.get_links", false]], "get_livetimes() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.get_livetimes", false]], "get_log() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.get_log", false]], "get_mass_distribution() (in module pycbc.tmpltbank.brute_force_methods)": [[75, "pycbc.tmpltbank.brute_force_methods.get_mass_distribution", false]], "get_mass_spin() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.get_mass_spin", false]], "get_max_prob_point() (pycbc.distributions.sky_location.fishersky method)": [[56, "pycbc.distributions.sky_location.FisherSky.get_max_prob_point", false]], "get_max_prob_point() (pycbc.distributions.sky_location.healpixsky method)": [[56, "pycbc.distributions.sky_location.HealpixSky.get_max_prob_point", false]], "get_max_prob_point() (pycbc.distributions.sky_location.uniformdisksky method)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.get_max_prob_point", false]], "get_measure_level() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.get_measure_level", false]], "get_missing_segs_from_frame_file_cache() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.get_missing_segs_from_frame_file_cache", false]], "get_model() (in module pycbc.inference.models)": [[64, "pycbc.inference.models.get_model", false]], "get_models() (in module pycbc.inference.models)": [[64, "pycbc.inference.models.get_models", false]], "get_moments() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.get_moments", false]], "get_mu_params() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_mu_params", false]], "get_n_louder() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.get_n_louder", false]], "get_newsnr() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr", false]], "get_newsnr_sgveto() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr_sgveto", false]], "get_newsnr_sgveto_psdvar() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr_sgveto_psdvar", false]], "get_newsnr_sgveto_psdvar_scaled() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr_sgveto_psdvar_scaled", false]], "get_newsnr_sgveto_psdvar_scaled_threshold() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr_sgveto_psdvar_scaled_threshold", false]], "get_newsnr_sgveto_psdvar_threshold() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_newsnr_sgveto_psdvar_threshold", false]], "get_norms() (pycbc.population.fgmc_functions.backgroundeventrate method)": [[71, "pycbc.population.fgmc_functions.BackgroundEventRate.get_norms", false]], "get_norms() (pycbc.population.fgmc_functions.signaleventrate method)": [[71, "pycbc.population.fgmc_functions.SignalEventRate.get_norms", false]], "get_nrhybsur_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_nrhybsur_modes", false]], "get_nrsur_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_nrsur_modes", false]], "get_opt() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.get_opt", false]], "get_opt_tag() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.get_opt_tag", false]], "get_opt_tags() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.get_opt_tags", false]], "get_optional_arg_from_config() (in module pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.get_optional_arg_from_config", false]], "get_options_from_group() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.get_options_from_group", false]], "get_ordered_ifo_list() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.get_ordered_ifo_list", false]], "get_param() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.get_param", false]], "get_param_boundaries() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.get_param_boundaries", false]], "get_param_bounds_from_config() (in module pycbc.distributions.bounded)": [[56, "pycbc.distributions.bounded.get_param_bounds_from_config", false]], "get_param_names() (pycbc.io.hdf.singledettriggers class method)": [[67, "pycbc.io.hdf.SingleDetTriggers.get_param_names", false]], "get_pchisq_fn() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.get_pchisq_fn", false]], "get_pchisq_fn_pow2() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.get_pchisq_fn_pow2", false]], "get_physical_covaried_masses() (in module pycbc.tmpltbank.brute_force_methods)": [[75, "pycbc.tmpltbank.brute_force_methods.get_physical_covaried_masses", false]], "get_plot_group() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.get_plot_group", false]], "get_point_distance() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_point_distance", false]], "get_point_from_bins_and_idx() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.get_point_from_bins_and_idx", false]], "get_posterior_samples() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.get_posterior_samples", false]], "get_precalc_antenna_factors() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.get_precalc_antenna_factors", false]], "get_projection_matrix() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.get_projection_matrix", false]], "get_psd_model_list() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.get_psd_model_list", false]], "get_pycbc_psd_list() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.get_pycbc_psd_list", false]], "get_random_label() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.get_random_label", false]], "get_random_mass() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_random_mass", false]], "get_random_mass_point_particles() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.get_random_mass_point_particles", false]], "get_ranking() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.get_ranking", false]], "get_ref_vals() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.get_ref_vals", false]], "get_run() (in module pycbc.frame.gwosc)": [[60, "pycbc.frame.gwosc.get_run", false]], "get_sample_frequencies() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.get_sample_frequencies", false]], "get_sample_rate() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_sample_rate", false]], "get_sample_times() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.get_sample_times", false]], "get_scale_fac() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.get_scale_fac", false]], "get_science_segs_from_datafind_outs() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.get_science_segs_from_datafind_outs", false]], "get_segment_definer_comments() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.get_segment_definer_comments", false]], "get_segment_summary_times() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.get_segment_summary_times", false]], "get_segments_file() (in module pycbc.workflow.segment)": [[79, "pycbc.workflow.segment.get_segments_file", false]], "get_sg_pdf() (pycbc.population.fgmc_functions.foregroundevents method)": [[71, "pycbc.population.fgmc_functions.ForegroundEvents.get_sg_pdf", false]], "get_sgburst_waveform() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_sgburst_waveform", false]], "get_signum() (in module pycbc.results.str_utils)": [[73, "pycbc.results.str_utils.get_signum", false]], "get_single_template_params() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.get_single_template_params", false]], "get_sky_grid_scale() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.get_sky_grid_scale", false]], "get_slice() (pycbc.inference.io.base_hdf.baseinferencefile static method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.get_slice", false]], "get_sngl_ranking() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.get_sngl_ranking", false]], "get_snglfile_array_dict() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.get_snglfile_array_dict", false]], "get_sngls_ranking_from_trigs() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_sngls_ranking_from_trigs", false]], "get_snr() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.get_snr", false]], "get_snr() (pycbc.inference.models.relbin.relativetime method)": [[64, "pycbc.inference.models.relbin.RelativeTime.get_snr", false]], "get_snr() (pycbc.inference.models.relbin.relativetimedom method)": [[64, "pycbc.inference.models.relbin.RelativeTimeDom.get_snr", false]], "get_source() (in module pycbc.catalog.catalog)": [[53, "pycbc.catalog.catalog.get_source", false]], "get_start_dur() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.get_start_dur", false]], "get_statistic() (in module pycbc.events.stat)": [[57, "pycbc.events.stat.get_statistic", false]], "get_statistic_from_opts() (in module pycbc.events.stat)": [[57, "pycbc.events.stat.get_statistic_from_opts", false]], "get_subsections() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.get_subsections", false]], "get_summary_page_link() (in module pycbc.results.dq)": [[73, "pycbc.results.dq.get_summary_page_link", false]], "get_table_columns() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.get_table_columns", false]], "get_td_det_waveform_from_fd_det() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_td_det_waveform_from_fd_det", false]], "get_td_from_final_mass_spin() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.get_td_from_final_mass_spin", false]], "get_td_from_freqtau() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.get_td_from_freqtau", false]], "get_td_generator() (in module pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.get_td_generator", false]], "get_td_waveform() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_td_waveform", false]], "get_td_waveform_from_fd() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_td_waveform_from_fd", false]], "get_td_waveform_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.get_td_waveform_modes", false]], "get_template() (pycbc.waveform.bank.livefilterbank method)": [[78, "pycbc.waveform.bank.LiveFilterBank.get_template", false]], "get_template_amplitude_norm() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_template_amplitude_norm", false]], "get_thin_interval() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.get_thin_interval", false]], "get_times_covered_by_files() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.get_times_covered_by_files", false]], "get_tkernel() (in module pycbc.events.threshold_cupy)": [[57, "pycbc.events.threshold_cupy.get_tkernel", false]], "get_transformation() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.get_transformation", false]], "get_triggered_coherent_segment() (in module pycbc.workflow.segment)": [[79, "pycbc.workflow.segment.get_triggered_coherent_segment", false]], "get_two_pol_waveform_filter() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_two_pol_waveform_filter", false]], "get_valid_times() (pycbc.workflow.jobsetup.pycbcinspiralexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.get_valid_times", false]], "get_valid_times() (pycbc.workflow.jobsetup.pycbcmultiinspiralexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.get_valid_times", false]], "get_valid_times() (pycbc.workflow.jobsetup.pycbctmpltbankexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.get_valid_times", false]], "get_valid_times_for_job() (pycbc.workflow.jobsetup.jobsegmenter method)": [[79, "pycbc.workflow.jobsetup.JobSegmenter.get_valid_times_for_job", false]], "get_values_from_injection() (in module pycbc.inference.models.gaussian_noise)": [[64, "pycbc.inference.models.gaussian_noise.get_values_from_injection", false]], "get_variance() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.get_variance", false]], "get_waveform_end_frequency() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_waveform_end_frequency", false]], "get_waveform_filter() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_waveform_filter", false]], "get_waveform_filter_length_in_time() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_waveform_filter_length_in_time", false]], "get_waveform_filter_norm() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.get_waveform_filter_norm", false]], "get_waveforms() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.get_waveforms", false]], "get_waveforms() (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.get_waveforms", false]], "get_waveforms() (pycbc.inference.models.gated_gaussian_noise.gatedgaussiannoise method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise.get_waveforms", false]], "get_waveforms() (pycbc.inference.models.gaussian_noise.gaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.get_waveforms", false]], "get_waveforms() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.get_waveforms", false]], "getattrs() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.getattrs", false]], "getconf() (in module pycbc.opt)": [[52, "pycbc.opt.getconf", false]], "getslice() (pycbc.waveform.bank.livefilterbank method)": [[78, "pycbc.waveform.bank.LiveFilterBank.getslice", false]], "getstats() (pycbc.inference.models.base.modelstats method)": [[64, "pycbc.inference.models.base.ModelStats.getstats", false]], "getstatsdict() (pycbc.inference.models.base.modelstats method)": [[64, "pycbc.inference.models.base.ModelStats.getstatsdict", false]], "geweke() (in module pycbc.inference.geweke)": [[61, "pycbc.inference.geweke.geweke", false]], "gmst_accurate() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.gmst_accurate", false]], "gmst_estimate() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.gmst_estimate", false]], "gps_now() (in module pycbc)": [[52, "pycbc.gps_now", false]], "gracedb_tag_with_version() (in module pycbc.io.gracedb)": [[67, "pycbc.io.gracedb.gracedb_tag_with_version", false]], "group_layout() (in module pycbc.results.layout)": [[73, "pycbc.results.layout.group_layout", false]], "grouper() (in module pycbc.results.layout)": [[73, "pycbc.results.layout.grouper", false]], "grouper() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.grouper", false]], "gwosc_frame_json() (in module pycbc.frame.gwosc)": [[60, "pycbc.frame.gwosc.gwosc_frame_json", false]], "gwosc_frame_urls() (in module pycbc.frame.gwosc)": [[60, "pycbc.frame.gwosc.gwosc_frame_urls", false]], "halfchain() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.halfchain", false]], "handle_data() (pycbc.results.metadata.metaparser method)": [[73, "pycbc.results.metadata.MetaParser.handle_data", false]], "handle_starttag() (pycbc.results.metadata.metaparser method)": [[73, "pycbc.results.metadata.MetaParser.handle_starttag", false]], "harmonic_mean_estimator() (in module pycbc.inference.evidence)": [[61, "pycbc.inference.evidence.harmonic_mean_estimator", false]], "has_compressed_waveforms (pycbc.waveform.bank.templatebank attribute)": [[78, "pycbc.waveform.bank.TemplateBank.has_compressed_waveforms", false]], "has_opt() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.has_opt", false]], "has_option_tag() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.has_option_tag", false]], "has_option_tags() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.has_option_tags", false]], "has_pfn() (pycbc.workflow.pegasus_workflow.file method)": [[79, "pycbc.workflow.pegasus_workflow.File.has_pfn", false]], "hash_compare() (in module pycbc.workflow.configuration)": [[79, "pycbc.workflow.configuration.hash_compare", false]], "hdf_injtype_from_approximant() (in module pycbc.inject.inject)": [[66, "pycbc.inject.inject.hdf_injtype_from_approximant", false]], "healpixsky (class in pycbc.distributions.sky_location)": [[56, "pycbc.distributions.sky_location.HealpixSky", false]], "hfile (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.HFile", false]], "hierarchical_matched_filter_and_cluster() (pycbc.filter.matchedfilter.matchedfiltercontrol method)": [[59, "pycbc.filter.matchedfilter.MatchedFilterControl.hierarchical_matched_filter_and_cluster", false]], "hierarchicalmodel (class in pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel", false]], "hierarchicalparam (class in pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam", false]], "high_frequency_cutoff (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.high_frequency_cutoff", false]], "highpass() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.highpass", false]], "highpass_fir() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.highpass_fir", false]], "highpass_fir() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.highpass_fir", false]], "hist_overflow() (in module pycbc.results.plot)": [[73, "pycbc.results.plot.hist_overflow", false]], "hpd_coverage() (in module pycbc.rate)": [[52, "pycbc.rate.hpd_coverage", false]], "hpd_credible_interval() (in module pycbc.rate)": [[52, "pycbc.rate.hpd_credible_interval", false]], "hpd_interval() (pycbc.population.fgmc_laguerre.augmented_rv_continuous method)": [[71, "pycbc.population.fgmc_laguerre.augmented_rv_continuous.hpd_interval", false]], "hpd_threshold() (in module pycbc.rate)": [[52, "pycbc.rate.hpd_threshold", false]], "hpiter() (in module pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.hpiter", false]], "hstatic_params (pycbc.inference.models.hierarchical.hierarchicalmodel property)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.hstatic_params", false]], "htilde (pycbc.fft.fft_callback.param attribute)": [[58, "pycbc.fft.fft_callback.param.htilde", false]], "htilde (pycbc.fft.fft_callback.param2 attribute)": [[58, "pycbc.fft.fft_callback.param2.htilde", false]], "html_escape() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.html_escape", false]], "html_table() (in module pycbc.results.table_utils)": [[73, "pycbc.results.table_utils.html_table", false]], "hvariable_params (pycbc.inference.models.hierarchical.hierarchicalmodel property)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.hvariable_params", false]], "hybrid_meco_frequency() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.hybrid_meco_frequency", false]], "hybrid_meco_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.hybrid_meco_velocity", false]], "hybridenergy() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.hybridEnergy", false]], "hypertriangle() (in module pycbc.conversions)": [[52, "pycbc.conversions.hypertriangle", false]], "id (pycbc.workflow.pegasus_workflow.executable attribute)": [[79, "pycbc.workflow.pegasus_workflow.Executable.id", false]], "id_from_param() (pycbc.waveform.bank.livefilterbank method)": [[78, "pycbc.waveform.bank.LiveFilterBank.id_from_param", false]], "identify_needed_data() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.identify_needed_data", false]], "idqbuffer (class in pycbc.frame.frame)": [[60, "pycbc.frame.frame.iDQBuffer", false]], "ifar() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.ifar", false]], "ifar_opt_to_far_limit() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.ifar_opt_to_far_limit", false]], "ifft (class in pycbc.fft.class_api)": [[58, "pycbc.fft.class_api.IFFT", false]], "ifft (class in pycbc.fft.cupyfft)": [[58, "pycbc.fft.cupyfft.IFFT", false]], "ifft (class in pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.IFFT", false]], "ifft (class in pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.IFFT", false]], "ifft (class in pycbc.fft.npfft)": [[58, "pycbc.fft.npfft.IFFT", false]], "ifft() (in module pycbc.fft.cupyfft)": [[58, "pycbc.fft.cupyfft.ifft", false]], "ifft() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.ifft", false]], "ifft() (in module pycbc.fft.func_api)": [[58, "pycbc.fft.func_api.ifft", false]], "ifft() (in module pycbc.fft.mkl)": [[58, "pycbc.fft.mkl.ifft", false]], "ifft() (in module pycbc.fft.npfft)": [[58, "pycbc.fft.npfft.ifft", false]], "ifo (pycbc.workflow.core.executable property)": [[79, "pycbc.workflow.core.Executable.ifo", false]], "ifo (pycbc.workflow.core.file property)": [[79, "pycbc.workflow.core.File.ifo", false]], "ifo_color() (in module pycbc.results.color)": [[73, "pycbc.results.color.ifo_color", false]], "ifo_set (pycbc.types.optparse.dictwithdefaultreturn attribute)": [[76, "pycbc.types.optparse.DictWithDefaultReturn.ifo_set", false]], "ifos_from_combo() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.ifos_from_combo", false]], "ignore_failed_waveforms (pycbc.inference.models.gaussian_noise.basegaussiannoise attribute)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.ignore_failed_waveforms", false]], "iligomodel() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.iLIGOModel", false]], "iligoseismic() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.iLIGOSeismic", false]], "iligoshot() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.iLIGOShot", false]], "iligosrd() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.iLIGOSRD", false]], "iligothermal() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.iLIGOThermal", false]], "imag() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.imag", false]], "imap() (pycbc.pool.singlepool method)": [[52, "pycbc.pool.SinglePool.imap", false]], "imap_unordered() (pycbc.pool.singlepool method)": [[52, "pycbc.pool.SinglePool.imap_unordered", false]], "import_double_wisdom_from_filename() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.import_double_wisdom_from_filename", false]], "import_optional() (in module pycbc.libutils)": [[52, "pycbc.libutils.import_optional", false]], "import_single_wisdom_from_filename() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.import_single_wisdom_from_filename", false]], "import_sys_wisdom() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.import_sys_wisdom", false]], "importance_dlogz (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.importance_dlogz", false]], "importance_logz (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.importance_logz", false]], "in_coinc_time_excl() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.in_coinc_time_excl", false]], "in_coinc_time_incl() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.in_coinc_time_incl", false]], "in_kmax (pycbc.fft.fft_callback.param2 attribute)": [[58, "pycbc.fft.fft_callback.param2.in_kmax", false]], "incdenominator() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.incdenominator", false]], "inclination (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.inclination", false]], "incnumerator() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.incnumerator", false]], "incoherentfromfilehdfinjectionset (class in pycbc.inject.inject)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet", false]], "increment() (pycbc.events.coinc.coincexpirebuffer method)": [[57, "pycbc.events.coinc.CoincExpireBuffer.increment", false]], "indentedhelpformatterwithnl (class in pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL", false]], "independentchipchieff (class in pycbc.distributions.spins)": [[56, "pycbc.distributions.spins.IndependentChiPChiEff", false]], "indices_of_flag() (pycbc.frame.frame.statusbuffer method)": [[60, "pycbc.frame.frame.StatusBuffer.indices_of_flag", false]], "indices_outside_segments() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.indices_outside_segments", false]], "indices_outside_times() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.indices_outside_times", false]], "indices_within_segments() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.indices_within_segments", false]], "indices_within_times() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.indices_within_times", false]], "indoc (pycbc.inject.inject.sgburstinjectionset attribute)": [[66, "pycbc.inject.inject.SGBurstInjectionSet.indoc", false]], "indoc (pycbc.waveform.bank.templatebank attribute)": [[78, "pycbc.waveform.bank.TemplateBank.indoc", false]], "inferencetxtfile (class in pycbc.inference.io.txt)": [[62, "pycbc.inference.io.txt.InferenceTXTFile", false]], "ingest_cuts_option_group() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.ingest_cuts_option_group", false]], "init_from_frequencies() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.init_from_frequencies", false]], "init_logging() (in module pycbc)": [[52, "pycbc.init_logging", false]], "initial_dist_from_config() (in module pycbc.inference.sampler.base)": [[65, "pycbc.inference.sampler.base.initial_dist_from_config", false]], "initialize_eos() (in module pycbc.neutron_stars.eos_utils)": [[69, "pycbc.neutron_stars.eos_utils.initialize_eos", false]], "inj_distance_pdf() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.inj_distance_pdf", false]], "inj_mass_pdf() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.inj_mass_pdf", false]], "inj_spin_pdf() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.inj_spin_pdf", false]], "inj_to_hdf() (in module pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.inj_to_hdf", false]], "inject() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.inject", false]], "injections_from_cli() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.injections_from_cli", false]], "injections_group (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.injections_group", false]], "injectionset (class in pycbc.inject.inject)": [[66, "pycbc.inject.inject.InjectionSet", false]], "injfilterrejector (class in pycbc.inject.injfilterrejector)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector", false]], "injtype (pycbc.inject.inject.cbchdfinjectionset attribute)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.injtype", false]], "injtype (pycbc.inject.inject.incoherentfromfilehdfinjectionset attribute)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.injtype", false]], "injtype (pycbc.inject.inject.ringdownhdfinjectionset attribute)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.injtype", false]], "inline_linear_interp() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.inline_linear_interp", false]], "inline_linear_interp() (in module pycbc.waveform.decompress_cpu)": [[78, "pycbc.waveform.decompress_cpu.inline_linear_interp", false]], "inline_linear_interp() (in module pycbc.waveform.decompress_cupy)": [[78, "pycbc.waveform.decompress_cupy.inline_linear_interp", false]], "inner() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.inner", false]], "inner() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.inner", false]], "inner() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.inner", false]], "inner_real() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.inner_real", false]], "inputvar (pycbc.transforms.log property)": [[52, "pycbc.transforms.Log.inputvar", false]], "inputvar (pycbc.transforms.logit property)": [[52, "pycbc.transforms.Logit.inputvar", false]], "insert_args() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.insert_args", false]], "insert_args() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator static method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.insert_args", false]], "insert_args() (pycbc.events.single.livesingle static method)": [[57, "pycbc.events.single.LiveSingle.insert_args", false]], "insert_bank_bins_option_group() (in module pycbc.events.triggers)": [[57, "pycbc.events.triggers.insert_bank_bins_option_group", false]], "insert_base_bank_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.insert_base_bank_options", false]], "insert_cuts_option_group() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.insert_cuts_option_group", false]], "insert_ethinca_metric_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.insert_ethinca_metric_options", false]], "insert_fft_option_group() (in module pycbc.fft.parser_support)": [[58, "pycbc.fft.parser_support.insert_fft_option_group", false]], "insert_fft_options() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.insert_fft_options", false]], "insert_injfilterrejector_option_group() (in module pycbc.inject.injfilterrejector)": [[66, "pycbc.inject.injfilterrejector.insert_injfilterrejector_option_group", false]], "insert_injfilterrejector_option_group_multi_ifo() (in module pycbc.inject.injfilterrejector)": [[66, "pycbc.inject.injfilterrejector.insert_injfilterrejector_option_group_multi_ifo", false]], "insert_into_dax() (pycbc.workflow.pegasus_workflow.file method)": [[79, "pycbc.workflow.pegasus_workflow.File.insert_into_dax", false]], "insert_live_pastro_option_group() (in module pycbc.population.live_pastro_utils)": [[71, "pycbc.population.live_pastro_utils.insert_live_pastro_option_group", false]], "insert_mass_range_option_group() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.insert_mass_range_option_group", false]], "insert_metric_calculation_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.insert_metric_calculation_options", false]], "insert_optimization_option_group() (in module pycbc.opt)": [[52, "pycbc.opt.insert_optimization_option_group", false]], "insert_option_group() (pycbc.vetoes.sgchisq.singledetsgchisq static method)": [[77, "pycbc.vetoes.sgchisq.SingleDetSGChisq.insert_option_group", false]], "insert_processing_option_group() (in module pycbc.scheme)": [[52, "pycbc.scheme.insert_processing_option_group", false]], "insert_psd_option_group() (in module pycbc.psd)": [[72, "pycbc.psd.insert_psd_option_group", false]], "insert_psd_option_group_multi_ifo() (in module pycbc.psd)": [[72, "pycbc.psd.insert_psd_option_group_multi_ifo", false]], "insert_segment_option_group() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.insert_segment_option_group", false]], "insert_segment_option_group_multi_ifo() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.insert_segment_option_group_multi_ifo", false]], "insert_significance_option_group() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.insert_significance_option_group", false]], "insert_snr_optimizer_options() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.insert_snr_optimizer_options", false]], "insert_statistic_option_group() (in module pycbc.events.stat)": [[57, "pycbc.events.stat.insert_statistic_option_group", false]], "insert_strain_option_group() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.insert_strain_option_group", false]], "insert_strain_option_group_multi_ifo() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.insert_strain_option_group_multi_ifo", false]], "int_gps_time_to_str() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.int_gps_time_to_str", false]], "integral_element() (in module pycbc.rate)": [[52, "pycbc.rate.integral_element", false]], "integrate_efficiency() (in module pycbc.rate)": [[52, "pycbc.rate.integrate_efficiency", false]], "intermediate_product (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT", false]], "interp_grav_mass_to_baryon_mass() (in module pycbc.neutron_stars.eos_utils)": [[69, "pycbc.neutron_stars.eos_utils.interp_grav_mass_to_baryon_mass", false]], "interp_grav_mass_to_compactness() (in module pycbc.neutron_stars.eos_utils)": [[69, "pycbc.neutron_stars.eos_utils.interp_grav_mass_to_compactness", false]], "interpolate() (in module pycbc.psd.estimate)": [[72, "pycbc.psd.estimate.interpolate", false]], "interpolate() (pycbc.waveform.decompress_cupy.cupylinearinterpolate method)": [[78, "pycbc.waveform.decompress_cupy.CUPYLinearInterpolate.interpolate", false]], "interpolate_complex_frequency() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.interpolate_complex_frequency", false]], "interpolate_exe() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.interpolate_exe", false]], "interpolate_psd() (in module pycbc.tmpltbank.calc_moments)": [[75, "pycbc.tmpltbank.calc_moments.interpolate_psd", false]], "interpolate_string() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.interpolate_string", false]], "interpolate_string() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.interpolate_string", false]], "interpolatingconfigparser (class in pycbc.types.config)": [[76, "pycbc.types.config.InterpolatingConfigParser", false]], "interpolation (pycbc.waveform.compress.compressedwaveform attribute)": [[78, "pycbc.waveform.compress.CompressedWaveform.interpolation", false]], "intmc() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.intmc", false]], "invalidate_psd() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.invalidate_psd", false]], "inverse (pycbc.transforms.alignedmassspintocartesianspin attribute)": [[52, "pycbc.transforms.AlignedMassSpinToCartesianSpin.inverse", false]], "inverse (pycbc.transforms.basetransform attribute)": [[52, "pycbc.transforms.BaseTransform.inverse", false]], "inverse (pycbc.transforms.cartesianspintoalignedmassspin attribute)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.inverse", false]], "inverse (pycbc.transforms.cartesianspintoprecessionmassspin attribute)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.inverse", false]], "inverse (pycbc.transforms.cartesiantospherical attribute)": [[52, "pycbc.transforms.CartesianToSpherical.inverse", false]], "inverse (pycbc.transforms.chiptocartesianspin attribute)": [[52, "pycbc.transforms.ChiPToCartesianSpin.inverse", false]], "inverse (pycbc.transforms.chirpdistancetodistance attribute)": [[52, "pycbc.transforms.ChirpDistanceToDistance.inverse", false]], "inverse (pycbc.transforms.distancetochirpdistance attribute)": [[52, "pycbc.transforms.DistanceToChirpDistance.inverse", false]], "inverse (pycbc.transforms.distancetoredshift attribute)": [[52, "pycbc.transforms.DistanceToRedshift.inverse", false]], "inverse (pycbc.transforms.exponent attribute)": [[52, "pycbc.transforms.Exponent.inverse", false]], "inverse (pycbc.transforms.geotolisa attribute)": [[52, "pycbc.transforms.GEOToLISA.inverse", false]], "inverse (pycbc.transforms.geotossb attribute)": [[52, "pycbc.transforms.GEOToSSB.inverse", false]], "inverse (pycbc.transforms.lisatogeo attribute)": [[52, "pycbc.transforms.LISAToGEO.inverse", false]], "inverse (pycbc.transforms.lisatossb attribute)": [[52, "pycbc.transforms.LISAToSSB.inverse", false]], "inverse (pycbc.transforms.log attribute)": [[52, "pycbc.transforms.Log.inverse", false]], "inverse (pycbc.transforms.logistic attribute)": [[52, "pycbc.transforms.Logistic.inverse", false]], "inverse (pycbc.transforms.logit attribute)": [[52, "pycbc.transforms.Logit.inverse", false]], "inverse (pycbc.transforms.mass1mass2tomchirpeta attribute)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.inverse", false]], "inverse (pycbc.transforms.mass1mass2tomchirpq attribute)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.inverse", false]], "inverse (pycbc.transforms.mchirpqtomass1mass2 attribute)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.inverse", false]], "inverse (pycbc.transforms.precessionmassspintocartesianspin attribute)": [[52, "pycbc.transforms.PrecessionMassSpinToCartesianSpin.inverse", false]], "inverse (pycbc.transforms.sphericalspin1tocartesianspin1 attribute)": [[52, "pycbc.transforms.SphericalSpin1ToCartesianSpin1.inverse", false]], "inverse (pycbc.transforms.sphericalspin2tocartesianspin2 attribute)": [[52, "pycbc.transforms.SphericalSpin2ToCartesianSpin2.inverse", false]], "inverse (pycbc.transforms.sphericaltocartesian attribute)": [[52, "pycbc.transforms.SphericalToCartesian.inverse", false]], "inverse (pycbc.transforms.ssbtogeo attribute)": [[52, "pycbc.transforms.SSBToGEO.inverse", false]], "inverse (pycbc.transforms.ssbtolisa attribute)": [[52, "pycbc.transforms.SSBToLISA.inverse", false]], "inverse_jacobian() (pycbc.transforms.basetransform method)": [[52, "pycbc.transforms.BaseTransform.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.cartesianspintoalignedmassspin method)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.cartesianspintoprecessionmassspin method)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.cartesiantospherical method)": [[52, "pycbc.transforms.CartesianToSpherical.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.chiptocartesianspin method)": [[52, "pycbc.transforms.ChiPToCartesianSpin.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.chirpdistancetodistance method)": [[52, "pycbc.transforms.ChirpDistanceToDistance.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.distancetochirpdistance method)": [[52, "pycbc.transforms.DistanceToChirpDistance.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.exponent method)": [[52, "pycbc.transforms.Exponent.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.log method)": [[52, "pycbc.transforms.Log.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.logistic method)": [[52, "pycbc.transforms.Logistic.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.logit method)": [[52, "pycbc.transforms.Logit.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.mass1mass2tomchirpeta method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.mass1mass2tomchirpq method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.mchirpetatomass1mass2 method)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2.inverse_jacobian", false]], "inverse_jacobian() (pycbc.transforms.mchirpqtomass1mass2 method)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.inverse_jacobian", false]], "inverse_spectrum_truncation() (in module pycbc.psd.estimate)": [[72, "pycbc.psd.estimate.inverse_spectrum_truncation", false]], "inverse_transform() (pycbc.transforms.alignedmassspintocartesianspin method)": [[52, "pycbc.transforms.AlignedMassSpinToCartesianSpin.inverse_transform", false]], "inverse_transform() (pycbc.transforms.basetransform method)": [[52, "pycbc.transforms.BaseTransform.inverse_transform", false]], "inverse_transform() (pycbc.transforms.cartesianspintoalignedmassspin method)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.inverse_transform", false]], "inverse_transform() (pycbc.transforms.cartesianspintoprecessionmassspin method)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.inverse_transform", false]], "inverse_transform() (pycbc.transforms.cartesiantospherical method)": [[52, "pycbc.transforms.CartesianToSpherical.inverse_transform", false]], "inverse_transform() (pycbc.transforms.chiptocartesianspin method)": [[52, "pycbc.transforms.ChiPToCartesianSpin.inverse_transform", false]], "inverse_transform() (pycbc.transforms.chirpdistancetodistance method)": [[52, "pycbc.transforms.ChirpDistanceToDistance.inverse_transform", false]], "inverse_transform() (pycbc.transforms.distancetochirpdistance method)": [[52, "pycbc.transforms.DistanceToChirpDistance.inverse_transform", false]], "inverse_transform() (pycbc.transforms.exponent method)": [[52, "pycbc.transforms.Exponent.inverse_transform", false]], "inverse_transform() (pycbc.transforms.geotolisa method)": [[52, "pycbc.transforms.GEOToLISA.inverse_transform", false]], "inverse_transform() (pycbc.transforms.geotossb method)": [[52, "pycbc.transforms.GEOToSSB.inverse_transform", false]], "inverse_transform() (pycbc.transforms.lisatogeo method)": [[52, "pycbc.transforms.LISAToGEO.inverse_transform", false]], "inverse_transform() (pycbc.transforms.lisatossb method)": [[52, "pycbc.transforms.LISAToSSB.inverse_transform", false]], "inverse_transform() (pycbc.transforms.log method)": [[52, "pycbc.transforms.Log.inverse_transform", false]], "inverse_transform() (pycbc.transforms.logistic method)": [[52, "pycbc.transforms.Logistic.inverse_transform", false]], "inverse_transform() (pycbc.transforms.logit method)": [[52, "pycbc.transforms.Logit.inverse_transform", false]], "inverse_transform() (pycbc.transforms.mass1mass2tomchirpeta method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.inverse_transform", false]], "inverse_transform() (pycbc.transforms.mass1mass2tomchirpq method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.inverse_transform", false]], "inverse_transform() (pycbc.transforms.mchirpetatomass1mass2 method)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2.inverse_transform", false]], "inverse_transform() (pycbc.transforms.mchirpqtomass1mass2 method)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.inverse_transform", false]], "inverse_transform() (pycbc.transforms.precessionmassspintocartesianspin method)": [[52, "pycbc.transforms.PrecessionMassSpinToCartesianSpin.inverse_transform", false]], "inverse_transform() (pycbc.transforms.sphericaltocartesian method)": [[52, "pycbc.transforms.SphericalToCartesian.inverse_transform", false]], "inverse_transform() (pycbc.transforms.ssbtogeo method)": [[52, "pycbc.transforms.SSBToGEO.inverse_transform", false]], "inverse_transform() (pycbc.transforms.ssbtolisa method)": [[52, "pycbc.transforms.SSBToLISA.inverse_transform", false]], "invq_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.invq_from_mass1_mass2", false]], "io (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.io", false]], "io (pycbc.inference.sampler.dummy.dummysampler property)": [[65, "pycbc.inference.sampler.dummy.DummySampler.io", false]], "io (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.io", false]], "io (pycbc.inference.sampler.emcee.emceeensemblesampler property)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.io", false]], "io (pycbc.inference.sampler.emcee_pt.emceeptsampler property)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.io", false]], "io (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.io", false]], "io (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.io", false]], "io (pycbc.inference.sampler.nessai.nessaisampler property)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.io", false]], "io (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.io", false]], "io (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.io", false]], "io (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.io", false]], "irregularbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.IrregularBins", false]], "is_burned_in (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.is_burned_in", false]], "is_extent_valid() (pycbc.frame.frame.statusbuffer method)": [[60, "pycbc.frame.frame.StatusBuffer.is_extent_valid", false]], "is_main_process() (in module pycbc.pool)": [[52, "pycbc.pool.is_main_process", false]], "is_outside_range() (pycbc.tmpltbank.option_utils.massrangeparameters method)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters.is_outside_range", false]], "is_same_as() (pycbc.workflow.pegasus_workflow.transformation method)": [[79, "pycbc.workflow.pegasus_workflow.Transformation.is_same_as", false]], "isco_solution() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.ISCO_solution", false]], "isso_eq_at_pole() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.ISSO_eq_at_pole", false]], "isso_eq_at_pole_dr() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.ISSO_eq_at_pole_dr", false]], "isso_eq_at_pole_dr2() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.ISSO_eq_at_pole_dr2", false]], "itemsize (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.itemsize", false]], "iterations() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.iterations", false]], "jacobian() (pycbc.transforms.basetransform method)": [[52, "pycbc.transforms.BaseTransform.jacobian", false]], "jacobian() (pycbc.transforms.cartesianspintoalignedmassspin method)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.jacobian", false]], "jacobian() (pycbc.transforms.cartesianspintoprecessionmassspin method)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.jacobian", false]], "jacobian() (pycbc.transforms.cartesiantospherical method)": [[52, "pycbc.transforms.CartesianToSpherical.jacobian", false]], "jacobian() (pycbc.transforms.chiptocartesianspin method)": [[52, "pycbc.transforms.ChiPToCartesianSpin.jacobian", false]], "jacobian() (pycbc.transforms.chirpdistancetodistance method)": [[52, "pycbc.transforms.ChirpDistanceToDistance.jacobian", false]], "jacobian() (pycbc.transforms.customtransform method)": [[52, "pycbc.transforms.CustomTransform.jacobian", false]], "jacobian() (pycbc.transforms.distancetochirpdistance method)": [[52, "pycbc.transforms.DistanceToChirpDistance.jacobian", false]], "jacobian() (pycbc.transforms.exponent method)": [[52, "pycbc.transforms.Exponent.jacobian", false]], "jacobian() (pycbc.transforms.log method)": [[52, "pycbc.transforms.Log.jacobian", false]], "jacobian() (pycbc.transforms.logistic method)": [[52, "pycbc.transforms.Logistic.jacobian", false]], "jacobian() (pycbc.transforms.logit method)": [[52, "pycbc.transforms.Logit.jacobian", false]], "jacobian() (pycbc.transforms.mass1mass2tomchirpeta method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.jacobian", false]], "jacobian() (pycbc.transforms.mass1mass2tomchirpq method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.jacobian", false]], "jacobian() (pycbc.transforms.mchirpetatomass1mass2 method)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2.jacobian", false]], "jacobian() (pycbc.transforms.mchirpqtomass1mass2 method)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.jacobian", false]], "javascript (pycbc.results.mpld3_utils.clicklink attribute)": [[73, "pycbc.results.mpld3_utils.ClickLink.JAVASCRIPT", false]], "javascript (pycbc.results.mpld3_utils.linetooltip attribute)": [[73, "pycbc.results.mpld3_utils.LineTooltip.JAVASCRIPT", false]], "javascript (pycbc.results.mpld3_utils.mplslide attribute)": [[73, "pycbc.results.mpld3_utils.MPLSlide.JAVASCRIPT", false]], "javascript (pycbc.results.mpld3_utils.tooltip attribute)": [[73, "pycbc.results.mpld3_utils.Tooltip.JAVASCRIPT", false]], "jframe_to_l0frame() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.jframe_to_l0frame", false]], "jobsegmenter (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.JobSegmenter", false]], "jointdistribution (class in pycbc.distributions.joint)": [[56, "pycbc.distributions.joint.JointDistribution", false]], "jointprimarymarginalizedmodel (class in pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel", false]], "js() (in module pycbc.inference.entropy)": [[61, "pycbc.inference.entropy.js", false]], "kagra() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRA", false]], "kagra128mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRA128MpcT1800545", false]], "kagra25mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRA25MpcT1800545", false]], "kagra80mpct1800545() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRA80MpcT1800545", false]], "kagradesignsensitivityt1600593() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRADesignSensitivityT1600593", false]], "kagraearlysensitivityt1600593() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRAEarlySensitivityT1600593", false]], "kagralatesensitivityt1600593() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRALateSensitivityT1600593", false]], "kagramidsensitivityt1600593() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRAMidSensitivityT1600593", false]], "kagraopeningsensitivityt1600593() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.KAGRAOpeningSensitivityT1600593", false]], "kde (pycbc.distributions.arbitrary.arbitrary property)": [[56, "pycbc.distributions.arbitrary.Arbitrary.kde", false]], "kde (pycbc.distributions.arbitrary.fromfile attribute)": [[56, "pycbc.distributions.arbitrary.FromFile.kde", false]], "kde_ratio() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.kde_ratio", false]], "keep_but_raise_warning (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.KEEP_BUT_RAISE_WARNING", false]], "keep_loudest_in_interval() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.keep_loudest_in_interval", false]], "keep_near_injection() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.keep_near_injection", false]], "kerr_factor() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.Kerr_factor", false]], "kerr_lightring() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.kerr_lightring", false]], "kerr_lightring_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.kerr_lightring_velocity", false]], "kind (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.kind", false]], "kl() (in module pycbc.inference.entropy)": [[61, "pycbc.inference.entropy.kl", false]], "kmax (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.kmax", false]], "kmin (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.kmin", false]], "ks_test() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.KS_test", false]], "ks_test() (in module pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.ks_test", false]], "ks_test() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.ks_test", false]], "l0frame_to_jframe() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.l0frame_to_jframe", false]], "label_dict (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.label_dict", false]], "labels (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.labels", false]], "lal() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.lal", false]], "lal() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.lal", false]], "lal() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.lal", false]], "lal() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.lal", false]], "lalappsinspinjexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.LalappsInspinjExecutable", false]], "lambda1_from_delta_lambda_tilde_lambda_tilde() (in module pycbc.conversions)": [[52, "pycbc.conversions.lambda1_from_delta_lambda_tilde_lambda_tilde", false]], "lambda2_from_delta_lambda_tilde_lambda_tilde() (in module pycbc.conversions)": [[52, "pycbc.conversions.lambda2_from_delta_lambda_tilde_lambda_tilde", false]], "lambda_data (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.lambda_data", false]], "lambda_from_mass_tov_file() (in module pycbc.conversions)": [[52, "pycbc.conversions.lambda_from_mass_tov_file", false]], "lambda_from_tov_data() (pycbc.transforms.lambdafromtovfile static method)": [[52, "pycbc.transforms.LambdaFromTOVFile.lambda_from_tov_data", false]], "lambda_param (pycbc.transforms.lambdafrommultipletovfiles property)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.lambda_param", false]], "lambda_param (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.lambda_param", false]], "lambda_tilde() (in module pycbc.conversions)": [[52, "pycbc.conversions.lambda_tilde", false]], "lambdafrommultipletovfiles (class in pycbc.transforms)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles", false]], "lambdafromtovfile (class in pycbc.transforms)": [[52, "pycbc.transforms.LambdaFromTOVFile", false]], "larger() (pycbc.boundaries.closedbound method)": [[52, "pycbc.boundaries.ClosedBound.larger", false]], "larger() (pycbc.boundaries.openbound method)": [[52, "pycbc.boundaries.OpenBound.larger", false]], "last_iteration() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.last_iteration", false]], "legacy_approximant_name() (in module pycbc.inject.inject)": [[66, "pycbc.inject.inject.legacy_approximant_name", false]], "legacy_row_id_converter() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.legacy_row_id_converter", false]], "light_travel_time_to_detector() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.light_travel_time_to_detector", false]], "ligolwaddexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.LigolwAddExecutable", false]], "ligolwcontenthandler (class in pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.LIGOLWContentHandler", false]], "likelihood_function (pycbc.inference.models.relbin.relative property)": [[64, "pycbc.inference.models.relbin.Relative.likelihood_function", false]], "likelihood_parts() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts", false]], "likelihood_parts_det() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_det", false]], "likelihood_parts_det_multi() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_det_multi", false]], "likelihood_parts_multi() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_multi", false]], "likelihood_parts_multi_v() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_multi_v", false]], "likelihood_parts_v() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_v", false]], "likelihood_parts_v_pol() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_v_pol", false]], "likelihood_parts_v_pol_time() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_v_pol_time", false]], "likelihood_parts_v_time() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_v_time", false]], "likelihood_parts_vector() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_vector", false]], "likelihood_parts_vectorp() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_vectorp", false]], "likelihood_parts_vectort() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.likelihood_parts_vectort", false]], "likelihood_wrapper (class in pycbc.inference.models.brute_marg)": [[64, "pycbc.inference.models.brute_marg.likelihood_wrapper", false]], "limitedsizedict (class in pycbc.opt)": [[52, "pycbc.opt.LimitedSizeDict", false]], "line_model() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.line_model", false]], "linearbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.LinearBins", false]], "linearplusoverflowbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.LinearPlusOverflowBins", false]], "linetooltip (class in pycbc.results.mpld3_utils)": [[73, "pycbc.results.mpld3_utils.LineTooltip", false]], "lisa_position_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.lisa_position_ssb", false]], "lisa_position_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.lisa_position_ssb", false]], "lisa_psd_components() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.lisa_psd_components", false]], "lisa_to_geo() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.lisa_to_geo", false]], "lisa_to_geo() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.lisa_to_geo", false]], "lisa_to_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.lisa_to_ssb", false]], "lisa_to_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.lisa_to_ssb", false]], "lisatogeo (class in pycbc.transforms)": [[52, "pycbc.transforms.LISAToGEO", false]], "lisatossb (class in pycbc.transforms)": [[52, "pycbc.transforms.LISAToSSB", false]], "list_catalogs() (in module pycbc.catalog.catalog)": [[53, "pycbc.catalog.catalog.list_catalogs", false]], "live_calc_psd_variation() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.live_calc_psd_variation", false]], "live_create_filter() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.live_create_filter", false]], "live_find_var_value() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.live_find_var_value", false]], "livebatchmatchedfilter (class in pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.LiveBatchMatchedFilter", false]], "livecoinctimeslidebackgroundestimator (class in pycbc.events.coinc)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator", false]], "livefilterbank (class in pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.LiveFilterBank", false]], "livesingle (class in pycbc.events.single)": [[57, "pycbc.events.single.LiveSingle", false]], "lm_amps_phases() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_amps_phases", false]], "lm_arbitrary_harmonics() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_arbitrary_harmonics", false]], "lm_deltaf() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_deltaf", false]], "lm_deltat() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_deltat", false]], "lm_ffinal() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_ffinal", false]], "lm_freqs_taus() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_freqs_taus", false]], "lm_tfinal() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.lm_tfinal", false]], "load() (pycbc.workflow.core.filelist class method)": [[79, "pycbc.workflow.core.FileList.load", false]], "load_array() (in module pycbc.types.array)": [[76, "pycbc.types.array.load_array", false]], "load_data() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.load_data", false]], "load_detector_config() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.load_detector_config", false]], "load_frequencyseries() (in module pycbc.types.frequencyseries)": [[76, "pycbc.types.frequencyseries.load_frequencyseries", false]], "load_from_config() (in module pycbc.inference.sampler)": [[65, "pycbc.inference.sampler.load_from_config", false]], "load_hdf5_to_dict() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.load_hdf5_to_dict", false]], "load_html_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.load_html_metadata", false]], "load_metadata_from_file() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.load_metadata_from_file", false]], "load_ns_sequence() (in module pycbc.neutron_stars.eos_utils)": [[69, "pycbc.neutron_stars.eos_utils.load_ns_sequence", false]], "load_opts() (in module pycbc.inference.jump.normal)": [[63, "pycbc.inference.jump.normal.load_opts", false]], "load_png_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.load_png_metadata", false]], "load_segment_dict() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.load_segment_dict", false]], "load_source() (in module pycbc)": [[52, "pycbc.load_source", false]], "load_state() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.load_state", false]], "load_time_slides() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.load_time_slides", false]], "load_timeseries() (in module pycbc.types.timeseries)": [[76, "pycbc.types.timeseries.load_timeseries", false]], "load_to_memory (pycbc.waveform.compress.compressedwaveform attribute)": [[78, "pycbc.waveform.compress.CompressedWaveform.load_to_memory", false]], "loadfile() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.loadfile", false]], "loadts() (pycbc.inject.inject.incoherentfromfilehdfinjectionset method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.loadts", false]], "localization_to_propagation_vector() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.localization_to_propagation_vector", false]], "localization_to_propagation_vector() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.localization_to_propagation_vector", false]], "location_args (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.location_args", false]], "location_args (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.location_args", false]], "location_args (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.location_args", false]], "location_args (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.location_args", false]], "locations_to_cache() (in module pycbc.frame.frame)": [[60, "pycbc.frame.frame.locations_to_cache", false]], "log (class in pycbc.transforms)": [[52, "pycbc.transforms.Log", false]], "log_datafind_command() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.log_datafind_command", false]], "log_evidence (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.log_evidence", false]], "log_likelihood() (pycbc.inference.sampler.base_cube.cubemodel method)": [[65, "pycbc.inference.sampler.base_cube.CubeModel.log_likelihood", false]], "log_likelihood() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.log_likelihood", false]], "log_prior() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.log_prior", false]], "log_rho_bg() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.log_rho_bg", false]], "log_rho_fg() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.log_rho_fg", false]], "log_rho_fg_analytic() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.log_rho_fg_analytic", false]], "log_rho_fgmc() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.log_rho_fgmc", false]], "logarithmicbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.LogarithmicBins", false]], "logarithmicplusoverflowbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.LogarithmicPlusOverflowBins", false]], "logdet_fit() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.logdet_fit", false]], "logformatter (class in pycbc)": [[52, "pycbc.LogFormatter", false]], "logistic (class in pycbc.transforms)": [[52, "pycbc.transforms.Logistic", false]], "logistic() (pycbc.transforms.logit static method)": [[52, "pycbc.transforms.Logit.logistic", false]], "logit (class in pycbc.transforms)": [[52, "pycbc.transforms.Logit", false]], "logit() (pycbc.transforms.logit static method)": [[52, "pycbc.transforms.Logit.logit", false]], "logjacobian (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.logjacobian", false]], "logjacobian() (pycbc.inference.models.base.samplingtransforms method)": [[64, "pycbc.inference.models.base.SamplingTransforms.logjacobian", false]], "loglikelihood (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.loglikelihood", false]], "loglikelihood() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.loglikelihood", false]], "loglr (pycbc.inference.models.base_data.basedatamodel property)": [[64, "pycbc.inference.models.base_data.BaseDataModel.loglr", false]], "lognl (pycbc.inference.models.base_data.basedatamodel property)": [[64, "pycbc.inference.models.base_data.BaseDataModel.lognl", false]], "lognoiserate() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.lognoiserate", false]], "lognorm (pycbc.distributions.arbitrary.fromfile attribute)": [[56, "pycbc.distributions.arbitrary.FromFile.lognorm", false]], "lognorm (pycbc.distributions.mass.qfromuniformmass1mass2 property)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2.lognorm", false]], "lognorm (pycbc.distributions.power_law.uniformpowerlaw property)": [[56, "pycbc.distributions.power_law.UniformPowerLaw.lognorm", false]], "lognorm (pycbc.distributions.uniform.uniform property)": [[56, "pycbc.distributions.uniform.Uniform.lognorm", false]], "lognorm (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.lognorm", false]], "logpdf() (pycbc.distributions.bounded.boundeddist method)": [[56, "pycbc.distributions.bounded.BoundedDist.logpdf", false]], "logpdf() (pycbc.distributions.external.distributionfunctionfromfile method)": [[56, "pycbc.distributions.external.DistributionFunctionFromFile.logpdf", false]], "logplr (pycbc.inference.models.base_data.basedatamodel property)": [[64, "pycbc.inference.models.base_data.BaseDataModel.logplr", false]], "logposterior (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.logposterior", false]], "logprior (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.logprior", false]], "logregularize() (pycbc.bin_utils.binnedarray method)": [[52, "pycbc.bin_utils.BinnedArray.logregularize", false]], "logregularize() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.logregularize", false]], "logsignalrate() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.logsignalrate", false]], "logsignalrate_shared() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.logsignalrate_shared", false]], "logsignalrateinternals_compute2detrate() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.logsignalrateinternals_compute2detrate", false]], "logsignalrateinternals_computepsignalbins() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.logsignalrateinternals_computepsignalbins", false]], "logv_lookup() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.logv_lookup", false]], "logz (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.logz", false]], "logz (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.logz", false]], "logz (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.logz", false]], "logz (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.logz", false]], "logz_err (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.logz_err", false]], "logz_err (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.logz_err", false]], "logz_err (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.logz_err", false]], "low_frequency_cutoff (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.low_frequency_cutoff", false]], "lower() (pycbc.bin_utils.bins method)": [[52, "pycbc.bin_utils.Bins.lower", false]], "lower() (pycbc.bin_utils.irregularbins method)": [[52, "pycbc.bin_utils.IrregularBins.lower", false]], "lower() (pycbc.bin_utils.linearbins method)": [[52, "pycbc.bin_utils.LinearBins.lower", false]], "lower() (pycbc.bin_utils.linearplusoverflowbins method)": [[52, "pycbc.bin_utils.LinearPlusOverflowBins.lower", false]], "lower() (pycbc.bin_utils.logarithmicbins method)": [[52, "pycbc.bin_utils.LogarithmicBins.lower", false]], "lower() (pycbc.bin_utils.logarithmicplusoverflowbins method)": [[52, "pycbc.bin_utils.LogarithmicPlusOverflowBins.lower", false]], "lower() (pycbc.bin_utils.ndbins method)": [[52, "pycbc.bin_utils.NDBins.lower", false]], "lowpass() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.lowpass", false]], "lowpass_fir() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.lowpass_fir", false]], "lowpass_fir() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.lowpass_fir", false]], "lvk_catalogs() (in module pycbc.catalog.catalog)": [[53, "pycbc.catalog.catalog.lvk_catalogs", false]], "mail_volunteers_error() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.mail_volunteers_error", false]], "make_all_bins() (pycbc.population.fgmc_functions.signaleventrate method)": [[71, "pycbc.population.fgmc_functions.SignalEventRate.make_all_bins", false]], "make_analysis_dir() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.make_analysis_dir", false]], "make_average_psd() (in module pycbc.workflow.psd)": [[79, "pycbc.workflow.psd.make_average_psd", false]], "make_bank_compression_plots() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_bank_compression_plots", false]], "make_binned_hist() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_binned_hist", false]], "make_bins() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.make_bins", false]], "make_catalog() (in module pycbc.workflow.pegasus_sites)": [[79, "pycbc.workflow.pegasus_sites.make_catalog", false]], "make_coinc_info() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_coinc_info", false]], "make_coinc_snrchi_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_coinc_snrchi_plot", false]], "make_combine_split_banks() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.make_combine_split_banks", false]], "make_compress_split_banks() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.make_compress_split_banks", false]], "make_diagnostic_plots() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_diagnostic_plots", false]], "make_dq_flag_trigger_rate_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_dq_flag_trigger_rate_plot", false]], "make_dq_segment_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_dq_segment_table", false]], "make_external_call() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.make_external_call", false]], "make_farstat_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_farstat_plot", false]], "make_foreground_censored_veto() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.make_foreground_censored_veto", false]], "make_foreground_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_foreground_table", false]], "make_foundmissed_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_foundmissed_plot", false]], "make_frequency_series() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.make_frequency_series", false]], "make_gating_node() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.make_gating_node", false]], "make_gating_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_gating_plot", false]], "make_grb_segments_plot() (in module pycbc.results.pygrb_plotting_utils)": [[73, "pycbc.results.pygrb_plotting_utils.make_grb_segments_plot", false]], "make_ifar_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_ifar_plot", false]], "make_inference_acceptance_rate_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_acceptance_rate_plot", false]], "make_inference_dynesty_run_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_dynesty_run_plot", false]], "make_inference_dynesty_trace_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_dynesty_trace_plot", false]], "make_inference_inj_recovery_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_inj_recovery_plot", false]], "make_inference_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_plot", false]], "make_inference_plot_mcmc_history() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_plot_mcmc_history", false]], "make_inference_posterior_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_posterior_plot", false]], "make_inference_pp_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_pp_plot", false]], "make_inference_pp_table() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_pp_table", false]], "make_inference_prior_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_prior_plot", false]], "make_inference_samples_plot() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_samples_plot", false]], "make_inference_skymap() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_skymap", false]], "make_inference_summary_table() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_inference_summary_table", false]], "make_inj_info() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_inj_info", false]], "make_inj_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_inj_table", false]], "make_output_dir() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.make_output_dir", false]], "make_plot_waveform_plot() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_plot_waveform_plot", false]], "make_posterior_workflow() (in module pycbc.workflow.inference_followups)": [[79, "pycbc.workflow.inference_followups.make_posterior_workflow", false]], "make_psd_file() (in module pycbc.workflow.psd)": [[79, "pycbc.workflow.psd.make_psd_file", false]], "make_pygrb_info_table() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.make_pygrb_info_table", false]], "make_pygrb_injs_tables() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.make_pygrb_injs_tables", false]], "make_pygrb_plot() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.make_pygrb_plot", false]], "make_qscan_plot() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_qscan_plot", false]], "make_range_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_range_plot", false]], "make_results_web_page() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_results_web_page", false]], "make_seg_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_seg_plot", false]], "make_seg_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_seg_table", false]], "make_segments_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_segments_plot", false]], "make_sensitivity_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_sensitivity_plot", false]], "make_single_hist() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_single_hist", false]], "make_single_template_files() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_single_template_files", false]], "make_single_template_plots() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_single_template_plots", false]], "make_singles_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_singles_plot", false]], "make_singles_timefreq() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_singles_timefreq", false]], "make_skipped_html() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_skipped_html", false]], "make_skygrid_node() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.make_skygrid_node", false]], "make_sngl_ifo() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_sngl_ifo", false]], "make_snrchi_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_snrchi_plot", false]], "make_snrifar_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_snrifar_plot", false]], "make_snrratehist_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_snrratehist_plot", false]], "make_spectrum_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_spectrum_plot", false]], "make_strain_from_inj_object() (pycbc.inject.inject.cbchdfinjectionset method)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.make_strain_from_inj_object", false]], "make_strain_from_inj_object() (pycbc.inject.inject.incoherentfromfilehdfinjectionset method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.make_strain_from_inj_object", false]], "make_strain_from_inj_object() (pycbc.inject.inject.ringdownhdfinjectionset method)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.make_strain_from_inj_object", false]], "make_template_bin_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_template_bin_table", false]], "make_template_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_template_plot", false]], "make_throughput_plot() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_throughput_plot", false]], "make_trigger_timeseries() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_trigger_timeseries", false]], "make_upload_files() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.make_upload_files", false]], "make_versioning_page() (in module pycbc.workflow.versioning)": [[79, "pycbc.workflow.versioning.make_versioning_page", false]], "make_veto_table() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.make_veto_table", false]], "makedir() (in module pycbc)": [[52, "pycbc.makedir", false]], "map() (pycbc.pool.broadcastpool method)": [[52, "pycbc.pool.BroadcastPool.map", false]], "map() (pycbc.pool.singlepool method)": [[52, "pycbc.pool.SinglePool.map", false]], "map_file (pycbc.transforms.lambdafrommultipletovfiles property)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.map_file", false]], "map_params() (in module pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.map_params", false]], "map_to_adjust() (pycbc.strain.calibration.recalibrate method)": [[74, "pycbc.strain.calibration.Recalibrate.map_to_adjust", false]], "map_to_adjust() (pycbc.strain.recalibrate.physicalmodel method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.map_to_adjust", false]], "map_to_adjust() (pycbc.strain.recalibrate.recalibrate method)": [[74, "pycbc.strain.recalibrate.Recalibrate.map_to_adjust", false]], "marginalize_likelihood() (in module pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.marginalize_likelihood", false]], "marginalize_loglr() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.marginalize_loglr", false]], "marginalizedhmpolphase (class in pycbc.inference.models.marginalized_gaussian_noise)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedHMPolPhase", false]], "marginalizedphasegaussiannoise (class in pycbc.inference.models.marginalized_gaussian_noise)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise", false]], "marginalizedpolarization (class in pycbc.inference.models.marginalized_gaussian_noise)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPolarization", false]], "marginalizedtime (class in pycbc.inference.models.marginalized_gaussian_noise)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedTime", false]], "mask (pycbc.io.hdf.filedata property)": [[67, "pycbc.io.hdf.FileData.mask", false]], "mask_size (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.mask_size", false]], "mask_to_n_loudest_clustered_events() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.mask_to_n_loudest_clustered_events", false]], "mass1 (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.mass1", false]], "mass1_from_mass2_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_mass2_eta", false]], "mass1_from_mchirp_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_mchirp_eta", false]], "mass1_from_mchirp_q() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_mchirp_q", false]], "mass1_from_mtotal_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_mtotal_eta", false]], "mass1_from_mtotal_q() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_mtotal_q", false]], "mass1_from_tau0_tau3() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass1_from_tau0_tau3", false]], "mass1_mass2_spin1z_spin2z_to_beta_sigma_gamma() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mass1_mass2_spin1z_spin2z_to_beta_sigma_gamma", false]], "mass1_mass2_to_mchirp_eta() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mass1_mass2_to_mchirp_eta", false]], "mass1_mass2_to_mtotal_eta() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mass1_mass2_to_mtotal_eta", false]], "mass1_mass2_to_tau0_tau3() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mass1_mass2_to_tau0_tau3", false]], "mass1mass2tomchirpeta (class in pycbc.transforms)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta", false]], "mass1mass2tomchirpq (class in pycbc.transforms)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ", false]], "mass2 (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.mass2", false]], "mass2_from_mass1_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_mass1_eta", false]], "mass2_from_mchirp_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_mchirp_eta", false]], "mass2_from_mchirp_q() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_mchirp_q", false]], "mass2_from_mtotal_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_mtotal_eta", false]], "mass2_from_mtotal_q() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_mtotal_q", false]], "mass2_from_tau0_tau3() (in module pycbc.conversions)": [[52, "pycbc.conversions.mass2_from_tau0_tau3", false]], "mass_data (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.mass_data", false]], "mass_param (pycbc.transforms.lambdafrommultipletovfiles property)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.mass_param", false]], "mass_param (pycbc.transforms.lambdafromtovfile property)": [[52, "pycbc.transforms.LambdaFromTOVFile.mass_param", false]], "massrangeparameters (class in pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.massRangeParameters", false]], "match() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.match", false]], "match() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.match", false]], "match() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.match", false]], "matched_filter() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.matched_filter", false]], "matched_filter_core() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.matched_filter_core", false]], "matchedfiltercontrol (class in pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.MatchedFilterControl", false]], "matchedfilterskymaxcontrol (class in pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.MatchedFilterSkyMaxControl", false]], "matchedfilterskymaxcontrolnophase (class in pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.MatchedFilterSkyMaxControlNoPhase", false]], "matching_line() (in module pycbc.strain.lines)": [[74, "pycbc.strain.lines.matching_line", false]], "mathjax_html_header() (in module pycbc.results.str_utils)": [[73, "pycbc.results.str_utils.mathjax_html_header", false]], "max (pycbc.boundaries.bounds property)": [[52, "pycbc.boundaries.Bounds.max", false]], "max() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.max", false]], "max() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.max", false]], "max() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.max", false]], "max_curvature_from_reference() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.max_curvature_from_reference", false]], "max_loc() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.max_loc", false]], "max_loc() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.max_loc", false]], "max_loc() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.max_loc", false]], "max_median_stat() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.max_median_stat", false]], "max_posterior() (in module pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.max_posterior", false]], "max_posterior() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.max_posterior", false]], "max_posterior() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.max_posterior", false]], "max_posterior() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.max_posterior", false]], "max_samples_per_chain (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.max_samples_per_chain", false]], "mc_cal_wf_errs() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.mc_cal_wf_errs", false]], "mchirp (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.mchirp", false]], "mchirp (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.mchirp", false]], "mchirp_compression() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.mchirp_compression", false]], "mchirp_eta_to_mass1_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mchirp_eta_to_mass1_mass2", false]], "mchirp_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.mchirp_from_mass1_mass2", false]], "mchirp_from_tau0() (in module pycbc.conversions)": [[52, "pycbc.conversions.mchirp_from_tau0", false]], "mchirp_mass1_to_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mchirp_mass1_to_mass2", false]], "mchirp_q_to_mass1_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mchirp_q_to_mass1_mass2", false]], "mchirp_sampler_flat() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.mchirp_sampler_flat", false]], "mchirp_sampler_imf() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.mchirp_sampler_imf", false]], "mchirp_sampler_lnm() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.mchirp_sampler_lnm", false]], "mchirpetatomass1mass2 (class in pycbc.transforms)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2", false]], "mchirpfromuniformmass1mass2 (class in pycbc.distributions.mass)": [[56, "pycbc.distributions.mass.MchirpfromUniformMass1Mass2", false]], "mchirpqtomass1mass2 (class in pycbc.transforms)": [[52, "pycbc.transforms.MchirpQToMass1Mass2", false]], "mcmcburnintests (class in pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests", false]], "mcmcmetadataio (class in pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.MCMCMetadataIO", false]], "mean (pycbc.distributions.gaussian.gaussian property)": [[56, "pycbc.distributions.gaussian.Gaussian.mean", false]], "mean_efficiency_volume() (in module pycbc.rate)": [[52, "pycbc.rate.mean_efficiency_volume", false]], "mean_if_greater_than_zero() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.mean_if_greater_than_zero", false]], "mean_square() (in module pycbc.psd.variation)": [[72, "pycbc.psd.variation.mean_square", false]], "meco2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.meco2", false]], "meco_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.meco_velocity", false]], "median1d() (pycbc.catalog.catalog method)": [[53, "pycbc.catalog.Catalog.median1d", false]], "median1d() (pycbc.catalog.merger method)": [[53, "pycbc.catalog.Merger.median1d", false]], "median_bias() (in module pycbc.psd.estimate)": [[72, "pycbc.psd.estimate.median_bias", false]], "megaparsecs_to_meters() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.megaparsecs_to_meters", false]], "merge_psds() (in module pycbc.workflow.psd)": [[79, "pycbc.workflow.psd.merge_psds", false]], "merge_single_detector_hdf_files() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.merge_single_detector_hdf_files", false]], "merged_triggers (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.MERGED_TRIGGERS", false]], "mergeexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.MergeExecutable", false]], "merger (class in pycbc.catalog)": [[53, "pycbc.catalog.Merger", false]], "merger_rate_density() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.merger_rate_density", false]], "metaparser (class in pycbc.results.metadata)": [[73, "pycbc.results.metadata.MetaParser", false]], "metric (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.metric", false]], "metricparameters (class in pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.metricParameters", false]], "min (pycbc.boundaries.bounds property)": [[52, "pycbc.boundaries.Bounds.min", false]], "min() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.min", false]], "min() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.min", false]], "min() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.min", false]], "min_iterations() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.min_iterations", false]], "mismatch (pycbc.waveform.compress.compressedwaveform attribute)": [[78, "pycbc.waveform.compress.CompressedWaveform.mismatch", false]], "mklscheme (class in pycbc.scheme)": [[52, "pycbc.scheme.MKLScheme", false]], "model_delim (pycbc.inference.models.hierarchical.hierarchicalparam attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.model_delim", false]], "model_stats (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.dummy.dummysampler property)": [[65, "pycbc.inference.sampler.dummy.DummySampler.model_stats", false]], "model_stats (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.model_stats", false]], "model_stats (pycbc.inference.sampler.emcee.emceeensemblesampler property)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.emcee_pt.emceeptsampler property)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.nessai.nessaisampler property)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.model_stats", false]], "model_stats (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.model_stats", false]], "models (pycbc.inference.models.hierarchical.hierarchicalparam attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.models", false]], "modelstats (class in pycbc.inference.models.base)": [[64, "pycbc.inference.models.base.ModelStats", false]], "module": [[52, "module-pycbc", false], [52, "module-pycbc.bin_utils", false], [52, "module-pycbc.boundaries", false], [52, "module-pycbc.conversions", false], [52, "module-pycbc.cosmology", false], [52, "module-pycbc.dq", false], [52, "module-pycbc.libutils", false], [52, "module-pycbc.mchirp_area", false], [52, "module-pycbc.opt", false], [52, "module-pycbc.pnutils", false], [52, "module-pycbc.pool", false], [52, "module-pycbc.rate", false], [52, "module-pycbc.scheme", false], [52, "module-pycbc.sensitivity", false], [52, "module-pycbc.transforms", false], [52, "module-pycbc.version", false], [53, "module-pycbc.catalog", false], [53, "module-pycbc.catalog.catalog", false], [54, "module-pycbc.coordinates", false], [54, "module-pycbc.coordinates.base", false], [54, "module-pycbc.coordinates.space", false], [55, "module-pycbc.detector", false], [55, "module-pycbc.detector.ground", false], [55, "module-pycbc.detector.space", false], [56, "module-pycbc.distributions", false], [56, "module-pycbc.distributions.angular", false], [56, "module-pycbc.distributions.arbitrary", false], [56, "module-pycbc.distributions.bounded", false], [56, "module-pycbc.distributions.constraints", false], [56, "module-pycbc.distributions.external", false], [56, "module-pycbc.distributions.fixedsamples", false], [56, "module-pycbc.distributions.gaussian", false], [56, "module-pycbc.distributions.joint", false], [56, "module-pycbc.distributions.mass", false], [56, "module-pycbc.distributions.power_law", false], [56, "module-pycbc.distributions.qnm", false], [56, "module-pycbc.distributions.sky_location", false], [56, "module-pycbc.distributions.spins", false], [56, "module-pycbc.distributions.uniform", false], [56, "module-pycbc.distributions.uniform_log", false], [56, "module-pycbc.distributions.utils", false], [57, "module-pycbc.events", false], [57, "module-pycbc.events.coherent", false], [57, "module-pycbc.events.coinc", false], [57, "module-pycbc.events.coinc_rate", false], [57, "module-pycbc.events.cuts", false], [57, "module-pycbc.events.eventmgr", false], [57, "module-pycbc.events.eventmgr_cython", false], [57, "module-pycbc.events.ranking", false], [57, "module-pycbc.events.significance", false], [57, "module-pycbc.events.simd_threshold_cython", false], [57, "module-pycbc.events.single", false], [57, "module-pycbc.events.stat", false], [57, "module-pycbc.events.threshold_cpu", false], [57, "module-pycbc.events.threshold_cupy", false], [57, "module-pycbc.events.trigger_fits", false], [57, "module-pycbc.events.triggers", false], [57, "module-pycbc.events.veto", false], [58, "module-pycbc.fft", false], [58, "module-pycbc.fft.backend_cpu", false], [58, "module-pycbc.fft.backend_cupy", false], [58, "module-pycbc.fft.backend_mkl", false], [58, "module-pycbc.fft.backend_support", false], [58, "module-pycbc.fft.class_api", false], [58, "module-pycbc.fft.core", false], [58, "module-pycbc.fft.cupyfft", false], [58, "module-pycbc.fft.fft_callback", false], [58, "module-pycbc.fft.fftw", false], [58, "module-pycbc.fft.fftw_pruned", false], [58, "module-pycbc.fft.fftw_pruned_cython", false], [58, "module-pycbc.fft.func_api", false], [58, "module-pycbc.fft.mkl", false], [58, "module-pycbc.fft.npfft", false], [58, "module-pycbc.fft.parser_support", false], [59, "module-pycbc.filter", false], [59, "module-pycbc.filter.autocorrelation", false], [59, "module-pycbc.filter.matchedfilter", false], [59, "module-pycbc.filter.matchedfilter_cpu", false], [59, "module-pycbc.filter.matchedfilter_cupy", false], [59, "module-pycbc.filter.matchedfilter_numpy", false], [59, "module-pycbc.filter.qtransform", false], [59, "module-pycbc.filter.resample", false], [59, "module-pycbc.filter.simd_correlate", false], [59, "module-pycbc.filter.simd_correlate_cython", false], [59, "module-pycbc.filter.zpk", false], [60, "module-pycbc.frame", false], [60, "module-pycbc.frame.frame", false], [60, "module-pycbc.frame.gwosc", false], [60, "module-pycbc.frame.store", false], [61, "module-pycbc.inference", false], [61, "module-pycbc.inference.burn_in", false], [61, "module-pycbc.inference.entropy", false], [61, "module-pycbc.inference.evidence", false], [61, "module-pycbc.inference.gelman_rubin", false], [61, "module-pycbc.inference.geweke", false], [61, "module-pycbc.inference.option_utils", false], [62, "module-pycbc.inference.io", false], [62, "module-pycbc.inference.io.base_hdf", false], [62, "module-pycbc.inference.io.base_mcmc", false], [62, "module-pycbc.inference.io.base_multitemper", false], [62, "module-pycbc.inference.io.base_nested_sampler", false], [62, "module-pycbc.inference.io.base_sampler", false], [62, "module-pycbc.inference.io.dynesty", false], [62, "module-pycbc.inference.io.emcee", false], [62, "module-pycbc.inference.io.emcee_pt", false], [62, "module-pycbc.inference.io.epsie", false], [62, "module-pycbc.inference.io.multinest", false], [62, "module-pycbc.inference.io.nessai", false], [62, "module-pycbc.inference.io.posterior", false], [62, "module-pycbc.inference.io.ptemcee", false], [62, "module-pycbc.inference.io.snowline", false], [62, "module-pycbc.inference.io.txt", false], [62, "module-pycbc.inference.io.ultranest", false], [63, "module-pycbc.inference.jump", false], [63, "module-pycbc.inference.jump.angular", false], [63, "module-pycbc.inference.jump.bounded_normal", false], [63, "module-pycbc.inference.jump.discrete", false], [63, "module-pycbc.inference.jump.normal", false], [64, "module-pycbc.inference.models", false], [64, "module-pycbc.inference.models.analytic", false], [64, "module-pycbc.inference.models.base", false], [64, "module-pycbc.inference.models.base_data", false], [64, "module-pycbc.inference.models.brute_marg", false], [64, "module-pycbc.inference.models.data_utils", false], [64, "module-pycbc.inference.models.gated_gaussian_noise", false], [64, "module-pycbc.inference.models.gaussian_noise", false], [64, "module-pycbc.inference.models.hierarchical", false], [64, "module-pycbc.inference.models.marginalized_gaussian_noise", false], [64, "module-pycbc.inference.models.relbin", false], [64, "module-pycbc.inference.models.relbin_cpu", false], [64, "module-pycbc.inference.models.single_template", false], [64, "module-pycbc.inference.models.tools", false], [65, "module-pycbc.inference.sampler", false], [65, "module-pycbc.inference.sampler.base", false], [65, "module-pycbc.inference.sampler.base_cube", false], [65, "module-pycbc.inference.sampler.base_mcmc", false], [65, "module-pycbc.inference.sampler.base_multitemper", false], [65, "module-pycbc.inference.sampler.dummy", false], [65, "module-pycbc.inference.sampler.dynesty", false], [65, "module-pycbc.inference.sampler.emcee", false], [65, "module-pycbc.inference.sampler.emcee_pt", false], [65, "module-pycbc.inference.sampler.epsie", false], [65, "module-pycbc.inference.sampler.games", false], [65, "module-pycbc.inference.sampler.multinest", false], [65, "module-pycbc.inference.sampler.nessai", false], [65, "module-pycbc.inference.sampler.ptemcee", false], [65, "module-pycbc.inference.sampler.refine", false], [65, "module-pycbc.inference.sampler.snowline", false], [65, "module-pycbc.inference.sampler.ultranest", false], [66, "module-pycbc.inject", false], [66, "module-pycbc.inject.inject", false], [66, "module-pycbc.inject.injfilterrejector", false], [67, "module-pycbc.io", false], [67, "module-pycbc.io.gracedb", false], [67, "module-pycbc.io.hdf", false], [67, "module-pycbc.io.ligolw", false], [67, "module-pycbc.io.live", false], [67, "module-pycbc.io.record", false], [68, "module-pycbc.live", false], [68, "module-pycbc.live.significance_fits", false], [68, "module-pycbc.live.snr_optimizer", false], [68, "module-pycbc.live.supervision", false], [69, "module-pycbc.neutron_stars", false], [69, "module-pycbc.neutron_stars.eos_utils", false], [69, "module-pycbc.neutron_stars.pg_isso_solver", false], [70, "module-pycbc.noise", false], [70, "module-pycbc.noise.gaussian", false], [70, "module-pycbc.noise.reproduceable", false], [71, "module-pycbc.population", false], [71, "module-pycbc.population.fgmc_functions", false], [71, "module-pycbc.population.fgmc_laguerre", false], [71, "module-pycbc.population.fgmc_plots", false], [71, "module-pycbc.population.live_pastro", false], [71, "module-pycbc.population.live_pastro_utils", false], [71, "module-pycbc.population.population_models", false], [71, "module-pycbc.population.rates_functions", false], [71, "module-pycbc.population.scale_injections", false], [72, "module-pycbc.psd", false], [72, "module-pycbc.psd.analytical", false], [72, "module-pycbc.psd.analytical_space", false], [72, "module-pycbc.psd.estimate", false], [72, "module-pycbc.psd.read", false], [72, "module-pycbc.psd.variation", false], [73, "module-pycbc.results", false], [73, "module-pycbc.results.color", false], [73, "module-pycbc.results.dq", false], [73, "module-pycbc.results.followup", false], [73, "module-pycbc.results.layout", false], [73, "module-pycbc.results.metadata", false], [73, "module-pycbc.results.mpld3_utils", false], [73, "module-pycbc.results.plot", false], [73, "module-pycbc.results.psd", false], [73, "module-pycbc.results.pygrb_plotting_utils", false], [73, "module-pycbc.results.pygrb_postprocessing_utils", false], [73, "module-pycbc.results.render", false], [73, "module-pycbc.results.scatter_histograms", false], [73, "module-pycbc.results.snr", false], [73, "module-pycbc.results.str_utils", false], [73, "module-pycbc.results.table_utils", false], [73, "module-pycbc.results.versioning", false], [74, "module-pycbc.strain", false], [74, "module-pycbc.strain.calibration", false], [74, "module-pycbc.strain.gate", false], [74, "module-pycbc.strain.lines", false], [74, "module-pycbc.strain.recalibrate", false], [74, "module-pycbc.strain.strain", false], [75, "module-pycbc.tmpltbank", false], [75, "module-pycbc.tmpltbank.bank_conversions", false], [75, "module-pycbc.tmpltbank.bank_output_utils", false], [75, "module-pycbc.tmpltbank.brute_force_methods", false], [75, "module-pycbc.tmpltbank.calc_moments", false], [75, "module-pycbc.tmpltbank.coord_utils", false], [75, "module-pycbc.tmpltbank.lambda_mapping", false], [75, "module-pycbc.tmpltbank.lattice_utils", false], [75, "module-pycbc.tmpltbank.option_utils", false], [75, "module-pycbc.tmpltbank.partitioned_bank", false], [75, "module-pycbc.tmpltbank.sky_grid", false], [76, "module-pycbc.types", false], [76, "module-pycbc.types.aligned", false], [76, "module-pycbc.types.array", false], [76, "module-pycbc.types.array_cpu", false], [76, "module-pycbc.types.array_cupy", false], [76, "module-pycbc.types.config", false], [76, "module-pycbc.types.frequencyseries", false], [76, "module-pycbc.types.optparse", false], [76, "module-pycbc.types.timeseries", false], [77, "module-pycbc.vetoes", false], [77, "module-pycbc.vetoes.autochisq", false], [77, "module-pycbc.vetoes.bank_chisq", false], [77, "module-pycbc.vetoes.chisq", false], [77, "module-pycbc.vetoes.chisq_cpu", false], [77, "module-pycbc.vetoes.chisq_cupy", false], [77, "module-pycbc.vetoes.sgchisq", false], [78, "module-pycbc.waveform", false], [78, "module-pycbc.waveform.bank", false], [78, "module-pycbc.waveform.compress", false], [78, "module-pycbc.waveform.decompress_cpu", false], [78, "module-pycbc.waveform.decompress_cpu_cython", false], [78, "module-pycbc.waveform.decompress_cupy", false], [78, "module-pycbc.waveform.generator", false], [78, "module-pycbc.waveform.multiband", false], [78, "module-pycbc.waveform.nltides", false], [78, "module-pycbc.waveform.parameters", false], [78, "module-pycbc.waveform.plugin", false], [78, "module-pycbc.waveform.premerger", false], [78, "module-pycbc.waveform.ringdown", false], [78, "module-pycbc.waveform.sinegauss", false], [78, "module-pycbc.waveform.spa_tmplt", false], [78, "module-pycbc.waveform.spa_tmplt_cpu", false], [78, "module-pycbc.waveform.spa_tmplt_cupy", false], [78, "module-pycbc.waveform.supernovae", false], [78, "module-pycbc.waveform.utils", false], [78, "module-pycbc.waveform.utils_cpu", false], [78, "module-pycbc.waveform.utils_cupy", false], [78, "module-pycbc.waveform.waveform", false], [78, "module-pycbc.waveform.waveform_modes", false], [79, "module-pycbc.workflow", false], [79, "module-pycbc.workflow.coincidence", false], [79, "module-pycbc.workflow.configparser_test", false], [79, "module-pycbc.workflow.configuration", false], [79, "module-pycbc.workflow.core", false], [79, "module-pycbc.workflow.datafind", false], [79, "module-pycbc.workflow.dq", false], [79, "module-pycbc.workflow.grb_utils", false], [79, "module-pycbc.workflow.inference_followups", false], [79, "module-pycbc.workflow.injection", false], [79, "module-pycbc.workflow.jobsetup", false], [79, "module-pycbc.workflow.matched_filter", false], [79, "module-pycbc.workflow.minifollowups", false], [79, "module-pycbc.workflow.pegasus_sites", false], [79, "module-pycbc.workflow.pegasus_workflow", false], [79, "module-pycbc.workflow.plotting", false], [79, "module-pycbc.workflow.psd", false], [79, "module-pycbc.workflow.psdfiles", false], [79, "module-pycbc.workflow.segment", false], [79, "module-pycbc.workflow.splittable", false], [79, "module-pycbc.workflow.tmpltbank", false], [79, "module-pycbc.workflow.versioning", false]], "moments (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.moments", false]], "moreifotimes() (pycbc.population.fgmc_functions.eventrate method)": [[71, "pycbc.population.fgmc_functions.EventRate.moreifotimes", false]], "mplslide (class in pycbc.results.mpld3_utils)": [[73, "pycbc.results.mpld3_utils.MPLSlide", false]], "mtotal (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.mtotal", false]], "mtotal (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.mtotal", false]], "mtotal_eta_to_mass1_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.mtotal_eta_to_mass1_mass2", false]], "mtotal_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.mtotal_from_mass1_mass2", false]], "mtotal_from_mchirp_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.mtotal_from_mchirp_eta", false]], "mtotal_from_tau0_tau3() (in module pycbc.conversions)": [[52, "pycbc.conversions.mtotal_from_tau0_tau3", false]], "multi_ifo_coherent_job_setup() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.multi_ifo_coherent_job_setup", false]], "multi_loglikelihood() (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.multi_loglikelihood", false]], "multi_loglikelihood() (pycbc.inference.models.gated_gaussian_noise.gatedgaussiannoise method)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise.multi_loglikelihood", false]], "multi_loglikelihood() (pycbc.inference.models.gaussian_noise.gaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.multi_loglikelihood", false]], "multi_loglikelihood() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.multi_loglikelihood", false]], "multi_loglikelihood() (pycbc.inference.models.single_template.singletemplate method)": [[64, "pycbc.inference.models.single_template.SingleTemplate.multi_loglikelihood", false]], "multi_signal_support (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol property)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.multi_signal_support", false]], "multi_signal_support (pycbc.inference.models.gated_gaussian_noise.gatedgaussiannoise property)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise.multi_signal_support", false]], "multi_signal_support (pycbc.inference.models.gaussian_noise.gaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.multi_signal_support", false]], "multi_signal_support (pycbc.inference.models.relbin.relative property)": [[64, "pycbc.inference.models.relbin.Relative.multi_signal_support", false]], "multi_signal_support (pycbc.inference.models.single_template.singletemplate property)": [[64, "pycbc.inference.models.single_template.SingleTemplate.multi_signal_support", false]], "multiband_fd_waveform() (in module pycbc.waveform.multiband)": [[78, "pycbc.waveform.multiband.multiband_fd_waveform", false]], "multidetdictoptionaction (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.MultiDetDictOptionAction", false]], "multidetmulticolonoptionaction (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.MultiDetMultiColonOptionAction", false]], "multidetoptionaction (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.MultiDetOptionAction", false]], "multidetoptionactionspecial (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.MultiDetOptionActionSpecial", false]], "multidetoptionappendaction (class in pycbc.types.optparse)": [[76, "pycbc.types.optparse.MultiDetOptionAppendAction", false]], "multiifo_noise_coincident_area() (in module pycbc.events.coinc_rate)": [[57, "pycbc.events.coinc_rate.multiifo_noise_coincident_area", false]], "multiifo_noise_lograte() (in module pycbc.events.coinc_rate)": [[57, "pycbc.events.coinc_rate.multiifo_noise_lograte", false]], "multiifo_signal_coincident_area() (in module pycbc.events.coinc_rate)": [[57, "pycbc.events.coinc_rate.multiifo_signal_coincident_area", false]], "multiifostatmapdata (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.MultiifoStatmapData", false]], "multimode_base() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.multimode_base", false]], "multinestfile (class in pycbc.inference.io.multinest)": [[62, "pycbc.inference.io.multinest.MultinestFile", false]], "multinestsampler (class in pycbc.inference.sampler.multinest)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler", false]], "multiply_and_add() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.multiply_and_add", false]], "multiply_and_add() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.multiply_and_add", false]], "multiringbuffer (class in pycbc.events.coinc)": [[57, "pycbc.events.coinc.MultiRingBuffer", false]], "multisignalmodel (class in pycbc.inference.models.hierarchical)": [[64, "pycbc.inference.models.hierarchical.MultiSignalModel", false]], "multitemperedmcmcburnintests (class in pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.MultiTemperedMCMCBurnInTests", false]], "multitemperedsupport (class in pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport", false]], "n_louder_from_fit() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.n_louder_from_fit", false]], "nacl() (in module pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.nacl", false]], "nacl() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.nacl", false]], "nacl() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.nacl", false]], "nacl() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.nacl", false]], "name (pycbc.boundaries.closedbound attribute)": [[52, "pycbc.boundaries.ClosedBound.name", false]], "name (pycbc.boundaries.openbound attribute)": [[52, "pycbc.boundaries.OpenBound.name", false]], "name (pycbc.boundaries.reflectedbound attribute)": [[52, "pycbc.boundaries.ReflectedBound.name", false]], "name (pycbc.distributions.angular.cosangle attribute)": [[56, "pycbc.distributions.angular.CosAngle.name", false]], "name (pycbc.distributions.angular.sinangle attribute)": [[56, "pycbc.distributions.angular.SinAngle.name", false]], "name (pycbc.distributions.angular.uniformangle attribute)": [[56, "pycbc.distributions.angular.UniformAngle.name", false]], "name (pycbc.distributions.angular.uniformsolidangle attribute)": [[56, "pycbc.distributions.angular.UniformSolidAngle.name", false]], "name (pycbc.distributions.arbitrary.arbitrary attribute)": [[56, "pycbc.distributions.arbitrary.Arbitrary.name", false]], "name (pycbc.distributions.arbitrary.fromfile attribute)": [[56, "pycbc.distributions.arbitrary.FromFile.name", false]], "name (pycbc.distributions.constraints.constraint attribute)": [[56, "pycbc.distributions.constraints.Constraint.name", false]], "name (pycbc.distributions.constraints.supernovaeconvexhull attribute)": [[56, "pycbc.distributions.constraints.SupernovaeConvexHull.name", false]], "name (pycbc.distributions.external.distributionfunctionfromfile attribute)": [[56, "pycbc.distributions.external.DistributionFunctionFromFile.name", false]], "name (pycbc.distributions.external.external attribute)": [[56, "pycbc.distributions.external.External.name", false]], "name (pycbc.distributions.fixedsamples.fixedsamples attribute)": [[56, "pycbc.distributions.fixedsamples.FixedSamples.name", false]], "name (pycbc.distributions.gaussian.gaussian attribute)": [[56, "pycbc.distributions.gaussian.Gaussian.name", false]], "name (pycbc.distributions.joint.jointdistribution attribute)": [[56, "pycbc.distributions.joint.JointDistribution.name", false]], "name (pycbc.distributions.mass.mchirpfromuniformmass1mass2 attribute)": [[56, "pycbc.distributions.mass.MchirpfromUniformMass1Mass2.name", false]], "name (pycbc.distributions.mass.qfromuniformmass1mass2 attribute)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2.name", false]], "name (pycbc.distributions.power_law.uniformpowerlaw attribute)": [[56, "pycbc.distributions.power_law.UniformPowerLaw.name", false]], "name (pycbc.distributions.power_law.uniformradius attribute)": [[56, "pycbc.distributions.power_law.UniformRadius.name", false]], "name (pycbc.distributions.qnm.uniformf0tau attribute)": [[56, "pycbc.distributions.qnm.UniformF0Tau.name", false]], "name (pycbc.distributions.sky_location.fishersky attribute)": [[56, "pycbc.distributions.sky_location.FisherSky.name", false]], "name (pycbc.distributions.sky_location.healpixsky attribute)": [[56, "pycbc.distributions.sky_location.HealpixSky.name", false]], "name (pycbc.distributions.sky_location.uniformdisksky attribute)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.name", false]], "name (pycbc.distributions.sky_location.uniformsky attribute)": [[56, "pycbc.distributions.sky_location.UniformSky.name", false]], "name (pycbc.distributions.spins.independentchipchieff attribute)": [[56, "pycbc.distributions.spins.IndependentChiPChiEff.name", false]], "name (pycbc.distributions.uniform.uniform attribute)": [[56, "pycbc.distributions.uniform.Uniform.name", false]], "name (pycbc.distributions.uniform_log.uniformlog10 attribute)": [[56, "pycbc.distributions.uniform_log.UniformLog10.name", false]], "name (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.name", false]], "name (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile attribute)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.name", false]], "name (pycbc.inference.io.dynesty.dynestyfile attribute)": [[62, "pycbc.inference.io.dynesty.DynestyFile.name", false]], "name (pycbc.inference.io.emcee.emceefile attribute)": [[62, "pycbc.inference.io.emcee.EmceeFile.name", false]], "name (pycbc.inference.io.emcee_pt.emceeptfile attribute)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.name", false]], "name (pycbc.inference.io.epsie.epsiefile attribute)": [[62, "pycbc.inference.io.epsie.EpsieFile.name", false]], "name (pycbc.inference.io.multinest.multinestfile attribute)": [[62, "pycbc.inference.io.multinest.MultinestFile.name", false]], "name (pycbc.inference.io.nessai.nessaifile attribute)": [[62, "pycbc.inference.io.nessai.NessaiFile.name", false]], "name (pycbc.inference.io.posterior.posteriorfile attribute)": [[62, "pycbc.inference.io.posterior.PosteriorFile.name", false]], "name (pycbc.inference.io.ptemcee.ptemceefile attribute)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.name", false]], "name (pycbc.inference.io.snowline.snowlinefile attribute)": [[62, "pycbc.inference.io.snowline.SnowlineFile.name", false]], "name (pycbc.inference.io.txt.inferencetxtfile attribute)": [[62, "pycbc.inference.io.txt.InferenceTXTFile.name", false]], "name (pycbc.inference.io.ultranest.ultranestfile attribute)": [[62, "pycbc.inference.io.ultranest.UltranestFile.name", false]], "name (pycbc.inference.models.analytic.testeggbox attribute)": [[64, "pycbc.inference.models.analytic.TestEggbox.name", false]], "name (pycbc.inference.models.analytic.testnormal attribute)": [[64, "pycbc.inference.models.analytic.TestNormal.name", false]], "name (pycbc.inference.models.analytic.testposterior attribute)": [[64, "pycbc.inference.models.analytic.TestPosterior.name", false]], "name (pycbc.inference.models.analytic.testprior attribute)": [[64, "pycbc.inference.models.analytic.TestPrior.name", false]], "name (pycbc.inference.models.analytic.testrosenbrock attribute)": [[64, "pycbc.inference.models.analytic.TestRosenbrock.name", false]], "name (pycbc.inference.models.analytic.testvolcano attribute)": [[64, "pycbc.inference.models.analytic.TestVolcano.name", false]], "name (pycbc.inference.models.base.basemodel attribute)": [[64, "pycbc.inference.models.base.BaseModel.name", false]], "name (pycbc.inference.models.brute_marg.brutelisaskymodesmarginalize attribute)": [[64, "pycbc.inference.models.brute_marg.BruteLISASkyModesMarginalize.name", false]], "name (pycbc.inference.models.brute_marg.bruteparallelgaussianmarginalize attribute)": [[64, "pycbc.inference.models.brute_marg.BruteParallelGaussianMarginalize.name", false]], "name (pycbc.inference.models.gated_gaussian_noise.gatedgaussianmargpol attribute)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol.name", false]], "name (pycbc.inference.models.gated_gaussian_noise.gatedgaussiannoise attribute)": [[64, "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise.name", false]], "name (pycbc.inference.models.gaussian_noise.gaussiannoise attribute)": [[64, "pycbc.inference.models.gaussian_noise.GaussianNoise.name", false]], "name (pycbc.inference.models.hierarchical.hierarchicalmodel attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.name", false]], "name (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel attribute)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.name", false]], "name (pycbc.inference.models.hierarchical.multisignalmodel attribute)": [[64, "pycbc.inference.models.hierarchical.MultiSignalModel.name", false]], "name (pycbc.inference.models.marginalized_gaussian_noise.marginalizedhmpolphase attribute)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedHMPolPhase.name", false]], "name (pycbc.inference.models.marginalized_gaussian_noise.marginalizedphasegaussiannoise attribute)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise.name", false]], "name (pycbc.inference.models.marginalized_gaussian_noise.marginalizedpolarization attribute)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPolarization.name", false]], "name (pycbc.inference.models.marginalized_gaussian_noise.marginalizedtime attribute)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedTime.name", false]], "name (pycbc.inference.models.relbin.relative attribute)": [[64, "pycbc.inference.models.relbin.Relative.name", false]], "name (pycbc.inference.models.relbin.relativetime attribute)": [[64, "pycbc.inference.models.relbin.RelativeTime.name", false]], "name (pycbc.inference.models.relbin.relativetimedom attribute)": [[64, "pycbc.inference.models.relbin.RelativeTimeDom.name", false]], "name (pycbc.inference.models.single_template.singletemplate attribute)": [[64, "pycbc.inference.models.single_template.SingleTemplate.name", false]], "name (pycbc.inference.sampler.base.basesampler attribute)": [[65, "pycbc.inference.sampler.base.BaseSampler.name", false]], "name (pycbc.inference.sampler.dummy.dummysampler attribute)": [[65, "pycbc.inference.sampler.dummy.DummySampler.name", false]], "name (pycbc.inference.sampler.dynesty.dynestysampler attribute)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.name", false]], "name (pycbc.inference.sampler.emcee.emceeensemblesampler attribute)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.name", false]], "name (pycbc.inference.sampler.emcee_pt.emceeptsampler attribute)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.name", false]], "name (pycbc.inference.sampler.epsie.epsiesampler attribute)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.name", false]], "name (pycbc.inference.sampler.games.gamesampler attribute)": [[65, "pycbc.inference.sampler.games.GameSampler.name", false]], "name (pycbc.inference.sampler.multinest.multinestsampler attribute)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.name", false]], "name (pycbc.inference.sampler.nessai.nessaisampler attribute)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.name", false]], "name (pycbc.inference.sampler.ptemcee.ptemceesampler attribute)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.name", false]], "name (pycbc.inference.sampler.refine.refinesampler attribute)": [[65, "pycbc.inference.sampler.refine.RefineSampler.name", false]], "name (pycbc.inference.sampler.snowline.snowlinesampler attribute)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.name", false]], "name (pycbc.inference.sampler.ultranest.ultranestsampler attribute)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.name", false]], "name (pycbc.io.record.fieldarray attribute)": [[67, "pycbc.io.record.FieldArray.name", false]], "name (pycbc.strain.calibration.cubicspline attribute)": [[74, "pycbc.strain.calibration.CubicSpline.name", false]], "name (pycbc.strain.calibration.recalibrate attribute)": [[74, "pycbc.strain.calibration.Recalibrate.name", false]], "name (pycbc.strain.recalibrate.cubicspline attribute)": [[74, "pycbc.strain.recalibrate.CubicSpline.name", false]], "name (pycbc.strain.recalibrate.physicalmodel attribute)": [[74, "pycbc.strain.recalibrate.PhysicalModel.name", false]], "name (pycbc.strain.recalibrate.recalibrate attribute)": [[74, "pycbc.strain.recalibrate.Recalibrate.name", false]], "name (pycbc.transforms.alignedmassspintocartesianspin attribute)": [[52, "pycbc.transforms.AlignedMassSpinToCartesianSpin.name", false]], "name (pycbc.transforms.aligntotalspin attribute)": [[52, "pycbc.transforms.AlignTotalSpin.name", false]], "name (pycbc.transforms.basetransform attribute)": [[52, "pycbc.transforms.BaseTransform.name", false]], "name (pycbc.transforms.cartesianspin1tosphericalspin1 attribute)": [[52, "pycbc.transforms.CartesianSpin1ToSphericalSpin1.name", false]], "name (pycbc.transforms.cartesianspin2tosphericalspin2 attribute)": [[52, "pycbc.transforms.CartesianSpin2ToSphericalSpin2.name", false]], "name (pycbc.transforms.cartesianspintoalignedmassspin attribute)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.name", false]], "name (pycbc.transforms.cartesianspintochip attribute)": [[52, "pycbc.transforms.CartesianSpinToChiP.name", false]], "name (pycbc.transforms.cartesianspintoprecessionmassspin attribute)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.name", false]], "name (pycbc.transforms.cartesiantospherical attribute)": [[52, "pycbc.transforms.CartesianToSpherical.name", false]], "name (pycbc.transforms.chiptocartesianspin attribute)": [[52, "pycbc.transforms.ChiPToCartesianSpin.name", false]], "name (pycbc.transforms.chirpdistancetodistance attribute)": [[52, "pycbc.transforms.ChirpDistanceToDistance.name", false]], "name (pycbc.transforms.customtransform attribute)": [[52, "pycbc.transforms.CustomTransform.name", false]], "name (pycbc.transforms.customtransformmultioutputs attribute)": [[52, "pycbc.transforms.CustomTransformMultiOutputs.name", false]], "name (pycbc.transforms.distancetochirpdistance attribute)": [[52, "pycbc.transforms.DistanceToChirpDistance.name", false]], "name (pycbc.transforms.distancetoredshift attribute)": [[52, "pycbc.transforms.DistanceToRedshift.name", false]], "name (pycbc.transforms.exponent attribute)": [[52, "pycbc.transforms.Exponent.name", false]], "name (pycbc.transforms.geotolisa attribute)": [[52, "pycbc.transforms.GEOToLISA.name", false]], "name (pycbc.transforms.geotossb attribute)": [[52, "pycbc.transforms.GEOToSSB.name", false]], "name (pycbc.transforms.lambdafrommultipletovfiles attribute)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.name", false]], "name (pycbc.transforms.lambdafromtovfile attribute)": [[52, "pycbc.transforms.LambdaFromTOVFile.name", false]], "name (pycbc.transforms.lisatogeo attribute)": [[52, "pycbc.transforms.LISAToGEO.name", false]], "name (pycbc.transforms.lisatossb attribute)": [[52, "pycbc.transforms.LISAToSSB.name", false]], "name (pycbc.transforms.log attribute)": [[52, "pycbc.transforms.Log.name", false]], "name (pycbc.transforms.logistic attribute)": [[52, "pycbc.transforms.Logistic.name", false]], "name (pycbc.transforms.logit attribute)": [[52, "pycbc.transforms.Logit.name", false]], "name (pycbc.transforms.mass1mass2tomchirpeta attribute)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.name", false]], "name (pycbc.transforms.mass1mass2tomchirpq attribute)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.name", false]], "name (pycbc.transforms.mchirpetatomass1mass2 attribute)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2.name", false]], "name (pycbc.transforms.mchirpqtomass1mass2 attribute)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.name", false]], "name (pycbc.transforms.precessionmassspintocartesianspin attribute)": [[52, "pycbc.transforms.PrecessionMassSpinToCartesianSpin.name", false]], "name (pycbc.transforms.sphericalspin1tocartesianspin1 attribute)": [[52, "pycbc.transforms.SphericalSpin1ToCartesianSpin1.name", false]], "name (pycbc.transforms.sphericalspin2tocartesianspin2 attribute)": [[52, "pycbc.transforms.SphericalSpin2ToCartesianSpin2.name", false]], "name (pycbc.transforms.sphericaltocartesian attribute)": [[52, "pycbc.transforms.SphericalToCartesian.name", false]], "name (pycbc.transforms.ssbtogeo attribute)": [[52, "pycbc.transforms.SSBToGEO.name", false]], "name (pycbc.transforms.ssbtolisa attribute)": [[52, "pycbc.transforms.SSBToLISA.name", false]], "name_all_datasets() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.name_all_datasets", false]], "names (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.names", false]], "nbytes (pycbc.events.coinc.coincexpirebuffer property)": [[57, "pycbc.events.coinc.CoincExpireBuffer.nbytes", false]], "nbytes (pycbc.events.coinc.multiringbuffer property)": [[57, "pycbc.events.coinc.MultiRingBuffer.nbytes", false]], "nbytes (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.nbytes", false]], "nchains (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.nchains", false]], "nchains (pycbc.inference.io.epsie.epsiefile property)": [[62, "pycbc.inference.io.epsie.EpsieFile.nchains", false]], "nchains (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.nchains", false]], "ndbins (class in pycbc.bin_utils)": [[52, "pycbc.bin_utils.NDBins", false]], "ndim (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.ndim", false]], "near_hwinj() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.near_hwinj", false]], "nearest_larger_binary_number() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.nearest_larger_binary_number", false]], "nessaifile (class in pycbc.inference.io.nessai)": [[62, "pycbc.inference.io.nessai.NessaiFile", false]], "nessaimodel (class in pycbc.inference.sampler.nessai)": [[65, "pycbc.inference.sampler.nessai.NessaiModel", false]], "nessaisampler (class in pycbc.inference.sampler.nessai)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler", false]], "network_chisq() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.network_chisq", false]], "new_multiifo_output_list_opt() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.new_multiifo_output_list_opt", false]], "new_output_file_opt() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.new_output_file_opt", false]], "new_output_file_opt() (pycbc.workflow.pegasus_workflow.node method)": [[79, "pycbc.workflow.pegasus_workflow.Node.new_output_file_opt", false]], "new_point() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.new_point", false]], "new_point_log_prob() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.new_point_log_prob", false]], "new_template() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.new_template", false]], "newsnr (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.newsnr", false]], "newsnr() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr", false]], "newsnr_sgveto (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.newsnr_sgveto", false]], "newsnr_sgveto() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr_sgveto", false]], "newsnr_sgveto_psdvar (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.newsnr_sgveto_psdvar", false]], "newsnr_sgveto_psdvar() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr_sgveto_psdvar", false]], "newsnr_sgveto_psdvar_scaled() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr_sgveto_psdvar_scaled", false]], "newsnr_sgveto_psdvar_scaled_threshold() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr_sgveto_psdvar_scaled_threshold", false]], "newsnr_sgveto_psdvar_threshold (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.newsnr_sgveto_psdvar_threshold", false]], "newsnr_sgveto_psdvar_threshold() (in module pycbc.events.ranking)": [[57, "pycbc.events.ranking.newsnr_sgveto_psdvar_threshold", false]], "newsnr_threshold() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.newsnr_threshold", false]], "next_power_of_2() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.next_power_of_2", false]], "niterations (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.niterations", false]], "niterations (pycbc.inference.io.multinest.multinestfile property)": [[62, "pycbc.inference.io.multinest.MultinestFile.niterations", false]], "niterations (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.niterations", false]], "niterations (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.niterations", false]], "niterations (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.niterations", false]], "niterations (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.niterations", false]], "niterations (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.niterations", false]], "nlivepoints (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.nlivepoints", false]], "nltides_fourier_phase_difference() (in module pycbc.waveform.nltides)": [[78, "pycbc.waveform.nltides.nltides_fourier_phase_difference", false]], "nltides_gw_phase_diff_isco() (in module pycbc.conversions)": [[52, "pycbc.conversions.nltides_gw_phase_diff_isco", false]], "node (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.Node", false]], "node (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.Node", false]], "nodefaults (pycbc.waveform.parameters.parameterlist property)": [[78, "pycbc.waveform.parameters.ParameterList.nodefaults", false]], "noinputfileerror": [[62, "pycbc.inference.io.NoInputFileError", false]], "noise_density_from_far() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.noise_density_from_far", false]], "noise_from_psd() (in module pycbc.noise.gaussian)": [[70, "pycbc.noise.gaussian.noise_from_psd", false]], "noise_from_string() (in module pycbc.noise.gaussian)": [[70, "pycbc.noise.gaussian.noise_from_string", false]], "noise_from_string() (in module pycbc.noise.reproduceable)": [[70, "pycbc.noise.reproduceable.noise_from_string", false]], "nonlinear_tidal_spa() (in module pycbc.waveform.nltides)": [[78, "pycbc.waveform.nltides.nonlinear_tidal_spa", false]], "nonnegative_float() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.nonnegative_float", false]], "nonnegative_int() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.nonnegative_int", false]], "norm (pycbc.distributions.arbitrary.fromfile attribute)": [[56, "pycbc.distributions.arbitrary.FromFile.norm", false]], "norm (pycbc.distributions.mass.qfromuniformmass1mass2 property)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2.norm", false]], "norm (pycbc.distributions.power_law.uniformpowerlaw property)": [[56, "pycbc.distributions.power_law.UniformPowerLaw.norm", false]], "norm (pycbc.distributions.uniform.uniform property)": [[56, "pycbc.distributions.uniform.Uniform.norm", false]], "norm_redshift_distribution() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.norm_redshift_distribution", false]], "normal() (in module pycbc.noise.reproduceable)": [[70, "pycbc.noise.reproduceable.normal", false]], "normalize (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian property)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.normalize", false]], "normalize (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.normalize", false]], "normalize_azimuth() (pycbc.distributions.sky_location.healpixsky method)": [[56, "pycbc.distributions.sky_location.HealpixSky.normalize_azimuth", false]], "normalize_pdf() (in module pycbc.rate)": [[52, "pycbc.rate.normalize_pdf", false]], "notch_fir() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.notch_fir", false]], "notch_fir() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.notch_fir", false]], "novaliddataerror": [[64, "pycbc.inference.models.data_utils.NoValidDataError", false]], "nowaveformerror": [[78, "pycbc.waveform.waveform.NoWaveformError", false]], "nsamples_in_chain() (in module pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.nsamples_in_chain", false]], "ntemps (pycbc.inference.io.base_multitemper.commonmultitemperedmetadataio property)": [[62, "pycbc.inference.io.base_multitemper.CommonMultiTemperedMetadataIO.ntemps", false]], "ntemps (pycbc.inference.sampler.base_multitemper.multitemperedsupport property)": [[65, "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport.ntemps", false]], "ntemps (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.ntemps", false]], "null_advance() (pycbc.frame.frame.databuffer method)": [[60, "pycbc.frame.frame.DataBuffer.null_advance", false]], "null_advance() (pycbc.frame.frame.idqbuffer method)": [[60, "pycbc.frame.frame.iDQBuffer.null_advance", false]], "null_advance_strain() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.null_advance_strain", false]], "null_snr() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.null_snr", false]], "num_elements() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.num_elements", false]], "num_greater() (pycbc.events.coinc.coincexpirebuffer method)": [[57, "pycbc.events.coinc.CoincExpireBuffer.num_greater", false]], "numpy() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.numpy", false]], "numpy() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.numpy", false]], "numpy() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.numpy", false]], "numpyscheme (class in pycbc.scheme)": [[52, "pycbc.scheme.NumpyScheme", false]], "nwalkers (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.nwalkers", false]], "nwalkers (pycbc.inference.sampler.base_mcmc.ensemblesupport property)": [[65, "pycbc.inference.sampler.base_mcmc.EnsembleSupport.nwalkers", false]], "odds_summary() (in module pycbc.population.fgmc_plots)": [[71, "pycbc.population.fgmc_plots.odds_summary", false]], "omega_length() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.omega_length", false]], "openbound (class in pycbc.boundaries)": [[52, "pycbc.boundaries.OpenBound", false]], "optimal_dec_from_detector() (in module pycbc.conversions)": [[52, "pycbc.conversions.optimal_dec_from_detector", false]], "optimal_orientation() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.optimal_orientation", false]], "optimal_ra_from_detector() (in module pycbc.conversions)": [[52, "pycbc.conversions.optimal_ra_from_detector", false]], "optimize_di() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.optimize_di", false]], "optimize_pso() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.optimize_pso", false]], "optimize_shgo() (in module pycbc.live.snr_optimizer)": [[68, "pycbc.live.snr_optimizer.optimize_shgo", false]], "optimized_match() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.optimized_match", false]], "order_transforms() (in module pycbc.transforms)": [[52, "pycbc.transforms.order_transforms", false]], "others_lognl() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.others_lognl", false]], "out_kmax (pycbc.fft.fft_callback.param2 attribute)": [[58, "pycbc.fft.fft_callback.param2.out_kmax", false]], "out_kmin (pycbc.fft.fft_callback.param2 attribute)": [[58, "pycbc.fft.fft_callback.param2.out_kmin", false]], "outofsamples": [[65, "pycbc.inference.sampler.games.OutOfSamples", false]], "output_all_points() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.output_all_points", false]], "output_bank_to_file() (in module pycbc.tmpltbank.bank_output_utils)": [[75, "pycbc.tmpltbank.bank_output_utils.output_bank_to_file", false]], "output_bank_to_hdf() (in module pycbc.tmpltbank.bank_output_utils)": [[75, "pycbc.tmpltbank.bank_output_utils.output_bank_to_hdf", false]], "output_file (pycbc.workflow.core.node property)": [[79, "pycbc.workflow.core.Node.output_file", false]], "output_files (pycbc.workflow.core.node property)": [[79, "pycbc.workflow.core.Node.output_files", false]], "output_map (pycbc.workflow.core.workflow property)": [[79, "pycbc.workflow.core.Workflow.output_map", false]], "output_map_str() (pycbc.workflow.pegasus_workflow.file method)": [[79, "pycbc.workflow.pegasus_workflow.File.output_map_str", false]], "output_sngl_inspiral_table() (in module pycbc.tmpltbank.bank_output_utils)": [[75, "pycbc.tmpltbank.bank_output_utils.output_sngl_inspiral_table", false]], "outputvar (pycbc.transforms.log property)": [[52, "pycbc.transforms.Log.outputvar", false]], "outputvar (pycbc.transforms.logit property)": [[52, "pycbc.transforms.Logit.outputvar", false]], "outspiral_loop() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.outspiral_loop", false]], "overhead_antenna_pattern() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.overhead_antenna_pattern", false]], "overlap() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.overlap", false]], "overlap_cplx() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.overlap_cplx", false]], "overwhitened_data() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.overwhitened_data", false]], "p0 (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.p0", false]], "p_bg() (pycbc.population.fgmc_laguerre.count_posterior method)": [[71, "pycbc.population.fgmc_laguerre.count_posterior.p_bg", false]], "p_tau() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.p_tau", false]], "parallel_thresh_cluster() (in module pycbc.events.simd_threshold_cython)": [[57, "pycbc.events.simd_threshold_cython.parallel_thresh_cluster", false]], "parallel_threshold() (in module pycbc.events.simd_threshold_cython)": [[57, "pycbc.events.simd_threshold_cython.parallel_threshold", false]], "param (class in pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.param", false]], "param2 (class in pycbc.fft.fft_callback)": [[58, "pycbc.fft.fft_callback.param2", false]], "parameter (class in pycbc.waveform.parameters)": [[78, "pycbc.waveform.parameters.Parameter", false]], "parameterlist (class in pycbc.waveform.parameters)": [[78, "pycbc.waveform.parameters.ParameterList", false]], "parameters (pycbc.waveform.bank.templatebank property)": [[78, "pycbc.waveform.bank.TemplateBank.parameters", false]], "params (pycbc.distributions.arbitrary.arbitrary property)": [[56, "pycbc.distributions.arbitrary.Arbitrary.params", false]], "params (pycbc.distributions.bounded.boundeddist property)": [[56, "pycbc.distributions.bounded.BoundedDist.params", false]], "params (pycbc.distributions.sky_location.fishersky property)": [[56, "pycbc.distributions.sky_location.FisherSky.params", false]], "params (pycbc.distributions.sky_location.healpixsky property)": [[56, "pycbc.distributions.sky_location.HealpixSky.params", false]], "params (pycbc.distributions.sky_location.uniformdisksky property)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.params", false]], "parse() (pycbc.inference.models.hierarchical.hierarchicalparam class method)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.parse", false]], "parse_approximant() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.parse_approximant", false]], "parse_approximant_arg() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.parse_approximant_arg", false]], "parse_boolargs() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.parse_boolargs", false]], "parse_flag_str() (in module pycbc.dq)": [[52, "pycbc.dq.parse_flag_str", false]], "parse_known_args() (pycbc.inference.io.resultsargumentparser method)": [[62, "pycbc.inference.io.ResultsArgumentParser.parse_known_args", false]], "parse_mode() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.parse_mode", false]], "parse_option() (pycbc.vetoes.chisq.singledetpowerchisq static method)": [[77, "pycbc.vetoes.chisq.SingleDetPowerChisq.parse_option", false]], "parse_parameters() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.parse_parameters", false]], "parse_parameters() (pycbc.io.record.fieldarray class method)": [[67, "pycbc.io.record.FieldArray.parse_parameters", false]], "parse_segdict_key() (pycbc.workflow.core.segfile method)": [[79, "pycbc.workflow.core.SegFile.parse_segdict_key", false]], "parse_statistic_feature_options() (in module pycbc.events.stat)": [[57, "pycbc.events.stat.parse_statistic_feature_options", false]], "parse_veto_definer() (in module pycbc.dq)": [[52, "pycbc.dq.parse_veto_definer", false]], "parse_workflow_ini_file() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.parse_workflow_ini_file", false]], "parsecs_to_meters() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.parsecs_to_meters", false]], "parselabelarg (class in pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.ParseLabelArg", false]], "parseparametersarg (class in pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.ParseParametersArg", false]], "parsetempsarg (class in pycbc.inference.io.base_multitemper)": [[62, "pycbc.inference.io.base_multitemper.ParseTempsArg", false]], "partitionedtmpltbank (class in pycbc.tmpltbank.partitioned_bank)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank", false]], "pastrodata (class in pycbc.population.live_pastro_utils)": [[71, "pycbc.population.live_pastro_utils.PAstroData", false]], "pdf() (pycbc.distributions.bounded.boundeddist method)": [[56, "pycbc.distributions.bounded.BoundedDist.pdf", false]], "pdf_z_astro() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.pdf_z_astro", false]], "perform_exe_expansion() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.perform_exe_expansion", false]], "perform_extended_interpolation() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.perform_extended_interpolation", false]], "perform_extended_interpolation() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.perform_extended_interpolation", false]], "pg_isso_eq() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.PG_ISSO_eq", false]], "pg_isso_eq_dr() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.PG_ISSO_eq_dr", false]], "pg_isso_eq_dr2() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.PG_ISSO_eq_dr2", false]], "pg_isso_solver() (in module pycbc.neutron_stars.pg_isso_solver)": [[69, "pycbc.neutron_stars.pg_isso_solver.PG_ISSO_solver", false]], "phase (pycbc.waveform.compress.compressedwaveform property)": [[78, "pycbc.waveform.compress.CompressedWaveform.phase", false]], "phase_fac() (pycbc.inference.models.marginalized_gaussian_noise.marginalizedhmpolphase method)": [[64, "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedHMPolPhase.phase_fac", false]], "phase_from_frequencyseries() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.phase_from_frequencyseries", false]], "phase_from_polarizations() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.phase_from_polarizations", false]], "phasetdstatistic (class in pycbc.events.stat)": [[57, "pycbc.events.stat.PhaseTDStatistic", false]], "phi1_from_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.phi1_from_phi_a_phi_s", false]], "phi2_from_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.phi2_from_phi_a_phi_s", false]], "phi_a() (in module pycbc.conversions)": [[52, "pycbc.conversions.phi_a", false]], "phi_from_spinx_spiny() (in module pycbc.conversions)": [[52, "pycbc.conversions.phi_from_spinx_spiny", false]], "phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.phi_s", false]], "physicalmodel (class in pycbc.strain.recalibrate)": [[74, "pycbc.strain.recalibrate.PhysicalModel", false]], "pick_best_coinc() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator class method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.pick_best_coinc", false]], "pick_tile_size() (pycbc.workflow.jobsetup.jobsegmenter method)": [[79, "pycbc.workflow.jobsetup.JobSegmenter.pick_tile_size", false]], "pixel_corners() (pycbc.distributions.sky_location.healpixsky method)": [[56, "pycbc.distributions.sky_location.HealpixSky.pixel_corners", false]], "pkg_config() (in module pycbc.libutils)": [[52, "pycbc.libutils.pkg_config", false]], "pkg_config_check_exists() (in module pycbc.libutils)": [[52, "pycbc.libutils.pkg_config_check_exists", false]], "pkg_config_header_strings() (in module pycbc.libutils)": [[52, "pycbc.libutils.pkg_config_header_strings", false]], "pkg_config_libdirs() (in module pycbc.libutils)": [[52, "pycbc.libutils.pkg_config_libdirs", false]], "plan() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.plan", false]], "plan_and_submit() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.plan_and_submit", false]], "plan_first_phase() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.plan_first_phase", false]], "plan_transpose() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.plan_transpose", false]], "plot() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.plot", false]], "plot() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.plot", false]], "plot_bg() (pycbc.population.fgmc_functions.backgroundeventrate method)": [[71, "pycbc.population.fgmc_functions.BackgroundEventRate.plot_bg", false]], "plot_inj() (pycbc.population.fgmc_functions.signaleventrate method)": [[71, "pycbc.population.fgmc_functions.SignalEventRate.plot_inj", false]], "plot_ranges_from_cli() (in module pycbc.inference.option_utils)": [[61, "pycbc.inference.option_utils.plot_ranges_from_cli", false]], "plotdist() (in module pycbc.population.fgmc_plots)": [[71, "pycbc.population.fgmc_plots.plotdist", false]], "plotexecutable (class in pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.PlotExecutable", false]], "plotqscanexecutable (class in pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.PlotQScanExecutable", false]], "point_chisq_code() (in module pycbc.vetoes.chisq_cpu)": [[77, "pycbc.vetoes.chisq_cpu.point_chisq_code", false]], "polar_angle (pycbc.distributions.angular.uniformsolidangle property)": [[56, "pycbc.distributions.angular.UniformSolidAngle.polar_angle", false]], "polarization_newframe() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.polarization_newframe", false]], "polarization_newframe() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.polarization_newframe", false]], "populate_catalogs() (in module pycbc.catalog.catalog)": [[53, "pycbc.catalog.catalog.populate_catalogs", false]], "populate_shared_sections() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.populate_shared_sections", false]], "pos (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.pos", false]], "pos (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.pos", false]], "positive_float() (in module pycbc.events.significance)": [[57, "pycbc.events.significance.positive_float", false]], "positive_float() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.positive_float", false]], "positive_int() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.positive_int", false]], "possible_args (pycbc.waveform.generator.basecbcgenerator attribute)": [[78, "pycbc.waveform.generator.BaseCBCGenerator.possible_args", false]], "posterior_step() (in module pycbc.inference.burn_in)": [[61, "pycbc.inference.burn_in.posterior_step", false]], "posterior_step() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.posterior_step", false]], "posterior_step() (pycbc.inference.burn_in.ensemblemcmcburnintests method)": [[61, "pycbc.inference.burn_in.EnsembleMCMCBurnInTests.posterior_step", false]], "posterior_step() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.posterior_step", false]], "posteriorfile (class in pycbc.inference.io.posterior)": [[62, "pycbc.inference.io.posterior.PosteriorFile", false]], "power_chisq() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.power_chisq", false]], "power_chisq_at_points_from_precomputed() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.power_chisq_at_points_from_precomputed", false]], "power_chisq_bins() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.power_chisq_bins", false]], "power_chisq_bins_from_sigmasq_series() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.power_chisq_bins_from_sigmasq_series", false]], "power_chisq_from_precomputed() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.power_chisq_from_precomputed", false]], "power_fitalpha() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.power_fitalpha", false]], "ppdets() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.ppdets", false]], "precessionmassspintocartesianspin (class in pycbc.transforms)": [[52, "pycbc.transforms.PrecessionMassSpinToCartesianSpin", false]], "precision (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.precision", false]], "precision (pycbc.waveform.compress.compressedwaveform attribute)": [[78, "pycbc.waveform.compress.CompressedWaveform.precision", false]], "precompute_injection_intervals() (pycbc.inject.injfilterrejector.injfilterrejector method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.precompute_injection_intervals", false]], "premarg_draw() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.premarg_draw", false]], "premerger_taylorf2() (in module pycbc.waveform.premerger)": [[78, "pycbc.waveform.premerger.premerger_taylorf2", false]], "prepend_zeros() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.prepend_zeros", false]], "primary_mass (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.primary_mass", false]], "primary_mass() (in module pycbc.conversions)": [[52, "pycbc.conversions.primary_mass", false]], "primary_spin() (in module pycbc.conversions)": [[52, "pycbc.conversions.primary_spin", false]], "primary_xi() (in module pycbc.conversions)": [[52, "pycbc.conversions.primary_xi", false]], "print_fd_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.print_fd_approximants", false]], "print_sgburst_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.print_sgburst_approximants", false]], "print_td_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.print_td_approximants", false]], "printfileparams (class in pycbc.inference.io)": [[62, "pycbc.inference.io.PrintFileParams", false]], "prior_from_config() (in module pycbc.distributions.utils)": [[56, "pycbc.distributions.utils.prior_from_config", false]], "prior_from_config() (pycbc.inference.models.base.basemodel static method)": [[64, "pycbc.inference.models.base.BaseModel.prior_from_config", false]], "prior_rvs() (pycbc.inference.models.base.basemodel method)": [[64, "pycbc.inference.models.base.BaseModel.prior_rvs", false]], "prior_transform() (pycbc.inference.sampler.base_cube.cubemodel method)": [[65, "pycbc.inference.sampler.base_cube.CubeModel.prior_transform", false]], "prob_flat() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.prob_flat", false]], "prob_imf() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.prob_imf", false]], "prob_lnm() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.prob_lnm", false]], "process_all() (pycbc.filter.matchedfilter.livebatchmatchedfilter method)": [[59, "pycbc.filter.matchedfilter.LiveBatchMatchedFilter.process_all", false]], "process_data() (pycbc.filter.matchedfilter.livebatchmatchedfilter method)": [[59, "pycbc.filter.matchedfilter.LiveBatchMatchedFilter.process_data", false]], "process_full_data() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.process_full_data", false]], "process_injections() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.process_injections", false]], "profileshortcuts (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts", false]], "project_wave() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.project_wave", false]], "project_wave() (pycbc.detector.space.spacedetector method)": [[55, "pycbc.detector.space.SpaceDetector.project_wave", false]], "projector() (in module pycbc.inject.inject)": [[66, "pycbc.inject.inject.projector", false]], "propagation_vector_to_localization() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.propagation_vector_to_localization", false]], "propagation_vector_to_localization() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.propagation_vector_to_localization", false]], "props() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.props", false]], "pruned_c2cifft() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.pruned_c2cifft", false]], "psd (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.psd", false]], "psd() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.psd", false]], "psd_gates_from_cli() (in module pycbc.strain.gate)": [[74, "pycbc.strain.gate.psd_gates_from_cli", false]], "psd_lisa_acc_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_lisa_acc_noise", false]], "psd_lisa_oms_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_lisa_oms_noise", false]], "psd_segments (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.psd_segments", false]], "psd_taiji_acc_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_taiji_acc_noise", false]], "psd_taiji_oms_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_taiji_oms_noise", false]], "psd_tianqin_acc_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_tianqin_acc_noise", false]], "psd_tianqin_oms_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.psd_tianqin_oms_noise", false]], "psd_var_val (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.psd_var_val", false]], "psds (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian property)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.psds", false]], "psds (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.psds", false]], "ptemceefile (class in pycbc.inference.io.ptemcee)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile", false]], "ptemceesampler (class in pycbc.inference.sampler.ptemcee)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler", false]], "ptr (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.ptr", false]], "ptr() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.ptr", false]], "ptr() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.ptr", false]], "pycbc": [[52, "module-pycbc", false]], "pycbc.bin_utils": [[52, "module-pycbc.bin_utils", false]], "pycbc.boundaries": [[52, "module-pycbc.boundaries", false]], "pycbc.catalog": [[53, "module-pycbc.catalog", false]], "pycbc.catalog.catalog": [[53, "module-pycbc.catalog.catalog", false]], "pycbc.conversions": [[52, "module-pycbc.conversions", false]], "pycbc.coordinates": [[54, "module-pycbc.coordinates", false]], "pycbc.coordinates.base": [[54, "module-pycbc.coordinates.base", false]], "pycbc.coordinates.space": [[54, "module-pycbc.coordinates.space", false]], "pycbc.cosmology": [[52, "module-pycbc.cosmology", false]], "pycbc.detector": [[55, "module-pycbc.detector", false]], "pycbc.detector.ground": [[55, "module-pycbc.detector.ground", false]], "pycbc.detector.space": [[55, "module-pycbc.detector.space", false]], "pycbc.distributions": [[56, "module-pycbc.distributions", false]], "pycbc.distributions.angular": [[56, "module-pycbc.distributions.angular", false]], "pycbc.distributions.arbitrary": [[56, "module-pycbc.distributions.arbitrary", false]], "pycbc.distributions.bounded": [[56, "module-pycbc.distributions.bounded", false]], "pycbc.distributions.constraints": [[56, "module-pycbc.distributions.constraints", false]], "pycbc.distributions.external": [[56, "module-pycbc.distributions.external", false]], "pycbc.distributions.fixedsamples": [[56, "module-pycbc.distributions.fixedsamples", false]], "pycbc.distributions.gaussian": [[56, "module-pycbc.distributions.gaussian", false]], "pycbc.distributions.joint": [[56, "module-pycbc.distributions.joint", false]], "pycbc.distributions.mass": [[56, "module-pycbc.distributions.mass", false]], "pycbc.distributions.power_law": [[56, "module-pycbc.distributions.power_law", false]], "pycbc.distributions.qnm": [[56, "module-pycbc.distributions.qnm", false]], "pycbc.distributions.sky_location": [[56, "module-pycbc.distributions.sky_location", false]], "pycbc.distributions.spins": [[56, "module-pycbc.distributions.spins", false]], "pycbc.distributions.uniform": [[56, "module-pycbc.distributions.uniform", false]], "pycbc.distributions.uniform_log": [[56, "module-pycbc.distributions.uniform_log", false]], "pycbc.distributions.utils": [[56, "module-pycbc.distributions.utils", false]], "pycbc.dq": [[52, "module-pycbc.dq", false]], "pycbc.events": [[57, "module-pycbc.events", false]], "pycbc.events.coherent": [[57, "module-pycbc.events.coherent", false]], "pycbc.events.coinc": [[57, "module-pycbc.events.coinc", false]], "pycbc.events.coinc_rate": [[57, "module-pycbc.events.coinc_rate", false]], "pycbc.events.cuts": [[57, "module-pycbc.events.cuts", false]], "pycbc.events.eventmgr": [[57, "module-pycbc.events.eventmgr", false]], "pycbc.events.eventmgr_cython": [[57, "module-pycbc.events.eventmgr_cython", false]], "pycbc.events.ranking": [[57, "module-pycbc.events.ranking", false]], "pycbc.events.significance": [[57, "module-pycbc.events.significance", false]], "pycbc.events.simd_threshold_cython": [[57, "module-pycbc.events.simd_threshold_cython", false]], "pycbc.events.single": [[57, "module-pycbc.events.single", false]], "pycbc.events.stat": [[57, "module-pycbc.events.stat", false]], "pycbc.events.threshold_cpu": [[57, "module-pycbc.events.threshold_cpu", false]], "pycbc.events.threshold_cupy": [[57, "module-pycbc.events.threshold_cupy", false]], "pycbc.events.trigger_fits": [[57, "module-pycbc.events.trigger_fits", false]], "pycbc.events.triggers": [[57, "module-pycbc.events.triggers", false]], "pycbc.events.veto": [[57, "module-pycbc.events.veto", false]], "pycbc.fft": [[58, "module-pycbc.fft", false]], "pycbc.fft.backend_cpu": [[58, "module-pycbc.fft.backend_cpu", false]], "pycbc.fft.backend_cupy": [[58, "module-pycbc.fft.backend_cupy", false]], "pycbc.fft.backend_mkl": [[58, "module-pycbc.fft.backend_mkl", false]], "pycbc.fft.backend_support": [[58, "module-pycbc.fft.backend_support", false]], "pycbc.fft.class_api": [[58, "module-pycbc.fft.class_api", false]], "pycbc.fft.core": [[58, "module-pycbc.fft.core", false]], "pycbc.fft.cupyfft": [[58, "module-pycbc.fft.cupyfft", false]], "pycbc.fft.fft_callback": [[58, "module-pycbc.fft.fft_callback", false]], "pycbc.fft.fftw": [[58, "module-pycbc.fft.fftw", false]], "pycbc.fft.fftw_pruned": [[58, "module-pycbc.fft.fftw_pruned", false]], "pycbc.fft.fftw_pruned_cython": [[58, "module-pycbc.fft.fftw_pruned_cython", false]], "pycbc.fft.func_api": [[58, "module-pycbc.fft.func_api", false]], "pycbc.fft.mkl": [[58, "module-pycbc.fft.mkl", false]], "pycbc.fft.npfft": [[58, "module-pycbc.fft.npfft", false]], "pycbc.fft.parser_support": [[58, "module-pycbc.fft.parser_support", false]], "pycbc.filter": [[59, "module-pycbc.filter", false]], "pycbc.filter.autocorrelation": [[59, "module-pycbc.filter.autocorrelation", false]], "pycbc.filter.matchedfilter": [[59, "module-pycbc.filter.matchedfilter", false]], "pycbc.filter.matchedfilter_cpu": [[59, "module-pycbc.filter.matchedfilter_cpu", false]], "pycbc.filter.matchedfilter_cupy": [[59, "module-pycbc.filter.matchedfilter_cupy", false]], "pycbc.filter.matchedfilter_numpy": [[59, "module-pycbc.filter.matchedfilter_numpy", false]], "pycbc.filter.qtransform": [[59, "module-pycbc.filter.qtransform", false]], "pycbc.filter.resample": [[59, "module-pycbc.filter.resample", false]], "pycbc.filter.simd_correlate": [[59, "module-pycbc.filter.simd_correlate", false]], "pycbc.filter.simd_correlate_cython": [[59, "module-pycbc.filter.simd_correlate_cython", false]], "pycbc.filter.zpk": [[59, "module-pycbc.filter.zpk", false]], "pycbc.frame": [[60, "module-pycbc.frame", false]], "pycbc.frame.frame": [[60, "module-pycbc.frame.frame", false]], "pycbc.frame.gwosc": [[60, "module-pycbc.frame.gwosc", false]], "pycbc.frame.store": [[60, "module-pycbc.frame.store", false]], "pycbc.inference": [[61, "module-pycbc.inference", false]], "pycbc.inference.burn_in": [[61, "module-pycbc.inference.burn_in", false]], "pycbc.inference.entropy": [[61, "module-pycbc.inference.entropy", false]], "pycbc.inference.evidence": [[61, "module-pycbc.inference.evidence", false]], "pycbc.inference.gelman_rubin": [[61, "module-pycbc.inference.gelman_rubin", false]], "pycbc.inference.geweke": [[61, "module-pycbc.inference.geweke", false]], "pycbc.inference.io": [[62, "module-pycbc.inference.io", false]], "pycbc.inference.io.base_hdf": [[62, "module-pycbc.inference.io.base_hdf", false]], "pycbc.inference.io.base_mcmc": [[62, "module-pycbc.inference.io.base_mcmc", false]], "pycbc.inference.io.base_multitemper": [[62, "module-pycbc.inference.io.base_multitemper", false]], "pycbc.inference.io.base_nested_sampler": [[62, "module-pycbc.inference.io.base_nested_sampler", false]], "pycbc.inference.io.base_sampler": [[62, "module-pycbc.inference.io.base_sampler", false]], "pycbc.inference.io.dynesty": [[62, "module-pycbc.inference.io.dynesty", false]], "pycbc.inference.io.emcee": [[62, "module-pycbc.inference.io.emcee", false]], "pycbc.inference.io.emcee_pt": [[62, "module-pycbc.inference.io.emcee_pt", false]], "pycbc.inference.io.epsie": [[62, "module-pycbc.inference.io.epsie", false]], "pycbc.inference.io.multinest": [[62, "module-pycbc.inference.io.multinest", false]], "pycbc.inference.io.nessai": [[62, "module-pycbc.inference.io.nessai", false]], "pycbc.inference.io.posterior": [[62, "module-pycbc.inference.io.posterior", false]], "pycbc.inference.io.ptemcee": [[62, "module-pycbc.inference.io.ptemcee", false]], "pycbc.inference.io.snowline": [[62, "module-pycbc.inference.io.snowline", false]], "pycbc.inference.io.txt": [[62, "module-pycbc.inference.io.txt", false]], "pycbc.inference.io.ultranest": [[62, "module-pycbc.inference.io.ultranest", false]], "pycbc.inference.jump": [[63, "module-pycbc.inference.jump", false]], "pycbc.inference.jump.angular": [[63, "module-pycbc.inference.jump.angular", false]], "pycbc.inference.jump.bounded_normal": [[63, "module-pycbc.inference.jump.bounded_normal", false]], "pycbc.inference.jump.discrete": [[63, "module-pycbc.inference.jump.discrete", false]], "pycbc.inference.jump.normal": [[63, "module-pycbc.inference.jump.normal", false]], "pycbc.inference.models": [[64, "module-pycbc.inference.models", false]], "pycbc.inference.models.analytic": [[64, "module-pycbc.inference.models.analytic", false]], "pycbc.inference.models.base": [[64, "module-pycbc.inference.models.base", false]], "pycbc.inference.models.base_data": [[64, "module-pycbc.inference.models.base_data", false]], "pycbc.inference.models.brute_marg": [[64, "module-pycbc.inference.models.brute_marg", false]], "pycbc.inference.models.data_utils": [[64, "module-pycbc.inference.models.data_utils", false]], "pycbc.inference.models.gated_gaussian_noise": [[64, "module-pycbc.inference.models.gated_gaussian_noise", false]], "pycbc.inference.models.gaussian_noise": [[64, "module-pycbc.inference.models.gaussian_noise", false]], "pycbc.inference.models.hierarchical": [[64, "module-pycbc.inference.models.hierarchical", false]], "pycbc.inference.models.marginalized_gaussian_noise": [[64, "module-pycbc.inference.models.marginalized_gaussian_noise", false]], "pycbc.inference.models.relbin": [[64, "module-pycbc.inference.models.relbin", false]], "pycbc.inference.models.relbin_cpu": [[64, "module-pycbc.inference.models.relbin_cpu", false]], "pycbc.inference.models.single_template": [[64, "module-pycbc.inference.models.single_template", false]], "pycbc.inference.models.tools": [[64, "module-pycbc.inference.models.tools", false]], "pycbc.inference.option_utils": [[61, "module-pycbc.inference.option_utils", false]], "pycbc.inference.sampler": [[65, "module-pycbc.inference.sampler", false]], "pycbc.inference.sampler.base": [[65, "module-pycbc.inference.sampler.base", false]], "pycbc.inference.sampler.base_cube": [[65, "module-pycbc.inference.sampler.base_cube", false]], "pycbc.inference.sampler.base_mcmc": [[65, "module-pycbc.inference.sampler.base_mcmc", false]], "pycbc.inference.sampler.base_multitemper": [[65, "module-pycbc.inference.sampler.base_multitemper", false]], "pycbc.inference.sampler.dummy": [[65, "module-pycbc.inference.sampler.dummy", false]], "pycbc.inference.sampler.dynesty": [[65, "module-pycbc.inference.sampler.dynesty", false]], "pycbc.inference.sampler.emcee": [[65, "module-pycbc.inference.sampler.emcee", false]], "pycbc.inference.sampler.emcee_pt": [[65, "module-pycbc.inference.sampler.emcee_pt", false]], "pycbc.inference.sampler.epsie": [[65, "module-pycbc.inference.sampler.epsie", false]], "pycbc.inference.sampler.games": [[65, "module-pycbc.inference.sampler.games", false]], "pycbc.inference.sampler.multinest": [[65, "module-pycbc.inference.sampler.multinest", false]], "pycbc.inference.sampler.nessai": [[65, "module-pycbc.inference.sampler.nessai", false]], "pycbc.inference.sampler.ptemcee": [[65, "module-pycbc.inference.sampler.ptemcee", false]], "pycbc.inference.sampler.refine": [[65, "module-pycbc.inference.sampler.refine", false]], "pycbc.inference.sampler.snowline": [[65, "module-pycbc.inference.sampler.snowline", false]], "pycbc.inference.sampler.ultranest": [[65, "module-pycbc.inference.sampler.ultranest", false]], "pycbc.inject": [[66, "module-pycbc.inject", false]], "pycbc.inject.inject": [[66, "module-pycbc.inject.inject", false]], "pycbc.inject.injfilterrejector": [[66, "module-pycbc.inject.injfilterrejector", false]], "pycbc.io": [[67, "module-pycbc.io", false]], "pycbc.io.gracedb": [[67, "module-pycbc.io.gracedb", false]], "pycbc.io.hdf": [[67, "module-pycbc.io.hdf", false]], "pycbc.io.ligolw": [[67, "module-pycbc.io.ligolw", false]], "pycbc.io.live": [[67, "module-pycbc.io.live", false]], "pycbc.io.record": [[67, "module-pycbc.io.record", false]], "pycbc.libutils": [[52, "module-pycbc.libutils", false]], "pycbc.live": [[68, "module-pycbc.live", false]], "pycbc.live.significance_fits": [[68, "module-pycbc.live.significance_fits", false]], "pycbc.live.snr_optimizer": [[68, "module-pycbc.live.snr_optimizer", false]], "pycbc.live.supervision": [[68, "module-pycbc.live.supervision", false]], "pycbc.mchirp_area": [[52, "module-pycbc.mchirp_area", false]], "pycbc.neutron_stars": [[69, "module-pycbc.neutron_stars", false]], "pycbc.neutron_stars.eos_utils": [[69, "module-pycbc.neutron_stars.eos_utils", false]], "pycbc.neutron_stars.pg_isso_solver": [[69, "module-pycbc.neutron_stars.pg_isso_solver", false]], "pycbc.noise": [[70, "module-pycbc.noise", false]], "pycbc.noise.gaussian": [[70, "module-pycbc.noise.gaussian", false]], "pycbc.noise.reproduceable": [[70, "module-pycbc.noise.reproduceable", false]], "pycbc.opt": [[52, "module-pycbc.opt", false]], "pycbc.pnutils": [[52, "module-pycbc.pnutils", false]], "pycbc.pool": [[52, "module-pycbc.pool", false]], "pycbc.population": [[71, "module-pycbc.population", false]], "pycbc.population.fgmc_functions": [[71, "module-pycbc.population.fgmc_functions", false]], "pycbc.population.fgmc_laguerre": [[71, "module-pycbc.population.fgmc_laguerre", false]], "pycbc.population.fgmc_plots": [[71, "module-pycbc.population.fgmc_plots", false]], "pycbc.population.live_pastro": [[71, "module-pycbc.population.live_pastro", false]], "pycbc.population.live_pastro_utils": [[71, "module-pycbc.population.live_pastro_utils", false]], "pycbc.population.population_models": [[71, "module-pycbc.population.population_models", false]], "pycbc.population.rates_functions": [[71, "module-pycbc.population.rates_functions", false]], "pycbc.population.scale_injections": [[71, "module-pycbc.population.scale_injections", false]], "pycbc.psd": [[72, "module-pycbc.psd", false]], "pycbc.psd.analytical": [[72, "module-pycbc.psd.analytical", false]], "pycbc.psd.analytical_space": [[72, "module-pycbc.psd.analytical_space", false]], "pycbc.psd.estimate": [[72, "module-pycbc.psd.estimate", false]], "pycbc.psd.read": [[72, "module-pycbc.psd.read", false]], "pycbc.psd.variation": [[72, "module-pycbc.psd.variation", false]], "pycbc.rate": [[52, "module-pycbc.rate", false]], "pycbc.results": [[73, "module-pycbc.results", false]], "pycbc.results.color": [[73, "module-pycbc.results.color", false]], "pycbc.results.dq": [[73, "module-pycbc.results.dq", false]], "pycbc.results.followup": [[73, "module-pycbc.results.followup", false]], "pycbc.results.layout": [[73, "module-pycbc.results.layout", false]], "pycbc.results.metadata": [[73, "module-pycbc.results.metadata", false]], "pycbc.results.mpld3_utils": [[73, "module-pycbc.results.mpld3_utils", false]], "pycbc.results.plot": [[73, "module-pycbc.results.plot", false]], "pycbc.results.psd": [[73, "module-pycbc.results.psd", false]], "pycbc.results.pygrb_plotting_utils": [[73, "module-pycbc.results.pygrb_plotting_utils", false]], "pycbc.results.pygrb_postprocessing_utils": [[73, "module-pycbc.results.pygrb_postprocessing_utils", false]], "pycbc.results.render": [[73, "module-pycbc.results.render", false]], "pycbc.results.scatter_histograms": [[73, "module-pycbc.results.scatter_histograms", false]], "pycbc.results.snr": [[73, "module-pycbc.results.snr", false]], "pycbc.results.str_utils": [[73, "module-pycbc.results.str_utils", false]], "pycbc.results.table_utils": [[73, "module-pycbc.results.table_utils", false]], "pycbc.results.versioning": [[73, "module-pycbc.results.versioning", false]], "pycbc.scheme": [[52, "module-pycbc.scheme", false]], "pycbc.sensitivity": [[52, "module-pycbc.sensitivity", false]], "pycbc.strain": [[74, "module-pycbc.strain", false]], "pycbc.strain.calibration": [[74, "module-pycbc.strain.calibration", false]], "pycbc.strain.gate": [[74, "module-pycbc.strain.gate", false]], "pycbc.strain.lines": [[74, "module-pycbc.strain.lines", false]], "pycbc.strain.recalibrate": [[74, "module-pycbc.strain.recalibrate", false]], "pycbc.strain.strain": [[74, "module-pycbc.strain.strain", false]], "pycbc.tmpltbank": [[75, "module-pycbc.tmpltbank", false]], "pycbc.tmpltbank.bank_conversions": [[75, "module-pycbc.tmpltbank.bank_conversions", false]], "pycbc.tmpltbank.bank_output_utils": [[75, "module-pycbc.tmpltbank.bank_output_utils", false]], "pycbc.tmpltbank.brute_force_methods": [[75, "module-pycbc.tmpltbank.brute_force_methods", false]], "pycbc.tmpltbank.calc_moments": [[75, "module-pycbc.tmpltbank.calc_moments", false]], "pycbc.tmpltbank.coord_utils": [[75, "module-pycbc.tmpltbank.coord_utils", false]], "pycbc.tmpltbank.lambda_mapping": [[75, "module-pycbc.tmpltbank.lambda_mapping", false]], "pycbc.tmpltbank.lattice_utils": [[75, "module-pycbc.tmpltbank.lattice_utils", false]], "pycbc.tmpltbank.option_utils": [[75, "module-pycbc.tmpltbank.option_utils", false]], "pycbc.tmpltbank.partitioned_bank": [[75, "module-pycbc.tmpltbank.partitioned_bank", false]], "pycbc.tmpltbank.sky_grid": [[75, "module-pycbc.tmpltbank.sky_grid", false]], "pycbc.transforms": [[52, "module-pycbc.transforms", false]], "pycbc.types": [[76, "module-pycbc.types", false]], "pycbc.types.aligned": [[76, "module-pycbc.types.aligned", false]], "pycbc.types.array": [[76, "module-pycbc.types.array", false]], "pycbc.types.array_cpu": [[76, "module-pycbc.types.array_cpu", false]], "pycbc.types.array_cupy": [[76, "module-pycbc.types.array_cupy", false]], "pycbc.types.config": [[76, "module-pycbc.types.config", false]], "pycbc.types.frequencyseries": [[76, "module-pycbc.types.frequencyseries", false]], "pycbc.types.optparse": [[76, "module-pycbc.types.optparse", false]], "pycbc.types.timeseries": [[76, "module-pycbc.types.timeseries", false]], "pycbc.version": [[52, "module-pycbc.version", false]], "pycbc.vetoes": [[77, "module-pycbc.vetoes", false]], "pycbc.vetoes.autochisq": [[77, "module-pycbc.vetoes.autochisq", false]], "pycbc.vetoes.bank_chisq": [[77, "module-pycbc.vetoes.bank_chisq", false]], "pycbc.vetoes.chisq": [[77, "module-pycbc.vetoes.chisq", false]], "pycbc.vetoes.chisq_cpu": [[77, "module-pycbc.vetoes.chisq_cpu", false]], "pycbc.vetoes.chisq_cupy": [[77, "module-pycbc.vetoes.chisq_cupy", false]], "pycbc.vetoes.sgchisq": [[77, "module-pycbc.vetoes.sgchisq", false]], "pycbc.waveform": [[78, "module-pycbc.waveform", false]], "pycbc.waveform.bank": [[78, "module-pycbc.waveform.bank", false]], "pycbc.waveform.compress": [[78, "module-pycbc.waveform.compress", false]], "pycbc.waveform.decompress_cpu": [[78, "module-pycbc.waveform.decompress_cpu", false]], "pycbc.waveform.decompress_cpu_cython": [[78, "module-pycbc.waveform.decompress_cpu_cython", false]], "pycbc.waveform.decompress_cupy": [[78, "module-pycbc.waveform.decompress_cupy", false]], "pycbc.waveform.generator": [[78, "module-pycbc.waveform.generator", false]], "pycbc.waveform.multiband": [[78, "module-pycbc.waveform.multiband", false]], "pycbc.waveform.nltides": [[78, "module-pycbc.waveform.nltides", false]], "pycbc.waveform.parameters": [[78, "module-pycbc.waveform.parameters", false]], "pycbc.waveform.plugin": [[78, "module-pycbc.waveform.plugin", false]], "pycbc.waveform.premerger": [[78, "module-pycbc.waveform.premerger", false]], "pycbc.waveform.ringdown": [[78, "module-pycbc.waveform.ringdown", false]], "pycbc.waveform.sinegauss": [[78, "module-pycbc.waveform.sinegauss", false]], "pycbc.waveform.spa_tmplt": [[78, "module-pycbc.waveform.spa_tmplt", false]], "pycbc.waveform.spa_tmplt_cpu": [[78, "module-pycbc.waveform.spa_tmplt_cpu", false]], "pycbc.waveform.spa_tmplt_cupy": [[78, "module-pycbc.waveform.spa_tmplt_cupy", false]], "pycbc.waveform.supernovae": [[78, "module-pycbc.waveform.supernovae", false]], "pycbc.waveform.utils": [[78, "module-pycbc.waveform.utils", false]], "pycbc.waveform.utils_cpu": [[78, "module-pycbc.waveform.utils_cpu", false]], "pycbc.waveform.utils_cupy": [[78, "module-pycbc.waveform.utils_cupy", false]], "pycbc.waveform.waveform": [[78, "module-pycbc.waveform.waveform", false]], "pycbc.waveform.waveform_modes": [[78, "module-pycbc.waveform.waveform_modes", false]], "pycbc.workflow": [[79, "module-pycbc.workflow", false]], "pycbc.workflow.coincidence": [[79, "module-pycbc.workflow.coincidence", false]], "pycbc.workflow.configparser_test": [[79, "module-pycbc.workflow.configparser_test", false]], "pycbc.workflow.configuration": [[79, "module-pycbc.workflow.configuration", false]], "pycbc.workflow.core": [[79, "module-pycbc.workflow.core", false]], "pycbc.workflow.datafind": [[79, "module-pycbc.workflow.datafind", false]], "pycbc.workflow.dq": [[79, "module-pycbc.workflow.dq", false]], "pycbc.workflow.grb_utils": [[79, "module-pycbc.workflow.grb_utils", false]], "pycbc.workflow.inference_followups": [[79, "module-pycbc.workflow.inference_followups", false]], "pycbc.workflow.injection": [[79, "module-pycbc.workflow.injection", false]], "pycbc.workflow.jobsetup": [[79, "module-pycbc.workflow.jobsetup", false]], "pycbc.workflow.matched_filter": [[79, "module-pycbc.workflow.matched_filter", false]], "pycbc.workflow.minifollowups": [[79, "module-pycbc.workflow.minifollowups", false]], "pycbc.workflow.pegasus_sites": [[79, "module-pycbc.workflow.pegasus_sites", false]], "pycbc.workflow.pegasus_workflow": [[79, "module-pycbc.workflow.pegasus_workflow", false]], "pycbc.workflow.plotting": [[79, "module-pycbc.workflow.plotting", false]], "pycbc.workflow.psd": [[79, "module-pycbc.workflow.psd", false]], "pycbc.workflow.psdfiles": [[79, "module-pycbc.workflow.psdfiles", false]], "pycbc.workflow.segment": [[79, "module-pycbc.workflow.segment", false]], "pycbc.workflow.splittable": [[79, "module-pycbc.workflow.splittable", false]], "pycbc.workflow.tmpltbank": [[79, "module-pycbc.workflow.tmpltbank", false]], "pycbc.workflow.versioning": [[79, "module-pycbc.workflow.versioning", false]], "pycbcaddstatmap (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCAddStatmap", false]], "pycbcbank2hdfexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable", false]], "pycbcbintemplatesdqexecutable (class in pycbc.workflow.dq)": [[79, "pycbc.workflow.dq.PyCBCBinTemplatesDQExecutable", false]], "pycbcbintriggerratesdqexecutable (class in pycbc.workflow.dq)": [[79, "pycbc.workflow.dq.PyCBCBinTriggerRatesDQExecutable", false]], "pycbccombinestatmap (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCCombineStatmap", false]], "pycbcconditionstrainexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable", false]], "pycbccreateinjectionsexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable", false]], "pycbcdistributebackgroundbins (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins", false]], "pycbcexcludezerolag (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCExcludeZerolag", false]], "pycbcfindcoincexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCFindCoincExecutable", false]], "pycbcfindsnglsexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCFindSnglsExecutable", false]], "pycbcfitbytemplateexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable", false]], "pycbcfitoverparamexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable", false]], "pycbcgrbinjfinderexecutable (class in pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.PycbcGrbInjFinderExecutable", false]], "pycbcgrbtrigclusterexecutable (class in pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigClusterExecutable", false]], "pycbcgrbtrigcombinerexecutable (class in pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.PycbcGrbTrigCombinerExecutable", false]], "pycbchdfinjfindexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable", false]], "pycbchdfsplitinjexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcHDFSplitInjExecutable", false]], "pycbcinferenceexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcInferenceExecutable", false]], "pycbcinspiralexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable", false]], "pycbcmergehdfexecutable (class in pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.PyCBCMergeHDFExecutable", false]], "pycbcmultiinspiralexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable", false]], "pycbcoptimalsnrexecutable (class in pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.PyCBCOptimalSNRExecutable", false]], "pycbcsnglsstatmapexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapExecutable", false]], "pycbcsnglsstatmapinjexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCSnglsStatMapInjExecutable", false]], "pycbcsplitbankexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankExecutable", false]], "pycbcsplitbankxmlexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable", false]], "pycbcsplitinspinjexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable", false]], "pycbcstatmapexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapExecutable", false]], "pycbcstatmapinjexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable", false]], "pycbctmpltbankexecutable (class in pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable", false]], "pycbctrig2hdfexecutable (class in pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable", false]], "pygrb_add_bestnr_cut_opt() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_add_bestnr_cut_opt", false]], "pygrb_add_bestnr_opts() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_add_bestnr_opts", false]], "pygrb_add_injmc_opts() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_add_injmc_opts", false]], "pygrb_add_null_snr_opts() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_add_null_snr_opts", false]], "pygrb_add_slide_opts() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_add_slide_opts", false]], "pygrb_initialize_plot_parser() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.pygrb_initialize_plot_parser", false]], "pygrb_plotter() (in module pycbc.results.pygrb_plotting_utils)": [[73, "pycbc.results.pygrb_plotting_utils.pygrb_plotter", false]], "q (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.q", false]], "q_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.q_from_mass1_mass2", false]], "qfromuniformmass1mass2 (class in pycbc.distributions.mass)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2", false]], "qnm_freq_decay() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.qnm_freq_decay", false]], "qnm_time_decay() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.qnm_time_decay", false]], "qplane() (in module pycbc.filter.qtransform)": [[59, "pycbc.filter.qtransform.qplane", false]], "qseries() (in module pycbc.filter.qtransform)": [[59, "pycbc.filter.qtransform.qseries", false]], "qtiling() (in module pycbc.filter.qtransform)": [[59, "pycbc.filter.qtransform.qtiling", false]], "qtransform() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.qtransform", false]], "quadraturesumstatistic (class in pycbc.events.stat)": [[57, "pycbc.events.stat.QuadratureSumStatistic", false]], "query_and_read_frame() (in module pycbc.frame.frame)": [[60, "pycbc.frame.frame.query_and_read_frame", false]], "query_cumulative_flags() (in module pycbc.dq)": [[52, "pycbc.dq.query_cumulative_flags", false]], "query_dqsegdb2() (in module pycbc.dq)": [[52, "pycbc.dq.query_dqsegdb2", false]], "query_flag() (in module pycbc.dq)": [[52, "pycbc.dq.query_flag", false]], "query_str() (in module pycbc.dq)": [[52, "pycbc.dq.query_str", false]], "random_string() (in module pycbc)": [[52, "pycbc.random_string", false]], "rank_stat_coinc() (pycbc.events.stat.expfitcombinedsnr method)": [[57, "pycbc.events.stat.ExpFitCombinedSNR.rank_stat_coinc", false]], "rank_stat_coinc() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.rank_stat_coinc", false]], "rank_stat_coinc() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.rank_stat_coinc", false]], "rank_stat_coinc() (pycbc.events.stat.quadraturesumstatistic method)": [[57, "pycbc.events.stat.QuadratureSumStatistic.rank_stat_coinc", false]], "rank_stat_coinc() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.rank_stat_coinc", false]], "rank_stat_single() (pycbc.events.stat.expfitcombinedsnr method)": [[57, "pycbc.events.stat.ExpFitCombinedSNR.rank_stat_single", false]], "rank_stat_single() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.rank_stat_single", false]], "rank_stat_single() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.rank_stat_single", false]], "rank_stat_single() (pycbc.events.stat.quadraturesumstatistic method)": [[57, "pycbc.events.stat.QuadratureSumStatistic.rank_stat_single", false]], "rank_stat_single() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.rank_stat_single", false]], "ras (pycbc.tmpltbank.sky_grid.skygrid property)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.ras", false]], "ratio() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.ratio", false]], "raw_acls (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.raw_acls", false]], "raw_acls (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.raw_acls", false]], "raw_acts (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.raw_acts", false]], "raw_acts (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.raw_acts", false]], "raw_samples_to_dict() (in module pycbc.inference.sampler.base_mcmc)": [[65, "pycbc.inference.sampler.base_mcmc.raw_samples_to_dict", false]], "rayleigh_fitalpha() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.rayleigh_fitalpha", false]], "rchisq (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.rchisq", false]], "read_acceptance_fraction() (pycbc.inference.io.emcee.emceefile method)": [[62, "pycbc.inference.io.emcee.EmceeFile.read_acceptance_fraction", false]], "read_acceptance_fraction() (pycbc.inference.io.emcee_pt.emceeptfile method)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.read_acceptance_fraction", false]], "read_acceptance_fraction() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.read_acceptance_fraction", false]], "read_acceptance_rate() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.read_acceptance_rate", false]], "read_acceptance_ratio() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.read_acceptance_ratio", false]], "read_betas() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.read_betas", false]], "read_betas_from_hdf() (in module pycbc.inference.sampler.base_multitemper)": [[65, "pycbc.inference.sampler.base_multitemper.read_betas_from_hdf", false]], "read_calibration_envelop_file() (in module pycbc.strain.recalibrate)": [[74, "pycbc.strain.recalibrate.read_calibration_envelop_file", false]], "read_config_file() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_config_file", false]], "read_constraints_from_config() (in module pycbc.distributions)": [[56, "pycbc.distributions.read_constraints_from_config", false]], "read_data() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_data", false]], "read_distributions_from_config() (in module pycbc.distributions)": [[56, "pycbc.distributions.read_distributions_from_config", false]], "read_ensemble_attrs() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.read_ensemble_attrs", false]], "read_frame() (in module pycbc.frame.frame)": [[60, "pycbc.frame.frame.read_frame", false]], "read_frame_gwosc() (in module pycbc.frame.gwosc)": [[60, "pycbc.frame.gwosc.read_frame_gwosc", false]], "read_from_config() (in module pycbc.inference.models)": [[64, "pycbc.inference.models.read_from_config", false]], "read_from_file() (pycbc.tmpltbank.sky_grid.skygrid class method)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.read_from_file", false]], "read_full_data() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.read_full_data", false]], "read_full_data_mchirp() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.read_full_data_mchirp", false]], "read_ini_file() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.read_ini_file", false]], "read_ini_file() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.read_ini_file", false]], "read_injections() (in module pycbc.population.scale_injections)": [[71, "pycbc.population.scale_injections.read_injections", false]], "read_injections() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_injections", false]], "read_model_from_config() (in module pycbc.strain)": [[74, "pycbc.strain.read_model_from_config", false]], "read_params_from_config() (in module pycbc.distributions)": [[56, "pycbc.distributions.read_params_from_config", false]], "read_pickled_data_from_checkpoint_file() (pycbc.inference.io.dynesty.commonnestedmetadataio method)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO.read_pickled_data_from_checkpoint_file", false]], "read_psds() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_psds", false]], "read_random_state() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_random_state", false]], "read_raw_samples() (in module pycbc.inference.io.base_multitemper)": [[62, "pycbc.inference.io.base_multitemper.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile method)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.dynesty.dynestyfile method)": [[62, "pycbc.inference.io.dynesty.DynestyFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.emcee.emceefile method)": [[62, "pycbc.inference.io.emcee.EmceeFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.emcee_pt.emceeptfile method)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.nessai.nessaifile method)": [[62, "pycbc.inference.io.nessai.NessaiFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.read_raw_samples", false]], "read_raw_samples() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.read_raw_samples", false]], "read_raw_samples_from_file() (in module pycbc.inference.io.posterior)": [[62, "pycbc.inference.io.posterior.read_raw_samples_from_file", false]], "read_samples() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.read_samples", false]], "read_sampling_params_from_config() (in module pycbc.inference.models.base)": [[64, "pycbc.inference.models.base.read_sampling_params_from_config", false]], "read_store() (in module pycbc.frame.store)": [[60, "pycbc.frame.store.read_store", false]], "read_strain_gwosc() (in module pycbc.frame.gwosc)": [[60, "pycbc.frame.gwosc.read_strain_gwosc", false]], "read_template_bank_param() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.read_template_bank_param", false]], "read_transforms_from_config() (in module pycbc.transforms)": [[52, "pycbc.transforms.read_transforms_from_config", false]], "readbytemplate (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.ReadByTemplate", false]], "real() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.real", false]], "real_same_precision_as() (in module pycbc.types.array)": [[76, "pycbc.types.array.real_same_precision_as", false]], "reassign_rate() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.reassign_rate", false]], "recalculate_psd() (pycbc.strain.strain.strainbuffer method)": [[74, "pycbc.strain.strain.StrainBuffer.recalculate_psd", false]], "recalibrate (class in pycbc.strain.calibration)": [[74, "pycbc.strain.calibration.Recalibrate", false]], "recalibrate (class in pycbc.strain.recalibrate)": [[74, "pycbc.strain.recalibrate.Recalibrate", false]], "reconstruct() (pycbc.inference.models.brute_marg.brutelisaskymodesmarginalize method)": [[64, "pycbc.inference.models.brute_marg.BruteLISASkyModesMarginalize.reconstruct", false]], "reconstruct() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.reconstruct", false]], "reconstruct() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.reconstruct", false]], "recursively_save_dict_contents_to_group() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.recursively_save_dict_contents_to_group", false]], "redshift() (in module pycbc.cosmology)": [[52, "pycbc.cosmology.redshift", false]], "redshift_estimation() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.redshift_estimation", false]], "redshift_from_comoving_volume() (in module pycbc.cosmology)": [[52, "pycbc.cosmology.redshift_from_comoving_volume", false]], "reduce_ticks() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.reduce_ticks", false]], "ref_snr (pycbc.inference.models.relbin.relativetime property)": [[64, "pycbc.inference.models.relbin.RelativeTime.ref_snr", false]], "refinesampler (class in pycbc.inference.sampler.refine)": [[65, "pycbc.inference.sampler.refine.RefineSampler", false]], "reflect() (pycbc.boundaries.reflectedbound method)": [[52, "pycbc.boundaries.ReflectedBound.reflect", false]], "reflect_left() (pycbc.boundaries.reflectedbound method)": [[52, "pycbc.boundaries.ReflectedBound.reflect_left", false]], "reflect_right() (pycbc.boundaries.reflectedbound method)": [[52, "pycbc.boundaries.ReflectedBound.reflect_right", false]], "reflect_well() (in module pycbc.boundaries)": [[52, "pycbc.boundaries.reflect_well", false]], "reflectedbound (class in pycbc.boundaries)": [[52, "pycbc.boundaries.ReflectedBound", false]], "refresh_statistic() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.refresh_statistic", false]], "refresh_statistic() (pycbc.events.single.livesingle method)": [[57, "pycbc.events.single.LiveSingle.refresh_statistic", false]], "register_clean_cuda() (in module pycbc.scheme)": [[52, "pycbc.scheme.register_clean_cuda", false]], "register_model() (in module pycbc.inference.models)": [[64, "pycbc.inference.models.register_model", false]], "regularize() (pycbc.bin_utils.binnedratios method)": [[52, "pycbc.bin_utils.BinnedRatios.regularize", false]], "relative (class in pycbc.inference.models.relbin)": [[64, "pycbc.inference.models.relbin.Relative", false]], "relativetime (class in pycbc.inference.models.relbin)": [[64, "pycbc.inference.models.relbin.RelativeTime", false]], "relativetimedom (class in pycbc.inference.models.relbin)": [[64, "pycbc.inference.models.relbin.RelativeTimeDom", false]], "remnant_mass (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.remnant_mass", false]], "remnant_mass_from_mass1_mass2_cartesian_spin_eos() (in module pycbc.conversions)": [[52, "pycbc.conversions.remnant_mass_from_mass1_mass2_cartesian_spin_eos", false]], "remnant_mass_from_mass1_mass2_spherical_spin_eos() (in module pycbc.conversions)": [[52, "pycbc.conversions.remnant_mass_from_mass1_mass2_spherical_spin_eos", false]], "remove() (pycbc.events.coinc.coincexpirebuffer method)": [[57, "pycbc.events.coinc.CoincExpireBuffer.remove", false]], "remove() (pycbc.io.hdf.dictarray method)": [[67, "pycbc.io.hdf.DictArray.remove", false]], "remove_common_offset() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.remove_common_offset", false]], "remove_short_sci_segs() (pycbc.workflow.core.segfile method)": [[79, "pycbc.workflow.core.SegFile.remove_short_sci_segs", false]], "render_default() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_default", false]], "render_glitchgram() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_glitchgram", false]], "render_ignore() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_ignore", false]], "render_text() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_text", false]], "render_tmplt() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_tmplt", false]], "render_workflow_html_template() (in module pycbc.results.render)": [[73, "pycbc.results.render.render_workflow_html_template", false]], "required_opts() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.required_opts", false]], "required_opts_list (pycbc.strain.strain.strainsegments attribute)": [[74, "pycbc.strain.strain.StrainSegments.required_opts_list", false]], "required_opts_multi_ifo() (in module pycbc.types.optparse)": [[76, "pycbc.types.optparse.required_opts_multi_ifo", false]], "required_parameters (pycbc.distributions.constraints.supernovaeconvexhull attribute)": [[56, "pycbc.distributions.constraints.SupernovaeConvexHull.required_parameters", false]], "required_params (pycbc.inject.inject.cbchdfinjectionset attribute)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.required_params", false]], "required_params (pycbc.inject.inject.incoherentfromfilehdfinjectionset attribute)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.required_params", false]], "required_params (pycbc.inject.inject.ringdownhdfinjectionset attribute)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.required_params", false]], "requirestr() (in module pycbc.workflow.plotting)": [[79, "pycbc.workflow.plotting.requirestr", false]], "rerank_coinc_followup() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.rerank_coinc_followup", false]], "resample() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.resample", false]], "resample_equal() (in module pycbc.inference.sampler.refine)": [[65, "pycbc.inference.sampler.refine.resample_equal", false]], "resample_to_delta_t() (in module pycbc.filter.resample)": [[59, "pycbc.filter.resample.resample_to_delta_t", false]], "reset_vector_params() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.reset_vector_params", false]], "resize() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.resize", false]], "resolve_file_url() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.resolve_file_url", false]], "resolve_td_option() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.resolve_td_option", false]], "resolve_td_options() (pycbc.workflow.core.node method)": [[79, "pycbc.workflow.core.Node.resolve_td_options", false]], "resolve_url() (in module pycbc.workflow.configuration)": [[79, "pycbc.workflow.configuration.resolve_url", false]], "resolve_url_http() (in module pycbc.workflow.configuration)": [[79, "pycbc.workflow.configuration.resolve_url_http", false]], "resolve_url_to_file() (in module pycbc.workflow.core)": [[79, "pycbc.workflow.core.resolve_url_to_file", false]], "resolve_urls() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.resolve_urls", false]], "restore_state() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator static method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.restore_state", false]], "restore_state() (pycbc.events.eventmgr.eventmanager static method)": [[57, "pycbc.events.eventmgr.EventManager.restore_state", false]], "results_from_cli() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.results_from_cli", false]], "resultsargumentparser (class in pycbc.inference.io)": [[62, "pycbc.inference.io.ResultsArgumentParser", false]], "resume_from_checkpoint() (pycbc.inference.sampler.base.basesampler method)": [[65, "pycbc.inference.sampler.base.BaseSampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.dummy.dummysampler method)": [[65, "pycbc.inference.sampler.dummy.DummySampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.snowline.snowlinesampler method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.resume_from_checkpoint", false]], "resume_from_checkpoint() (pycbc.inference.sampler.ultranest.ultranestsampler method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.resume_from_checkpoint", false]], "retrieve_waveform_plugins() (in module pycbc.waveform.plugin)": [[78, "pycbc.waveform.plugin.retrieve_waveform_plugins", false]], "return_empty_sngl() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.return_empty_sngl", false]], "return_nearest_cutoff() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.return_nearest_cutoff", false]], "return_search_summary() (in module pycbc.io.ligolw)": [[67, "pycbc.io.ligolw.return_search_summary", false]], "return_union_seglist() (pycbc.workflow.core.segfile method)": [[79, "pycbc.workflow.core.SegFile.return_union_seglist", false]], "returns (pycbc.vetoes.sgchisq.singledetsgchisq attribute)": [[77, "pycbc.vetoes.sgchisq.SingleDetSGChisq.returns", false]], "reweight_snr_by_null() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.reweight_snr_by_null", false]], "reweightedsnr_cut() (in module pycbc.events.coherent)": [[57, "pycbc.events.coherent.reweightedsnr_cut", false]], "rframe_generator (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.rframe_generator", false]], "rframe_generator (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.rframe_generator", false]], "rframe_generator (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.rframe_generator", false]], "rframe_generator (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.rframe_generator", false]], "rframe_generator (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.rframe_generator", false]], "ringdownhdfinjectionset (class in pycbc.inject.inject)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet", false]], "roll() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.roll", false]], "rotate_vector() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.rotate_vector", false]], "rotation_matrix_ssb_to_geo() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.rotation_matrix_ssb_to_geo", false]], "rotation_matrix_ssb_to_geo() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.rotation_matrix_ssb_to_geo", false]], "rotation_matrix_ssb_to_lisa() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.rotation_matrix_ssb_to_lisa", false]], "rotation_matrix_ssb_to_lisa() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.rotation_matrix_ssb_to_lisa", false]], "rough_time_estimate() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.rough_time_estimate", false]], "round_up() (pycbc.waveform.bank.livefilterbank method)": [[78, "pycbc.waveform.bank.LiveFilterBank.round_up", false]], "run() (pycbc.inference.sampler.base.basesampler method)": [[65, "pycbc.inference.sampler.base.BaseSampler.run", false]], "run() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.run", false]], "run() (pycbc.inference.sampler.dummy.dummysampler method)": [[65, "pycbc.inference.sampler.dummy.DummySampler.run", false]], "run() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.run", false]], "run() (pycbc.inference.sampler.games.gamesampler method)": [[65, "pycbc.inference.sampler.games.GameSampler.run", false]], "run() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.run", false]], "run() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.run", false]], "run() (pycbc.inference.sampler.refine.refinesampler method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.run", false]], "run() (pycbc.inference.sampler.snowline.snowlinesampler method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.run", false]], "run() (pycbc.inference.sampler.ultranest.ultranestsampler method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.run", false]], "run_and_error() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.run_and_error", false]], "run_datafind_instance() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.run_datafind_instance", false]], "run_end_time (pycbc.inference.io.base_sampler.basesamplerfile property)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.run_end_time", false]], "run_mcmc() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.run_mcmc", false]], "run_mcmc() (pycbc.inference.sampler.emcee.emceeensemblesampler method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.run_mcmc", false]], "run_mcmc() (pycbc.inference.sampler.emcee_pt.emceeptsampler method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.run_mcmc", false]], "run_mcmc() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.run_mcmc", false]], "run_mcmc() (pycbc.inference.sampler.ptemcee.ptemceesampler method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.run_mcmc", false]], "run_samples() (pycbc.inference.sampler.refine.refinesampler method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.run_samples", false]], "run_start_time (pycbc.inference.io.base_sampler.basesamplerfile property)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.run_start_time", false]], "rvs() (pycbc.distributions.arbitrary.arbitrary method)": [[56, "pycbc.distributions.arbitrary.Arbitrary.rvs", false]], "rvs() (pycbc.distributions.bounded.boundeddist method)": [[56, "pycbc.distributions.bounded.BoundedDist.rvs", false]], "rvs() (pycbc.distributions.external.external method)": [[56, "pycbc.distributions.external.External.rvs", false]], "rvs() (pycbc.distributions.fixedsamples.fixedsamples method)": [[56, "pycbc.distributions.fixedsamples.FixedSamples.rvs", false]], "rvs() (pycbc.distributions.joint.jointdistribution method)": [[56, "pycbc.distributions.joint.JointDistribution.rvs", false]], "rvs() (pycbc.distributions.mass.qfromuniformmass1mass2 method)": [[56, "pycbc.distributions.mass.QfromUniformMass1Mass2.rvs", false]], "rvs() (pycbc.distributions.qnm.uniformf0tau method)": [[56, "pycbc.distributions.qnm.UniformF0Tau.rvs", false]], "rvs() (pycbc.distributions.sky_location.fishersky method)": [[56, "pycbc.distributions.sky_location.FisherSky.rvs", false]], "rvs() (pycbc.distributions.sky_location.healpixsky method)": [[56, "pycbc.distributions.sky_location.HealpixSky.rvs", false]], "rvs() (pycbc.distributions.sky_location.uniformdisksky method)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.rvs", false]], "rvs() (pycbc.distributions.spins.independentchipchieff method)": [[56, "pycbc.distributions.spins.IndependentChiPChiEff.rvs", false]], "sample_frequencies (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.sample_frequencies", false]], "sample_points (pycbc.waveform.compress.compressedwaveform property)": [[78, "pycbc.waveform.compress.CompressedWaveform.sample_points", false]], "sample_rate (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.sample_rate", false]], "sample_rate (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.sample_rate", false]], "sample_rate_close() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.sample_rate_close", false]], "sample_round() (pycbc.inference.sampler.games.gamesampler method)": [[65, "pycbc.inference.sampler.games.GameSampler.sample_round", false]], "sample_rwalk_mod() (in module pycbc.inference.sampler.dynesty)": [[65, "pycbc.inference.sampler.dynesty.sample_rwalk_mod", false]], "sample_times (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.sample_times", false]], "sampler_group (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.sampler_group", false]], "samples (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.samples", false]], "samples (pycbc.inference.sampler.dummy.dummysampler property)": [[65, "pycbc.inference.sampler.dummy.DummySampler.samples", false]], "samples (pycbc.inference.sampler.dynesty.dynestysampler property)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.samples", false]], "samples (pycbc.inference.sampler.emcee.emceeensemblesampler property)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.samples", false]], "samples (pycbc.inference.sampler.emcee_pt.emceeptsampler property)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.samples", false]], "samples (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.samples", false]], "samples (pycbc.inference.sampler.multinest.multinestsampler property)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.samples", false]], "samples (pycbc.inference.sampler.nessai.nessaisampler property)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.samples", false]], "samples (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.samples", false]], "samples (pycbc.inference.sampler.snowline.snowlinesampler property)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.samples", false]], "samples (pycbc.inference.sampler.ultranest.ultranestsampler property)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.samples", false]], "samples_from_cli() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.samples_from_cli", false]], "samples_group (pycbc.inference.io.base_hdf.baseinferencefile attribute)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.samples_group", false]], "sampling_params (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.sampling_params", false]], "sampling_params (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.sampling_params", false]], "samplingtransforms (class in pycbc.inference.models.base)": [[64, "pycbc.inference.models.base.SamplingTransforms", false]], "sanitize_newline() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.sanitize_newline", false]], "sanity_check_subsections() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.sanity_check_subsections", false]], "sanity_check_subsections() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.sanity_check_subsections", false]], "save() (pycbc.io.gracedb.candidateforgracedb method)": [[67, "pycbc.io.gracedb.CandidateForGraceDB.save", false]], "save() (pycbc.io.hdf.dictarray method)": [[67, "pycbc.io.hdf.DictArray.save", false]], "save() (pycbc.io.hdf.statmapdata method)": [[67, "pycbc.io.hdf.StatmapData.save", false]], "save() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.save", false]], "save() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.save", false]], "save() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.save", false]], "save() (pycbc.workflow.core.workflow method)": [[79, "pycbc.workflow.core.Workflow.save", false]], "save() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.save", false]], "save_bkg_falloff() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.save_bkg_falloff", false]], "save_config() (pycbc.workflow.core.workflow method)": [[79, "pycbc.workflow.core.Workflow.save_config", false]], "save_dict_to_hdf5() (in module pycbc.io.hdf)": [[67, "pycbc.io.hdf.save_dict_to_hdf5", false]], "save_fig_with_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.save_fig_with_metadata", false]], "save_html_with_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.save_html_with_metadata", false]], "save_pdf_with_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.save_pdf_with_metadata", false]], "save_performance() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.save_performance", false]], "save_png_with_metadata() (in module pycbc.results.metadata)": [[73, "pycbc.results.metadata.save_png_with_metadata", false]], "save_state() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.save_state", false]], "save_state() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.save_state", false]], "save_to_wav() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.save_to_wav", false]], "save_veto_definer() (in module pycbc.workflow.segment)": [[79, "pycbc.workflow.segment.save_veto_definer", false]], "scale_factor (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.scale_factor", false]], "scheme (class in pycbc.scheme)": [[52, "pycbc.scheme.Scheme", false]], "schemed() (in module pycbc.scheme)": [[52, "pycbc.scheme.schemed", false]], "second_phase() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.second_phase", false]], "second_phase_cython() (in module pycbc.fft.fftw_pruned_cython)": [[58, "pycbc.fft.fftw_pruned_cython.second_phase_cython", false]], "secondary_mass (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.secondary_mass", false]], "secondary_mass() (in module pycbc.conversions)": [[52, "pycbc.conversions.secondary_mass", false]], "secondary_spin() (in module pycbc.conversions)": [[52, "pycbc.conversions.secondary_spin", false]], "secondary_xi() (in module pycbc.conversions)": [[52, "pycbc.conversions.secondary_xi", false]], "section_to_cli() (pycbc.workflow.configuration.workflowconfigparser method)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser.section_to_cli", false]], "sectionnumber (class in pycbc.results.layout)": [[73, "pycbc.results.layout.SectionNumber", false]], "seed (pycbc.inference.io.epsie.epsiefile property)": [[62, "pycbc.inference.io.epsie.EpsieFile.seed", false]], "seed (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.seed", false]], "segfile (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.SegFile", false]], "segment (pycbc.workflow.core.file property)": [[79, "pycbc.workflow.core.File.segment", false]], "segment_snrs() (in module pycbc.vetoes.bank_chisq)": [[77, "pycbc.vetoes.bank_chisq.segment_snrs", false]], "segments_to_start_end() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.segments_to_start_end", false]], "select() (pycbc.io.hdf.dictarray method)": [[67, "pycbc.io.hdf.DictArray.select", false]], "select() (pycbc.io.hdf.hfile method)": [[67, "pycbc.io.hdf.HFile.select", false]], "select_files_by_ifo_combination() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.select_files_by_ifo_combination", false]], "select_generic_executable() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.select_generic_executable", false]], "select_matchedfilter_class() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.select_matchedfilter_class", false]], "select_rframe_generator() (pycbc.waveform.generator.basefdomaindetframegenerator method)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.select_rframe_generator", false]], "select_rframe_generator() (pycbc.waveform.generator.fdomaindetframegenerator static method)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.select_rframe_generator", false]], "select_rframe_generator() (pycbc.waveform.generator.fdomaindetframemodesgenerator static method)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.select_rframe_generator", false]], "select_rframe_generator() (pycbc.waveform.generator.fdomaindetframetwopolgenerator static method)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.select_rframe_generator", false]], "select_rframe_generator() (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator static method)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.select_rframe_generator", false]], "select_rframe_generator() (pycbc.waveform.generator.fdomaindirectdetframegenerator static method)": [[78, "pycbc.waveform.generator.FDomainDirectDetFrameGenerator.select_rframe_generator", false]], "select_segments_by_definer() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.select_segments_by_definer", false]], "select_splitfilejob_instance() (in module pycbc.workflow.splittable)": [[79, "pycbc.workflow.splittable.select_splitfilejob_instance", false]], "select_tmpltbank_class() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.select_tmpltbank_class", false]], "select_waveform_generator() (in module pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.select_waveform_generator", false]], "select_waveform_modes_generator() (in module pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.select_waveform_modes_generator", false]], "semi_analytical_psd_lisa_confusion_noise() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.semi_analytical_psd_lisa_confusion_noise", false]], "sensitive_volume_factor() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.sensitive_volume_factor", false]], "sensitivity_curve_lisa_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_lisa_confusion", false]], "sensitivity_curve_lisa_scird() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_lisa_SciRD", false]], "sensitivity_curve_lisa_semi_analytical() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_lisa_semi_analytical", false]], "sensitivity_curve_taiji_analytical() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_taiji_analytical", false]], "sensitivity_curve_taiji_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_taiji_confusion", false]], "sensitivity_curve_tianqin_analytical() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_tianqin_analytical", false]], "sensitivity_curve_tianqin_confusion() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sensitivity_curve_tianqin_confusion", false]], "set_backend() (in module pycbc.fft.backend_cpu)": [[58, "pycbc.fft.backend_cpu.set_backend", false]], "set_backend() (in module pycbc.fft.backend_cupy)": [[58, "pycbc.fft.backend_cupy.set_backend", false]], "set_backend() (in module pycbc.fft.backend_mkl)": [[58, "pycbc.fft.backend_mkl.set_backend", false]], "set_backend() (in module pycbc.fft.backend_support)": [[58, "pycbc.fft.backend_support.set_backend", false]], "set_bandwidth() (pycbc.distributions.arbitrary.arbitrary method)": [[56, "pycbc.distributions.arbitrary.Arbitrary.set_bandwidth", false]], "set_burn_in() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_burn_in", false]], "set_burn_in_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_burn_in_from_config", false]], "set_category() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_category", false]], "set_data() (pycbc.filter.matchedfilter.livebatchmatchedfilter method)": [[59, "pycbc.filter.matchedfilter.LiveBatchMatchedFilter.set_data", false]], "set_epoch() (pycbc.waveform.generator.basefdomaindetframegenerator method)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.set_epoch", false]], "set_epoch() (pycbc.waveform.generator.fdomaindirectdetframegenerator method)": [[78, "pycbc.waveform.generator.FDomainDirectDetFrameGenerator.set_epoch", false]], "set_execution_site() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_execution_site", false]], "set_gmst_reference() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.set_gmst_reference", false]], "set_grb_start_end() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.set_grb_start_end", false]], "set_initial_conditions() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.set_initial_conditions", false]], "set_initial_conditions() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.set_initial_conditions", false]], "set_initial_conditions() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.set_initial_conditions", false]], "set_marginal_histogram_title() (in module pycbc.results.scatter_histograms)": [[73, "pycbc.results.scatter_histograms.set_marginal_histogram_title", false]], "set_measure_level() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.set_measure_level", false]], "set_memory() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_memory", false]], "set_num_cpus() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_num_cpus", false]], "set_num_retries() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_num_retries", false]], "set_p0() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_p0", false]], "set_p0() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.set_p0", false]], "set_planning_limit() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.set_planning_limit", false]], "set_priority() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_priority", false]], "set_psd_segments() (pycbc.inference.models.gaussian_noise.basegaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.set_psd_segments", false]], "set_ref_time() (pycbc.inject.inject.incoherentfromfilehdfinjectionset method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.set_ref_time", false]], "set_sim_data() (in module pycbc.inject.inject)": [[66, "pycbc.inject.inject.set_sim_data", false]], "set_singles_buffer() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.set_singles_buffer", false]], "set_start_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_start_from_config", false]], "set_start_from_config() (pycbc.inference.sampler.refine.refinesampler method)": [[65, "pycbc.inference.sampler.refine.RefineSampler.set_start_from_config", false]], "set_state_from_file() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.emcee.emceeensemblesampler method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.emcee_pt.emceeptsampler method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.set_state_from_file", false]], "set_state_from_file() (pycbc.inference.sampler.ptemcee.ptemceesampler method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.set_state_from_file", false]], "set_storage() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_storage", false]], "set_style_from_cli() (in module pycbc.results.plot)": [[73, "pycbc.results.plot.set_style_from_cli", false]], "set_subworkflow_properties() (pycbc.workflow.pegasus_workflow.subworkflow method)": [[79, "pycbc.workflow.pegasus_workflow.SubWorkflow.set_subworkflow_properties", false]], "set_target() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_target", false]], "set_target_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_target_from_config", false]], "set_template() (pycbc.io.hdf.readbytemplate method)": [[67, "pycbc.io.hdf.ReadByTemplate.set_template", false]], "set_thin_interval_from_config() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_thin_interval_from_config", false]], "set_threads_backend() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.set_threads_backend", false]], "set_universe() (pycbc.workflow.pegasus_workflow.profileshortcuts method)": [[79, "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_universe", false]], "setup_antenna() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.setup_antenna", false]], "setup_bins() (in module pycbc.inference.models.relbin)": [[64, "pycbc.inference.models.relbin.setup_bins", false]], "setup_calls() (in module pycbc.inference.sampler.base_cube)": [[65, "pycbc.inference.sampler.base_cube.setup_calls", false]], "setup_combine_statmap() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_combine_statmap", false]], "setup_datafind_from_pregenerated_lcf_files() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_from_pregenerated_lcf_files", false]], "setup_datafind_runtime_cache_multi_calls_perifo() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_runtime_cache_multi_calls_perifo", false]], "setup_datafind_runtime_cache_single_call_perifo() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_runtime_cache_single_call_perifo", false]], "setup_datafind_runtime_frames_multi_calls_perifo() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_runtime_frames_multi_calls_perifo", false]], "setup_datafind_runtime_frames_single_call_perifo() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_runtime_frames_single_call_perifo", false]], "setup_datafind_workflow() (in module pycbc.workflow.datafind)": [[79, "pycbc.workflow.datafind.setup_datafind_workflow", false]], "setup_distance_marg_interpolant() (in module pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.setup_distance_marg_interpolant", false]], "setup_dq_reranking() (in module pycbc.workflow.dq)": [[79, "pycbc.workflow.dq.setup_dq_reranking", false]], "setup_exclude_zerolag() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_exclude_zerolag", false]], "setup_foreground_minifollowups() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.setup_foreground_minifollowups", false]], "setup_injection_minifollowups() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.setup_injection_minifollowups", false]], "setup_injection_workflow() (in module pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.setup_injection_workflow", false]], "setup_interval_coinc() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_interval_coinc", false]], "setup_interval_coinc_inj() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_interval_coinc_inj", false]], "setup_marginalization() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.setup_marginalization", false]], "setup_matchedfltr_dax_generated() (in module pycbc.workflow.matched_filter)": [[79, "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated", false]], "setup_matchedfltr_dax_generated_multi() (in module pycbc.workflow.matched_filter)": [[79, "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated_multi", false]], "setup_matchedfltr_workflow() (in module pycbc.workflow.matched_filter)": [[79, "pycbc.workflow.matched_filter.setup_matchedfltr_workflow", false]], "setup_output() (in module pycbc.inference.sampler.base)": [[65, "pycbc.inference.sampler.base.setup_output", false]], "setup_output() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.setup_output", false]], "setup_peak_lock() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.setup_peak_lock", false]], "setup_psd_calculate() (in module pycbc.workflow.psd)": [[79, "pycbc.workflow.psd.setup_psd_calculate", false]], "setup_psd_pregenerated() (in module pycbc.workflow.psdfiles)": [[79, "pycbc.workflow.psdfiles.setup_psd_pregenerated", false]], "setup_psd_workflow() (in module pycbc.workflow.psdfiles)": [[79, "pycbc.workflow.psdfiles.setup_psd_workflow", false]], "setup_pygrb_minifollowups() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.setup_pygrb_minifollowups", false]], "setup_pygrb_pp_workflow() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.setup_pygrb_pp_workflow", false]], "setup_pygrb_results_workflow() (in module pycbc.workflow.grb_utils)": [[79, "pycbc.workflow.grb_utils.setup_pygrb_results_workflow", false]], "setup_segments() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.setup_segments", false]], "setup_single_det_minifollowups() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.setup_single_det_minifollowups", false]], "setup_sngls() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_sngls", false]], "setup_sngls_inj() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_sngls_inj", false]], "setup_sngls_statmap() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_sngls_statmap", false]], "setup_sngls_statmap_inj() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_sngls_statmap_inj", false]], "setup_splittable_dax_generated() (in module pycbc.workflow.splittable)": [[79, "pycbc.workflow.splittable.setup_splittable_dax_generated", false]], "setup_splittable_workflow() (in module pycbc.workflow.splittable)": [[79, "pycbc.workflow.splittable.setup_splittable_workflow", false]], "setup_statmap() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_statmap", false]], "setup_statmap_inj() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_statmap_inj", false]], "setup_template_render() (in module pycbc.results.render)": [[73, "pycbc.results.render.setup_template_render", false]], "setup_tmpltbank_dax_generated() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.setup_tmpltbank_dax_generated", false]], "setup_tmpltbank_pregenerated() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.setup_tmpltbank_pregenerated", false]], "setup_tmpltbank_without_frames() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.setup_tmpltbank_without_frames", false]], "setup_tmpltbank_workflow() (in module pycbc.workflow.tmpltbank)": [[79, "pycbc.workflow.tmpltbank.setup_tmpltbank_workflow", false]], "setup_trigger_fitting() (in module pycbc.workflow.coincidence)": [[79, "pycbc.workflow.coincidence.setup_trigger_fitting", false]], "setup_upload_prep_minifollowups() (in module pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.setup_upload_prep_minifollowups", false]], "sfr_grb_2008() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.sfr_grb_2008", false]], "sfr_madau_dickinson_2014() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.sfr_madau_dickinson_2014", false]], "sfr_madau_fragos_2017() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.sfr_madau_fragos_2017", false]], "sgburst_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.sgburst_approximants", false]], "sgburstinjectionset (class in pycbc.inject.inject)": [[66, "pycbc.inject.inject.SGBurstInjectionSet", false]], "sgchisq (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.sgchisq", false]], "sh_transformed_psd_lisa_tdi_xyz() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.sh_transformed_psd_lisa_tdi_XYZ", false]], "shape (pycbc.types.array.array property)": [[76, "pycbc.types.array.Array.shape", false]], "shift_sum() (in module pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.shift_sum", false]], "shift_sum() (in module pycbc.vetoes.chisq_cpu)": [[77, "pycbc.vetoes.chisq_cpu.shift_sum", false]], "shift_sum() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.shift_sum", false]], "shift_sum_points() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.shift_sum_points", false]], "shift_sum_points_pow2() (in module pycbc.vetoes.chisq_cupy)": [[77, "pycbc.vetoes.chisq_cupy.shift_sum_points_pow2", false]], "sigma() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.sigma", false]], "sigma_cached() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.sigma_cached", false]], "sigma_multiple_cut_thresh() (in module pycbc.events.cuts)": [[57, "pycbc.events.cuts.sigma_multiple_cut_thresh", false]], "sigmasq() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.sigmasq", false]], "sigmasq_series() (in module pycbc.filter.matchedfilter)": [[59, "pycbc.filter.matchedfilter.sigmasq_series", false]], "signal_pdf_from_snr() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.signal_pdf_from_snr", false]], "signal_rate_rescale() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.signal_rate_rescale", false]], "signal_rate_trig_type() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.signal_rate_trig_type", false]], "signaleventrate (class in pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.SignalEventRate", false]], "sinangle (class in pycbc.distributions.angular)": [[56, "pycbc.distributions.angular.SinAngle", false]], "single() (pycbc.events.stat.expfitcombinedsnr method)": [[57, "pycbc.events.stat.ExpFitCombinedSNR.single", false]], "single() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.single", false]], "single() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.single", false]], "single() (pycbc.events.stat.quadraturesumstatistic method)": [[57, "pycbc.events.stat.QuadratureSumStatistic.single", false]], "single() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.single", false]], "single_arm_frequency_response() (in module pycbc.detector.ground)": [[55, "pycbc.detector.ground.single_arm_frequency_response", false]], "single_layout() (in module pycbc.results.layout)": [[73, "pycbc.results.layout.single_layout", false]], "singledetautochisq (class in pycbc.vetoes.autochisq)": [[77, "pycbc.vetoes.autochisq.SingleDetAutoChisq", false]], "singledetbankveto (class in pycbc.vetoes.bank_chisq)": [[77, "pycbc.vetoes.bank_chisq.SingleDetBankVeto", false]], "singledetpowerchisq (class in pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.SingleDetPowerChisq", false]], "singledetsgchisq (class in pycbc.vetoes.sgchisq)": [[77, "pycbc.vetoes.sgchisq.SingleDetSGChisq", false]], "singledetskymaxautochisq (class in pycbc.vetoes.autochisq)": [[77, "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq", false]], "singledetskymaxbankveto (class in pycbc.vetoes.bank_chisq)": [[77, "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto", false]], "singledetskymaxpowerchisq (class in pycbc.vetoes.chisq)": [[77, "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq", false]], "singledettriggers (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.SingleDetTriggers", false]], "singlepool (class in pycbc.pool)": [[52, "pycbc.pool.SinglePool", false]], "singletemplate (class in pycbc.inference.models.single_template)": [[64, "pycbc.inference.models.single_template.SingleTemplate", false]], "singletemplateexecutable (class in pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.SingleTemplateExecutable", false]], "singletimefreqexecutable (class in pycbc.workflow.minifollowups)": [[79, "pycbc.workflow.minifollowups.SingleTimeFreqExecutable", false]], "sites (pycbc.workflow.core.workflow property)": [[79, "pycbc.workflow.core.Workflow.sites", false]], "skew_lognormal_samples() (in module pycbc.population.rates_functions)": [[71, "pycbc.population.rates_functions.skew_lognormal_samples", false]], "sky_coords (pycbc.detector.space.spacedetector property)": [[55, "pycbc.detector.space.SpaceDetector.sky_coords", false]], "skygrid (class in pycbc.tmpltbank.sky_grid)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid", false]], "slice_and_taper() (pycbc.inject.inject.incoherentfromfilehdfinjectionset static method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.slice_and_taper", false]], "slide_opts_helper() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.slide_opts_helper", false]], "smaller() (pycbc.boundaries.closedbound method)": [[52, "pycbc.boundaries.ClosedBound.smaller", false]], "smaller() (pycbc.boundaries.openbound method)": [[52, "pycbc.boundaries.OpenBound.smaller", false]], "sngl_ifo_job_setup() (in module pycbc.workflow.jobsetup)": [[79, "pycbc.workflow.jobsetup.sngl_ifo_job_setup", false]], "snowlinefile (class in pycbc.inference.io.snowline)": [[62, "pycbc.inference.io.snowline.SnowlineFile", false]], "snowlinesampler (class in pycbc.inference.sampler.snowline)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler", false]], "snr (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.snr", false]], "snr_draw() (pycbc.inference.models.tools.distmarg method)": [[64, "pycbc.inference.models.tools.DistMarg.snr_draw", false]], "snr_from_loglr() (in module pycbc.conversions)": [[52, "pycbc.conversions.snr_from_loglr", false]], "snr_predictor() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.snr_predictor", false]], "snr_predictor_dom() (in module pycbc.inference.models.relbin_cpu)": [[64, "pycbc.inference.models.relbin_cpu.snr_predictor_dom", false]], "solar_mass_to_kg() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.solar_mass_to_kg", false]], "sort() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.sort", false]], "sort_arr (pycbc.io.hdf.foregroundtriggers property)": [[67, "pycbc.io.hdf.ForegroundTriggers.sort_arr", false]], "sort_stat() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.sort_stat", false]], "sort_trigs() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.sort_trigs", false]], "source_color() (in module pycbc.results.color)": [[73, "pycbc.results.color.source_color", false]], "spa_amplitude_factor() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_amplitude_factor", false]], "spa_compression() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.spa_compression", false]], "spa_distance() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_distance", false]], "spa_length_in_time() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_length_in_time", false]], "spa_tmplt() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_tmplt", false]], "spa_tmplt_end() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_tmplt_end", false]], "spa_tmplt_engine() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_tmplt_engine", false]], "spa_tmplt_engine() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.spa_tmplt_engine", false]], "spa_tmplt_engine() (in module pycbc.waveform.spa_tmplt_cupy)": [[78, "pycbc.waveform.spa_tmplt_cupy.spa_tmplt_engine", false]], "spa_tmplt_inline_sequence() (in module pycbc.waveform.spa_tmplt_cpu)": [[78, "pycbc.waveform.spa_tmplt_cpu.spa_tmplt_inline_sequence", false]], "spa_tmplt_norm() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_tmplt_norm", false]], "spa_tmplt_precondition() (in module pycbc.waveform.spa_tmplt)": [[78, "pycbc.waveform.spa_tmplt.spa_tmplt_precondition", false]], "spacedetector (class in pycbc.detector.space)": [[55, "pycbc.detector.space.SpaceDetector", false]], "spher_harms() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.spher_harms", false]], "spherical_to_cartesian() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.spherical_to_cartesian", false]], "spherical_to_cartesian() (in module pycbc.coordinates.base)": [[54, "pycbc.coordinates.base.spherical_to_cartesian", false]], "sphericalspin1tocartesianspin1 (class in pycbc.transforms)": [[52, "pycbc.transforms.SphericalSpin1ToCartesianSpin1", false]], "sphericalspin2tocartesianspin2 (class in pycbc.transforms)": [[52, "pycbc.transforms.SphericalSpin2ToCartesianSpin2", false]], "sphericaltocartesian (class in pycbc.transforms)": [[52, "pycbc.transforms.SphericalToCartesian", false]], "spin1_a (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin1_a", false]], "spin1_azimuthal (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin1_azimuthal", false]], "spin1_polar (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin1_polar", false]], "spin1x (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin1x", false]], "spin1x_from_xi1_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin1x_from_xi1_phi_a_phi_s", false]], "spin1y (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin1y", false]], "spin1y_from_xi1_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin1y_from_xi1_phi_a_phi_s", false]], "spin1z (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin1z", false]], "spin1z_from_mass1_mass2_chi_eff_chi_a() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin1z_from_mass1_mass2_chi_eff_chi_a", false]], "spin2_a (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin2_a", false]], "spin2_azimuthal (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin2_azimuthal", false]], "spin2_polar (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin2_polar", false]], "spin2x (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin2x", false]], "spin2x_from_mass1_mass2_xi2_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin2x_from_mass1_mass2_xi2_phi_a_phi_s", false]], "spin2y (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin2y", false]], "spin2y_from_mass1_mass2_xi2_phi_a_phi_s() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin2y_from_mass1_mass2_xi2_phi_a_phi_s", false]], "spin2z (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.spin2z", false]], "spin2z_from_mass1_mass2_chi_eff_chi_a() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin2z_from_mass1_mass2_chi_eff_chi_a", false]], "spin_from_pulsar_freq() (in module pycbc.conversions)": [[52, "pycbc.conversions.spin_from_pulsar_freq", false]], "spin_px (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_px", false]], "spin_py (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_py", false]], "spin_pz (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_pz", false]], "spin_sx (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_sx", false]], "spin_sy (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_sy", false]], "spin_sz (pycbc.io.record.waveformarray property)": [[67, "pycbc.io.record.WaveformArray.spin_sz", false]], "splay() (in module pycbc.fft.fftw_pruned)": [[58, "pycbc.fft.fftw_pruned.splay", false]], "split_multi_sections() (in module pycbc.workflow.configparser_test)": [[79, "pycbc.workflow.configparser_test.split_multi_sections", false]], "split_multi_sections() (pycbc.types.config.interpolatingconfigparser method)": [[76, "pycbc.types.config.InterpolatingConfigParser.split_multi_sections", false]], "squared_norm() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.squared_norm", false]], "squared_norm() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.squared_norm", false]], "squared_norm() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.squared_norm", false]], "src_mass_from_z_det_mass() (in module pycbc.mchirp_area)": [[52, "pycbc.mchirp_area.src_mass_from_z_det_mass", false]], "ssb_to_geo() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.ssb_to_geo", false]], "ssb_to_geo() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.ssb_to_geo", false]], "ssb_to_lisa() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.ssb_to_lisa", false]], "ssb_to_lisa() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.ssb_to_lisa", false]], "ssbtogeo (class in pycbc.transforms)": [[52, "pycbc.transforms.SSBToGEO", false]], "ssbtolisa (class in pycbc.transforms)": [[52, "pycbc.transforms.SSBToLISA", false]], "stack_xi_direction_brute() (in module pycbc.tmpltbank.brute_force_methods)": [[75, "pycbc.tmpltbank.brute_force_methods.stack_xi_direction_brute", false]], "staging_site (pycbc.workflow.core.workflow property)": [[79, "pycbc.workflow.core.Workflow.staging_site", false]], "staging_site_str (pycbc.workflow.core.workflow property)": [[79, "pycbc.workflow.core.Workflow.staging_site_str", false]], "start_end_from_segments() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.start_end_from_segments", false]], "start_end_to_segments() (in module pycbc.events.veto)": [[57, "pycbc.events.veto.start_end_to_segments", false]], "start_refresh_thread() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.start_refresh_thread", false]], "start_refresh_thread() (pycbc.events.single.livesingle method)": [[57, "pycbc.events.single.LiveSingle.start_refresh_thread", false]], "start_time (pycbc.strain.strain.strainbuffer property)": [[74, "pycbc.strain.strain.StrainBuffer.start_time", false]], "start_time (pycbc.types.frequencyseries.frequencyseries property)": [[76, "pycbc.types.frequencyseries.FrequencySeries.start_time", false]], "start_time (pycbc.types.timeseries.timeseries property)": [[76, "pycbc.types.timeseries.TimeSeries.start_time", false]], "startcolumn() (pycbc.io.ligolw.ligolwcontenthandler method)": [[67, "pycbc.io.ligolw.LIGOLWContentHandler.startColumn", false]], "starting_betas (pycbc.inference.io.ptemcee.ptemceefile property)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.starting_betas", false]], "starting_betas (pycbc.inference.sampler.ptemcee.ptemceesampler property)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.starting_betas", false]], "startstream() (pycbc.io.ligolw.ligolwcontenthandler method)": [[67, "pycbc.io.ligolw.LIGOLWContentHandler.startStream", false]], "stat (class in pycbc.events.stat)": [[57, "pycbc.events.stat.Stat", false]], "static_args (pycbc.waveform.generator.basefdomaindetframegenerator property)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.static_args", false]], "static_args (pycbc.waveform.generator.basegenerator property)": [[78, "pycbc.waveform.generator.BaseGenerator.static_args", false]], "static_params (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.static_params", false]], "static_params (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.static_params", false]], "static_params (pycbc.inference.models.hierarchical.hierarchicalmodel property)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.static_params", false]], "static_params (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.static_params", false]], "static_table() (in module pycbc.results.table_utils)": [[73, "pycbc.results.table_utils.static_table", false]], "statmapdata (class in pycbc.io.hdf)": [[67, "pycbc.io.hdf.StatmapData", false]], "statnames (pycbc.inference.models.base.modelstats property)": [[64, "pycbc.inference.models.base.ModelStats.statnames", false]], "statusbuffer (class in pycbc.frame.frame)": [[60, "pycbc.frame.frame.StatusBuffer", false]], "stepping_stone_algorithm() (in module pycbc.inference.evidence)": [[61, "pycbc.inference.evidence.stepping_stone_algorithm", false]], "str_to_bool() (in module pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.str_to_bool", false]], "str_to_tuple() (in module pycbc.inference.models.tools)": [[64, "pycbc.inference.models.tools.str_to_tuple", false]], "strain() (pycbc.catalog.merger method)": [[53, "pycbc.catalog.Merger.strain", false]], "strain_from_cli_multi_ifos() (in module pycbc.inference.models.data_utils)": [[64, "pycbc.inference.models.data_utils.strain_from_cli_multi_ifos", false]], "strainbuffer (class in pycbc.strain.strain)": [[74, "pycbc.strain.strain.StrainBuffer", false]], "strainsegments (class in pycbc.strain.strain)": [[74, "pycbc.strain.strain.StrainSegments", false]], "subname (pycbc.inference.models.hierarchical.hierarchicalparam attribute)": [[64, "pycbc.inference.models.hierarchical.HierarchicalParam.subname", false]], "subworkflow (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.SubWorkflow", false]], "sum() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.sum", false]], "sum() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.sum", false]], "sum() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.sum", false]], "sum_modes() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.sum_modes", false]], "summary_product() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.summary_product", false]], "supernovaeconvexhull (class in pycbc.distributions.constraints)": [[56, "pycbc.distributions.constraints.SupernovaeConvexHull", false]], "supported_approximants() (pycbc.inject.inject.cbchdfinjectionset static method)": [[66, "pycbc.inject.inject.CBCHDFInjectionSet.supported_approximants", false]], "supported_approximants() (pycbc.inject.inject.incoherentfromfilehdfinjectionset static method)": [[66, "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet.supported_approximants", false]], "supported_approximants() (pycbc.inject.inject.ringdownhdfinjectionset static method)": [[66, "pycbc.inject.inject.RingdownHDFInjectionSet.supported_approximants", false]], "swap_interval (pycbc.inference.io.epsie.epsiefile property)": [[62, "pycbc.inference.io.epsie.EpsieFile.swap_interval", false]], "swap_interval (pycbc.inference.sampler.epsie.epsiesampler property)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.swap_interval", false]], "symlink() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.symlink", false]], "t2_cutoff_frequency() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.t2_cutoff_frequency", false]], "t2_cutoff_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.t2_cutoff_velocity", false]], "t4_cutoff_velocity() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.t4_cutoff_velocity", false]], "t_geo_from_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.t_geo_from_ssb", false]], "t_geo_from_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.t_geo_from_ssb", false]], "t_lisa_from_ssb() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.t_lisa_from_ssb", false]], "t_lisa_from_ssb() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.t_lisa_from_ssb", false]], "t_ssb_from_t_geo() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.t_ssb_from_t_geo", false]], "t_ssb_from_t_geo() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.t_ssb_from_t_geo", false]], "t_ssb_from_t_lisa() (in module pycbc.coordinates)": [[54, "pycbc.coordinates.t_ssb_from_t_lisa", false]], "t_ssb_from_t_lisa() (in module pycbc.coordinates.space)": [[54, "pycbc.coordinates.space.t_ssb_from_t_lisa", false]], "table (pycbc.inject.inject.injectionset attribute)": [[66, "pycbc.inject.inject.InjectionSet.table", false]], "table (pycbc.inject.inject.sgburstinjectionset attribute)": [[66, "pycbc.inject.inject.SGBurstInjectionSet.table", false]], "table (pycbc.waveform.bank.templatebank attribute)": [[78, "pycbc.waveform.bank.TemplateBank.table", false]], "taiji_psd_components() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.taiji_psd_components", false]], "tail_threshold() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.tail_threshold", false]], "take() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.take", false]], "take() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.take", false]], "take() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.take", false]], "tama() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.TAMA", false]], "taper_timeseries() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.taper_timeseries", false]], "target_eff_nsamples (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.target_eff_nsamples", false]], "target_niterations (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.target_niterations", false]], "tau0_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau0_from_mass1_mass2", false]], "tau0_from_mchirp() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau0_from_mchirp", false]], "tau0_from_mtotal_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau0_from_mtotal_eta", false]], "tau0_tau3_to_mass1_mass2() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.tau0_tau3_to_mass1_mass2", false]], "tau0_tau3_to_mtotal_eta() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.tau0_tau3_to_mtotal_eta", false]], "tau3_from_mass1_mass2() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau3_from_mass1_mass2", false]], "tau3_from_mtotal_eta() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau3_from_mtotal_eta", false]], "tau_from_final_mass_spin() (in module pycbc.conversions)": [[52, "pycbc.conversions.tau_from_final_mass_spin", false]], "taulmn_from_other_lmn() (in module pycbc.conversions)": [[52, "pycbc.conversions.taulmn_from_other_lmn", false]], "td_approximants() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.td_approximants", false]], "td_damped_sinusoid() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.td_damped_sinusoid", false]], "td_data (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian property)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.td_data", false]], "td_output_vector() (in module pycbc.waveform.ringdown)": [[78, "pycbc.waveform.ringdown.td_output_vector", false]], "td_taper() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.td_taper", false]], "td_waveform_mode_approximants() (in module pycbc.waveform.waveform_modes)": [[78, "pycbc.waveform.waveform_modes.td_waveform_mode_approximants", false]], "td_waveform_to_fd_waveform() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.td_waveform_to_fd_waveform", false]], "tdomaincbcgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.TDomainCBCGenerator", false]], "tdomaincbcmodesgenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.TDomainCBCModesGenerator", false]], "tdomainfreqtauringdowngenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.TDomainFreqTauRingdownGenerator", false]], "tdomainmassspinringdowngenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.TDomainMassSpinRingdownGenerator", false]], "tdomainsupernovaegenerator (class in pycbc.waveform.generator)": [[78, "pycbc.waveform.generator.TDomainSupernovaeGenerator", false]], "template_duration (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.template_duration", false]], "template_hash_to_id() (in module pycbc.results.pygrb_postprocessing_utils)": [[73, "pycbc.results.pygrb_postprocessing_utils.template_hash_to_id", false]], "template_id (pycbc.io.hdf.foregroundtriggers property)": [[67, "pycbc.io.hdf.ForegroundTriggers.template_id", false]], "template_id (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.template_id", false]], "template_overlaps() (in module pycbc.vetoes.bank_chisq)": [[77, "pycbc.vetoes.bank_chisq.template_overlaps", false]], "template_param_bin_pa() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.template_param_bin_pa", false]], "template_param_bin_types_farlim_pa() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.template_param_bin_types_farlim_pa", false]], "template_param_bin_types_pa() (in module pycbc.population.live_pastro)": [[71, "pycbc.population.live_pastro.template_param_bin_types_pa", false]], "template_segment_checker() (pycbc.inject.injfilterrejector.injfilterrejector method)": [[66, "pycbc.inject.injfilterrejector.InjFilterRejector.template_segment_checker", false]], "template_thinning() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.template_thinning", false]], "templatebank (class in pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.TemplateBank", false]], "test_point_dist() (in module pycbc.tmpltbank.coord_utils)": [[75, "pycbc.tmpltbank.coord_utils.test_point_dist", false]], "test_point_distance() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.test_point_distance", false]], "test_point_distance_vary() (pycbc.tmpltbank.partitioned_bank.partitionedtmpltbank method)": [[75, "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.test_point_distance_vary", false]], "testeggbox (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestEggbox", false]], "testnormal (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestNormal", false]], "testposterior (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestPosterior", false]], "testprior (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestPrior", false]], "testrosenbrock (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestRosenbrock", false]], "testvolcano (class in pycbc.inference.models.analytic)": [[64, "pycbc.inference.models.analytic.TestVolcano", false]], "tf_from_file() (pycbc.strain.recalibrate.physicalmodel class method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.tf_from_file", false]], "thermodynamic_integration() (in module pycbc.inference.evidence)": [[61, "pycbc.inference.evidence.thermodynamic_integration", false]], "thin() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.thin", false]], "thin() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.thin", false]], "thin_end (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_end", false]], "thin_interval (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_interval", false]], "thin_interval (pycbc.inference.io.base_mcmc.ensemblemcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.EnsembleMCMCMetadataIO.thin_interval", false]], "thin_interval (pycbc.inference.io.base_mcmc.mcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.MCMCMetadataIO.thin_interval", false]], "thin_interval (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.thin_interval", false]], "thin_safety_factor (pycbc.inference.sampler.base_mcmc.basemcmc property)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.thin_safety_factor", false]], "thin_samples_for_writing() (in module pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.thin_samples_for_writing", false]], "thin_start (pycbc.inference.io.base_hdf.baseinferencefile property)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_start", false]], "thin_start (pycbc.inference.io.base_mcmc.ensemblemcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.EnsembleMCMCMetadataIO.thin_start", false]], "thin_start (pycbc.inference.io.base_mcmc.mcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.MCMCMetadataIO.thin_start", false]], "thinned_by (pycbc.inference.io.base_mcmc.commonmcmcmetadataio property)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.thinned_by", false]], "threshold() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.threshold", false]], "threshold() (in module pycbc.events.threshold_cpu)": [[57, "pycbc.events.threshold_cpu.threshold", false]], "threshold_and_cluster() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.threshold_and_cluster", false]], "threshold_and_cluster() (in module pycbc.events.threshold_cupy)": [[57, "pycbc.events.threshold_cupy.threshold_and_cluster", false]], "threshold_and_cluster() (pycbc.events.threshold_cpu.cputhresholdcluster method)": [[57, "pycbc.events.threshold_cpu.CPUThresholdCluster.threshold_and_cluster", false]], "threshold_and_cluster() (pycbc.events.threshold_cupy.cudathresholdcluster method)": [[57, "pycbc.events.threshold_cupy.CUDAThresholdCluster.threshold_and_cluster", false]], "threshold_inline() (in module pycbc.events.threshold_cpu)": [[57, "pycbc.events.threshold_cpu.threshold_inline", false]], "threshold_numpy() (in module pycbc.events.threshold_cpu)": [[57, "pycbc.events.threshold_cpu.threshold_numpy", false]], "threshold_only() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.threshold_only", false]], "threshold_only() (in module pycbc.events.threshold_cpu)": [[57, "pycbc.events.threshold_cpu.threshold_only", false]], "threshold_real_numpy() (in module pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.threshold_real_numpy", false]], "thresholdcluster (class in pycbc.events.eventmgr)": [[57, "pycbc.events.eventmgr.ThresholdCluster", false]], "tianqin_psd_components() (in module pycbc.psd.analytical_space)": [[72, "pycbc.psd.analytical_space.tianqin_psd_components", false]], "time_coincidence() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.time_coincidence", false]], "time_delay_from_detector() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.time_delay_from_detector", false]], "time_delay_from_earth_center() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.time_delay_from_earth_center", false]], "time_delay_from_location() (pycbc.detector.ground.detector method)": [[55, "pycbc.detector.ground.Detector.time_delay_from_location", false]], "time_dependent_options (pycbc.workflow.core.executable attribute)": [[79, "pycbc.workflow.core.Executable.time_dependent_options", false]], "time_dependent_options (pycbc.workflow.jobsetup.pycbcinspiralexecutable attribute)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.time_dependent_options", false]], "time_dependent_options (pycbc.workflow.minifollowups.plotqscanexecutable attribute)": [[79, "pycbc.workflow.minifollowups.PlotQScanExecutable.time_dependent_options", false]], "time_dependent_options (pycbc.workflow.minifollowups.singletemplateexecutable attribute)": [[79, "pycbc.workflow.minifollowups.SingleTemplateExecutable.time_dependent_options", false]], "time_dependent_options (pycbc.workflow.minifollowups.singletimefreqexecutable attribute)": [[79, "pycbc.workflow.minifollowups.SingleTimeFreqExecutable.time_dependent_options", false]], "time_from_frequencyseries() (in module pycbc.waveform.utils)": [[78, "pycbc.waveform.utils.time_from_frequencyseries", false]], "time_multi_coincidence() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.time_multi_coincidence", false]], "time_slice() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.time_slice", false]], "time_unprojected_metric (pycbc.tmpltbank.option_utils.metricparameters property)": [[75, "pycbc.tmpltbank.option_utils.metricParameters.time_unprojected_metric", false]], "timecluster_cython() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.timecluster_cython", false]], "timecoincidence_constructfold() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.timecoincidence_constructfold", false]], "timecoincidence_constructidxs() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.timecoincidence_constructidxs", false]], "timecoincidence_findidxlen() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.timecoincidence_findidxlen", false]], "timecoincidence_getslideint() (in module pycbc.events.eventmgr_cython)": [[57, "pycbc.events.eventmgr_cython.timecoincidence_getslideint", false]], "times_to_links() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.times_to_links", false]], "times_to_urls() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.times_to_urls", false]], "timeseries (class in pycbc.types.timeseries)": [[76, "pycbc.types.timeseries.TimeSeries", false]], "timeslide_durations() (in module pycbc.events.coinc)": [[57, "pycbc.events.coinc.timeslide_durations", false]], "to_array() (pycbc.io.record.fieldarray method)": [[67, "pycbc.io.record.FieldArray.to_array", false]], "to_astropy() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.to_astropy", false]], "to_coinc_hdf_object() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.to_coinc_hdf_object", false]], "to_coinc_xml_object() (pycbc.io.hdf.foregroundtriggers method)": [[67, "pycbc.io.hdf.ForegroundTriggers.to_coinc_xml_object", false]], "to_dict() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.to_dict", false]], "to_file_object() (pycbc.workflow.core.filelist method)": [[79, "pycbc.workflow.core.FileList.to_file_object", false]], "to_frequencyseries() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.to_frequencyseries", false]], "to_frequencyseries() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.to_frequencyseries", false]], "to_live_points() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.to_live_points", false]], "to_segment_xml() (pycbc.workflow.core.segfile method)": [[79, "pycbc.workflow.core.SegFile.to_segment_xml", false]], "to_timeseries() (pycbc.types.frequencyseries.frequencyseries method)": [[76, "pycbc.types.frequencyseries.FrequencySeries.to_timeseries", false]], "to_timeseries() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.to_timeseries", false]], "to_uniform_patch() (pycbc.distributions.sky_location.fishersky method)": [[56, "pycbc.distributions.sky_location.FisherSky.to_uniform_patch", false]], "to_uniform_patch() (pycbc.distributions.sky_location.healpixsky method)": [[56, "pycbc.distributions.sky_location.HealpixSky.to_uniform_patch", false]], "to_uniform_patch() (pycbc.distributions.sky_location.uniformdisksky method)": [[56, "pycbc.distributions.sky_location.UniformDiskSky.to_uniform_patch", false]], "to_uniform_patch() (pycbc.distributions.sky_location.uniformsky method)": [[56, "pycbc.distributions.sky_location.UniformSky.to_uniform_patch", false]], "to_unit_hypercube() (pycbc.inference.sampler.nessai.nessaimodel method)": [[65, "pycbc.inference.sampler.nessai.NessaiModel.to_unit_hypercube", false]], "tolerance (pycbc.waveform.compress.compressedwaveform attribute)": [[78, "pycbc.waveform.compress.CompressedWaveform.tolerance", false]], "tooltip (class in pycbc.results.mpld3_utils)": [[73, "pycbc.results.mpld3_utils.Tooltip", false]], "total_loglr() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.total_loglr", false]], "total_rate_upto_redshift() (in module pycbc.population.population_models)": [[71, "pycbc.population.population_models.total_rate_upto_redshift", false]], "transform() (pycbc.transforms.alignedmassspintocartesianspin method)": [[52, "pycbc.transforms.AlignedMassSpinToCartesianSpin.transform", false]], "transform() (pycbc.transforms.aligntotalspin method)": [[52, "pycbc.transforms.AlignTotalSpin.transform", false]], "transform() (pycbc.transforms.basetransform method)": [[52, "pycbc.transforms.BaseTransform.transform", false]], "transform() (pycbc.transforms.cartesianspintoalignedmassspin method)": [[52, "pycbc.transforms.CartesianSpinToAlignedMassSpin.transform", false]], "transform() (pycbc.transforms.cartesianspintochip method)": [[52, "pycbc.transforms.CartesianSpinToChiP.transform", false]], "transform() (pycbc.transforms.cartesianspintoprecessionmassspin method)": [[52, "pycbc.transforms.CartesianSpinToPrecessionMassSpin.transform", false]], "transform() (pycbc.transforms.cartesiantospherical method)": [[52, "pycbc.transforms.CartesianToSpherical.transform", false]], "transform() (pycbc.transforms.chiptocartesianspin method)": [[52, "pycbc.transforms.ChiPToCartesianSpin.transform", false]], "transform() (pycbc.transforms.chirpdistancetodistance method)": [[52, "pycbc.transforms.ChirpDistanceToDistance.transform", false]], "transform() (pycbc.transforms.customtransform method)": [[52, "pycbc.transforms.CustomTransform.transform", false]], "transform() (pycbc.transforms.customtransformmultioutputs method)": [[52, "pycbc.transforms.CustomTransformMultiOutputs.transform", false]], "transform() (pycbc.transforms.distancetochirpdistance method)": [[52, "pycbc.transforms.DistanceToChirpDistance.transform", false]], "transform() (pycbc.transforms.distancetoredshift method)": [[52, "pycbc.transforms.DistanceToRedshift.transform", false]], "transform() (pycbc.transforms.exponent method)": [[52, "pycbc.transforms.Exponent.transform", false]], "transform() (pycbc.transforms.geotolisa method)": [[52, "pycbc.transforms.GEOToLISA.transform", false]], "transform() (pycbc.transforms.geotossb method)": [[52, "pycbc.transforms.GEOToSSB.transform", false]], "transform() (pycbc.transforms.lambdafrommultipletovfiles method)": [[52, "pycbc.transforms.LambdaFromMultipleTOVFiles.transform", false]], "transform() (pycbc.transforms.lambdafromtovfile method)": [[52, "pycbc.transforms.LambdaFromTOVFile.transform", false]], "transform() (pycbc.transforms.lisatogeo method)": [[52, "pycbc.transforms.LISAToGEO.transform", false]], "transform() (pycbc.transforms.lisatossb method)": [[52, "pycbc.transforms.LISAToSSB.transform", false]], "transform() (pycbc.transforms.log method)": [[52, "pycbc.transforms.Log.transform", false]], "transform() (pycbc.transforms.logistic method)": [[52, "pycbc.transforms.Logistic.transform", false]], "transform() (pycbc.transforms.logit method)": [[52, "pycbc.transforms.Logit.transform", false]], "transform() (pycbc.transforms.mass1mass2tomchirpeta method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpEta.transform", false]], "transform() (pycbc.transforms.mass1mass2tomchirpq method)": [[52, "pycbc.transforms.Mass1Mass2ToMchirpQ.transform", false]], "transform() (pycbc.transforms.mchirpetatomass1mass2 method)": [[52, "pycbc.transforms.MchirpEtaToMass1Mass2.transform", false]], "transform() (pycbc.transforms.mchirpqtomass1mass2 method)": [[52, "pycbc.transforms.MchirpQToMass1Mass2.transform", false]], "transform() (pycbc.transforms.precessionmassspintocartesianspin method)": [[52, "pycbc.transforms.PrecessionMassSpinToCartesianSpin.transform", false]], "transform() (pycbc.transforms.sphericaltocartesian method)": [[52, "pycbc.transforms.SphericalToCartesian.transform", false]], "transform() (pycbc.transforms.ssbtogeo method)": [[52, "pycbc.transforms.SSBToGEO.transform", false]], "transform() (pycbc.transforms.ssbtolisa method)": [[52, "pycbc.transforms.SSBToLISA.transform", false]], "transform_prior() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.transform_prior", false]], "transformation (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.Transformation", false]], "traverse_workflow_io() (pycbc.workflow.pegasus_workflow.workflow method)": [[79, "pycbc.workflow.pegasus_workflow.Workflow.traverse_workflow_io", false]], "trig_dict() (pycbc.io.hdf.singledettriggers method)": [[67, "pycbc.io.hdf.SingleDetTriggers.trig_dict", false]], "trig_id (pycbc.io.hdf.foregroundtriggers property)": [[67, "pycbc.io.hdf.ForegroundTriggers.trig_id", false]], "trigger_timeseries_plot() (in module pycbc.results.followup)": [[73, "pycbc.results.followup.trigger_timeseries_plot", false]], "trim_zeros() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.trim_zeros", false]], "tuple_to_hash() (in module pycbc.waveform.bank)": [[78, "pycbc.waveform.bank.tuple_to_hash", false]], "two_column_layout() (in module pycbc.results.layout)": [[73, "pycbc.results.layout.two_column_layout", false]], "type_in_time() (in module pycbc.population.fgmc_functions)": [[71, "pycbc.population.fgmc_functions.type_in_time", false]], "u_vals (pycbc.io.hdf.singledettriggers property)": [[67, "pycbc.io.hdf.SingleDetTriggers.u_vals", false]], "ultranestfile (class in pycbc.inference.io.ultranest)": [[62, "pycbc.inference.io.ultranest.UltranestFile", false]], "ultranestsampler (class in pycbc.inference.sampler.ultranest)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler", false]], "uniform (class in pycbc.distributions.uniform)": [[56, "pycbc.distributions.uniform.Uniform", false]], "uniformangle (class in pycbc.distributions.angular)": [[56, "pycbc.distributions.angular.UniformAngle", false]], "uniformdisksky (class in pycbc.distributions.sky_location)": [[56, "pycbc.distributions.sky_location.UniformDiskSky", false]], "uniformf0tau (class in pycbc.distributions.qnm)": [[56, "pycbc.distributions.qnm.UniformF0Tau", false]], "uniformlog10 (class in pycbc.distributions.uniform_log)": [[56, "pycbc.distributions.uniform_log.UniformLog10", false]], "uniformpowerlaw (class in pycbc.distributions.power_law)": [[56, "pycbc.distributions.power_law.UniformPowerLaw", false]], "uniformradius (class in pycbc.distributions.power_law)": [[56, "pycbc.distributions.power_law.UniformRadius", false]], "uniformsky (class in pycbc.distributions.sky_location)": [[56, "pycbc.distributions.sky_location.UniformSky", false]], "uniformsolidangle (class in pycbc.distributions.angular)": [[56, "pycbc.distributions.angular.UniformSolidAngle", false]], "update() (pycbc.inference.models.base.basemodel method)": [[64, "pycbc.inference.models.base.BaseModel.update", false]], "update() (pycbc.inference.models.gaussian_noise.basegaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.update", false]], "update_all_models() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.update_all_models", false]], "update_c() (pycbc.strain.recalibrate.physicalmodel method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.update_c", false]], "update_cache() (pycbc.frame.frame.databuffer method)": [[60, "pycbc.frame.frame.DataBuffer.update_cache", false]], "update_cache_by_increment() (pycbc.frame.frame.databuffer method)": [[60, "pycbc.frame.frame.DataBuffer.update_cache_by_increment", false]], "update_checkpoint_history() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.update_checkpoint_history", false]], "update_current_retention_level() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.update_current_retention_level", false]], "update_current_tags() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.update_current_tags", false]], "update_file() (pycbc.events.stat.expfitstatistic method)": [[57, "pycbc.events.stat.ExpFitStatistic.update_file", false]], "update_file() (pycbc.events.stat.phasetdstatistic method)": [[57, "pycbc.events.stat.PhaseTDStatistic.update_file", false]], "update_file() (pycbc.events.stat.stat method)": [[57, "pycbc.events.stat.Stat.update_file", false]], "update_g() (pycbc.strain.recalibrate.physicalmodel method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.update_g", false]], "update_output_directory() (pycbc.workflow.core.executable method)": [[79, "pycbc.workflow.core.Executable.update_output_directory", false]], "update_r() (pycbc.strain.recalibrate.physicalmodel method)": [[74, "pycbc.strain.recalibrate.PhysicalModel.update_r", false]], "update_valid_start() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.update_valid_start", false]], "upload() (pycbc.io.gracedb.candidateforgracedb method)": [[67, "pycbc.io.gracedb.CandidateForGraceDB.upload", false]], "upper() (pycbc.bin_utils.bins method)": [[52, "pycbc.bin_utils.Bins.upper", false]], "upper() (pycbc.bin_utils.irregularbins method)": [[52, "pycbc.bin_utils.IrregularBins.upper", false]], "upper() (pycbc.bin_utils.linearbins method)": [[52, "pycbc.bin_utils.LinearBins.upper", false]], "upper() (pycbc.bin_utils.linearplusoverflowbins method)": [[52, "pycbc.bin_utils.LinearPlusOverflowBins.upper", false]], "upper() (pycbc.bin_utils.logarithmicbins method)": [[52, "pycbc.bin_utils.LogarithmicBins.upper", false]], "upper() (pycbc.bin_utils.logarithmicplusoverflowbins method)": [[52, "pycbc.bin_utils.LogarithmicPlusOverflowBins.upper", false]], "upper() (pycbc.bin_utils.ndbins method)": [[52, "pycbc.bin_utils.NDBins.upper", false]], "use_mpi() (in module pycbc.pool)": [[52, "pycbc.pool.use_mpi", false]], "valid_slice() (pycbc.events.coinc.multiringbuffer method)": [[57, "pycbc.events.coinc.MultiRingBuffer.valid_slice", false]], "validate() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.validate", false]], "validate() (pycbc.inference.io.dynesty.commonnestedmetadataio method)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO.validate", false]], "validate() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.validate", false]], "validate_checkpoint_files() (in module pycbc.inference.io)": [[62, "pycbc.inference.io.validate_checkpoint_files", false]], "values() (pycbc.vetoes.autochisq.singledetautochisq method)": [[77, "pycbc.vetoes.autochisq.SingleDetAutoChisq.values", false]], "values() (pycbc.vetoes.autochisq.singledetskymaxautochisq method)": [[77, "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq.values", false]], "values() (pycbc.vetoes.bank_chisq.singledetbankveto method)": [[77, "pycbc.vetoes.bank_chisq.SingleDetBankVeto.values", false]], "values() (pycbc.vetoes.bank_chisq.singledetskymaxbankveto method)": [[77, "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto.values", false]], "values() (pycbc.vetoes.chisq.singledetpowerchisq method)": [[77, "pycbc.vetoes.chisq.SingleDetPowerChisq.values", false]], "values() (pycbc.vetoes.chisq.singledetskymaxpowerchisq method)": [[77, "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq.values", false]], "values() (pycbc.vetoes.sgchisq.singledetsgchisq method)": [[77, "pycbc.vetoes.sgchisq.SingleDetSGChisq.values", false]], "var (pycbc.distributions.gaussian.gaussian property)": [[56, "pycbc.distributions.gaussian.Gaussian.var", false]], "variable_args (pycbc.distributions.joint.jointdistribution attribute)": [[56, "pycbc.distributions.joint.JointDistribution.variable_args", false]], "variable_args (pycbc.waveform.generator.basefdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.BaseFDomainDetFrameGenerator.variable_args", false]], "variable_args (pycbc.waveform.generator.basegenerator attribute)": [[78, "pycbc.waveform.generator.BaseGenerator.variable_args", false]], "variable_args (pycbc.waveform.generator.fdomaindetframegenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameGenerator.variable_args", false]], "variable_args (pycbc.waveform.generator.fdomaindetframemodesgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameModesGenerator.variable_args", false]], "variable_args (pycbc.waveform.generator.fdomaindetframetwopolgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator.variable_args", false]], "variable_args (pycbc.waveform.generator.fdomaindetframetwopolnorespgenerator attribute)": [[78, "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator.variable_args", false]], "variable_params (pycbc.inference.models.base.basemodel property)": [[64, "pycbc.inference.models.base.BaseModel.variable_params", false]], "variable_params (pycbc.inference.models.hierarchical.hierarchicalmodel property)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.variable_params", false]], "variable_params (pycbc.inference.sampler.base.basesampler property)": [[65, "pycbc.inference.sampler.base.BaseSampler.variable_params", false]], "vdot() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.vdot", false]], "vdot() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.vdot", false]], "vdot() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.vdot", false]], "vecdiff() (in module pycbc.waveform.compress)": [[78, "pycbc.waveform.compress.vecdiff", false]], "velocity_to_frequency() (in module pycbc.pnutils)": [[52, "pycbc.pnutils.velocity_to_frequency", false]], "verify_args() (pycbc.events.coinc.livecoinctimeslidebackgroundestimator static method)": [[57, "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator.verify_args", false]], "verify_args() (pycbc.events.single.livesingle static method)": [[57, "pycbc.events.single.LiveSingle.verify_args", false]], "verify_ethinca_metric_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.verify_ethinca_metric_options", false]], "verify_fft_options() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.verify_fft_options", false]], "verify_fft_options() (in module pycbc.fft.parser_support)": [[58, "pycbc.fft.parser_support.verify_fft_options", false]], "verify_live_significance_duration_bin_options() (in module pycbc.live.significance_fits)": [[68, "pycbc.live.significance_fits.verify_live_significance_duration_bin_options", false]], "verify_live_significance_trigger_pruning_options() (in module pycbc.live.significance_fits)": [[68, "pycbc.live.significance_fits.verify_live_significance_trigger_pruning_options", false]], "verify_mass_range_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.verify_mass_range_options", false]], "verify_metric_calculation_options() (in module pycbc.tmpltbank.option_utils)": [[75, "pycbc.tmpltbank.option_utils.verify_metric_calculation_options", false]], "verify_optimization_options() (in module pycbc.opt)": [[52, "pycbc.opt.verify_optimization_options", false]], "verify_processing_options() (in module pycbc.scheme)": [[52, "pycbc.scheme.verify_processing_options", false]], "verify_psd_options() (in module pycbc.psd)": [[72, "pycbc.psd.verify_psd_options", false]], "verify_psd_options_multi_ifo() (in module pycbc.psd)": [[72, "pycbc.psd.verify_psd_options_multi_ifo", false]], "verify_segment_options() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.verify_segment_options", false]], "verify_segment_options_multi_ifo() (pycbc.strain.strain.strainsegments class method)": [[74, "pycbc.strain.strain.StrainSegments.verify_segment_options_multi_ifo", false]], "verify_strain_options() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.verify_strain_options", false]], "verify_strain_options_multi_ifo() (in module pycbc.strain.strain)": [[74, "pycbc.strain.strain.verify_strain_options_multi_ifo", false]], "versioningexecutable (class in pycbc.workflow.versioning)": [[79, "pycbc.workflow.versioning.VersioningExecutable", false]], "veto_injections() (in module pycbc.workflow.injection)": [[79, "pycbc.workflow.injection.veto_injections", false]], "view() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.view", false]], "virgo() (in module pycbc.psd.analytical)": [[72, "pycbc.psd.analytical.Virgo", false]], "virtualfields (pycbc.io.record.fieldarray property)": [[67, "pycbc.io.record.FieldArray.virtualfields", false]], "volume_binned_pylal() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.volume_binned_pylal", false]], "volume_montecarlo() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.volume_montecarlo", false]], "volume_shell() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.volume_shell", false]], "volume_to_distance_with_errors() (in module pycbc.sensitivity)": [[52, "pycbc.sensitivity.volume_to_distance_with_errors", false]], "wait_for_utc_time() (in module pycbc.live.supervision)": [[68, "pycbc.live.supervision.wait_for_utc_time", false]], "walk() (in module pycbc.inference.gelman_rubin)": [[61, "pycbc.inference.gelman_rubin.walk", false]], "waveform_norm_exists() (in module pycbc.waveform.waveform)": [[78, "pycbc.waveform.waveform.waveform_norm_exists", false]], "waveformarray (class in pycbc.io.record)": [[67, "pycbc.io.record.WaveformArray", false]], "weight (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.weight", false]], "weighted_inner() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.weighted_inner", false]], "weighted_inner() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.weighted_inner", false]], "weighted_inner() (pycbc.types.array.array method)": [[76, "pycbc.types.array.Array.weighted_inner", false]], "welch() (in module pycbc.psd.estimate)": [[72, "pycbc.psd.estimate.welch", false]], "well_reflected (pycbc.distributions.joint.jointdistribution property)": [[56, "pycbc.distributions.joint.JointDistribution.well_reflected", false]], "which_bin() (in module pycbc.events.trigger_fits)": [[57, "pycbc.events.trigger_fits.which_bin", false]], "whiten() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.whiten", false]], "whiten() (pycbc.types.timeseries.timeseries method)": [[76, "pycbc.types.timeseries.TimeSeries.whiten", false]], "whitened_data (pycbc.inference.models.gaussian_noise.basegaussiannoise property)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.whitened_data", false]], "wisdom_io() (in module pycbc.fft.fftw)": [[58, "pycbc.fft.fftw.wisdom_io", false]], "within_constraints() (pycbc.distributions.joint.jointdistribution method)": [[56, "pycbc.distributions.joint.JointDistribution.within_constraints", false]], "workflow (class in pycbc.workflow.core)": [[79, "pycbc.workflow.core.Workflow", false]], "workflow (class in pycbc.workflow.pegasus_workflow)": [[79, "pycbc.workflow.pegasus_workflow.Workflow", false]], "workflowconfigparser (class in pycbc.workflow.configuration)": [[79, "pycbc.workflow.configuration.WorkflowConfigParser", false]], "write() (pycbc.inference.burn_in.baseburnintests method)": [[61, "pycbc.inference.burn_in.BaseBurnInTests.write", false]], "write() (pycbc.inference.burn_in.mcmcburnintests method)": [[61, "pycbc.inference.burn_in.MCMCBurnInTests.write", false]], "write() (pycbc.inference.io.txt.inferencetxtfile class method)": [[62, "pycbc.inference.io.txt.InferenceTXTFile.write", false]], "write() (pycbc.inject.inject.injectionset static method)": [[66, "pycbc.inject.inject.InjectionSet.write", false]], "write_acceptance_fraction() (pycbc.inference.io.emcee.emceefile method)": [[62, "pycbc.inference.io.emcee.EmceeFile.write_acceptance_fraction", false]], "write_acceptance_fraction() (pycbc.inference.io.emcee_pt.emceeptfile method)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.write_acceptance_fraction", false]], "write_acceptance_ratio() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.write_acceptance_ratio", false]], "write_betas() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.write_betas", false]], "write_command_line() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_command_line", false]], "write_config_file() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_config_file", false]], "write_data() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_data", false]], "write_effective_nsamples() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_effective_nsamples", false]], "write_ensemble_attrs() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.write_ensemble_attrs", false]], "write_events() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.write_events", false]], "write_frame() (in module pycbc.frame.frame)": [[60, "pycbc.frame.frame.write_frame", false]], "write_injections() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_injections", false]], "write_kwargs_to_attrs() (pycbc.inference.io.base_hdf.baseinferencefile class method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_kwargs_to_attrs", false]], "write_logevidence() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_logevidence", false]], "write_logevidence() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.write_logevidence", false]], "write_metadata() (pycbc.inference.models.base.basemodel method)": [[64, "pycbc.inference.models.base.BaseModel.write_metadata", false]], "write_metadata() (pycbc.inference.models.base_data.basedatamodel method)": [[64, "pycbc.inference.models.base_data.BaseDataModel.write_metadata", false]], "write_metadata() (pycbc.inference.models.gated_gaussian_noise.basegatedgaussian method)": [[64, "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian.write_metadata", false]], "write_metadata() (pycbc.inference.models.gaussian_noise.basegaussiannoise method)": [[64, "pycbc.inference.models.gaussian_noise.BaseGaussianNoise.write_metadata", false]], "write_metadata() (pycbc.inference.models.hierarchical.hierarchicalmodel method)": [[64, "pycbc.inference.models.hierarchical.HierarchicalModel.write_metadata", false]], "write_metadata() (pycbc.inference.models.hierarchical.jointprimarymarginalizedmodel method)": [[64, "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel.write_metadata", false]], "write_metadata() (pycbc.inference.models.hierarchical.multisignalmodel method)": [[64, "pycbc.inference.models.hierarchical.MultiSignalModel.write_metadata", false]], "write_metadata() (pycbc.inference.models.relbin.relative method)": [[64, "pycbc.inference.models.relbin.Relative.write_metadata", false]], "write_niterations() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.write_niterations", false]], "write_niterations() (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile method)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.write_niterations", false]], "write_niterations() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.write_niterations", false]], "write_pickled_data_into_checkpoint_file() (pycbc.inference.io.dynesty.commonnestedmetadataio method)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO.write_pickled_data_into_checkpoint_file", false]], "write_psd() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_psd", false]], "write_random_state() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_random_state", false]], "write_raw_samples() (pycbc.inference.io.dynesty.commonnestedmetadataio method)": [[62, "pycbc.inference.io.dynesty.CommonNestedMetadataIO.write_raw_samples", false]], "write_results() (pycbc.inference.sampler.base_mcmc.basemcmc method)": [[65, "pycbc.inference.sampler.base_mcmc.BaseMCMC.write_results", false]], "write_results() (pycbc.inference.sampler.dynesty.dynestysampler method)": [[65, "pycbc.inference.sampler.dynesty.DynestySampler.write_results", false]], "write_results() (pycbc.inference.sampler.emcee.emceeensemblesampler method)": [[65, "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.write_results", false]], "write_results() (pycbc.inference.sampler.emcee_pt.emceeptsampler method)": [[65, "pycbc.inference.sampler.emcee_pt.EmceePTSampler.write_results", false]], "write_results() (pycbc.inference.sampler.epsie.epsiesampler method)": [[65, "pycbc.inference.sampler.epsie.EpsieSampler.write_results", false]], "write_results() (pycbc.inference.sampler.multinest.multinestsampler method)": [[65, "pycbc.inference.sampler.multinest.MultinestSampler.write_results", false]], "write_results() (pycbc.inference.sampler.nessai.nessaisampler method)": [[65, "pycbc.inference.sampler.nessai.NessaiSampler.write_results", false]], "write_results() (pycbc.inference.sampler.ptemcee.ptemceesampler method)": [[65, "pycbc.inference.sampler.ptemcee.PTEmceeSampler.write_results", false]], "write_results() (pycbc.inference.sampler.snowline.snowlinesampler method)": [[65, "pycbc.inference.sampler.snowline.SnowlineSampler.write_results", false]], "write_results() (pycbc.inference.sampler.ultranest.ultranestsampler method)": [[65, "pycbc.inference.sampler.ultranest.UltranestSampler.write_results", false]], "write_resume_point() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.write_resume_point", false]], "write_resume_point() (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile method)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.write_resume_point", false]], "write_resume_point() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.write_resume_point", false]], "write_resume_point() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.write_resume_point", false]], "write_resume_point() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.write_resume_point", false]], "write_run_end_time() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.write_run_end_time", false]], "write_run_end_time() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.write_run_end_time", false]], "write_run_start_time() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.write_run_start_time", false]], "write_run_start_time() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.write_run_start_time", false]], "write_sampler_metadata() (pycbc.inference.io.base_mcmc.commonmcmcmetadataio method)": [[62, "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.base_multitemper.commonmultitemperedmetadataio method)": [[62, "pycbc.inference.io.base_multitemper.CommonMultiTemperedMetadataIO.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile method)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.base_sampler.basesamplerfile method)": [[62, "pycbc.inference.io.base_sampler.BaseSamplerFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.emcee_pt.emceeptfile method)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.write_sampler_metadata", false]], "write_sampler_metadata() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.write_sampler_metadata", false]], "write_samples() (in module pycbc.inference.io.base_mcmc)": [[62, "pycbc.inference.io.base_mcmc.write_samples", false]], "write_samples() (in module pycbc.inference.io.base_multitemper)": [[62, "pycbc.inference.io.base_multitemper.write_samples", false]], "write_samples() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_samples", false]], "write_samples() (pycbc.inference.io.base_nested_sampler.basenestedsamplerfile method)": [[62, "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile.write_samples", false]], "write_samples() (pycbc.inference.io.emcee.emceefile method)": [[62, "pycbc.inference.io.emcee.EmceeFile.write_samples", false]], "write_samples() (pycbc.inference.io.emcee_pt.emceeptfile method)": [[62, "pycbc.inference.io.emcee_pt.EmceePTFile.write_samples", false]], "write_samples() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.write_samples", false]], "write_samples() (pycbc.inference.io.multinest.multinestfile method)": [[62, "pycbc.inference.io.multinest.MultinestFile.write_samples", false]], "write_samples() (pycbc.inference.io.posterior.posteriorfile method)": [[62, "pycbc.inference.io.posterior.PosteriorFile.write_samples", false]], "write_samples() (pycbc.inference.io.ptemcee.ptemceefile method)": [[62, "pycbc.inference.io.ptemcee.PTEmceeFile.write_samples", false]], "write_samples_to_file() (in module pycbc.inference.io.posterior)": [[62, "pycbc.inference.io.posterior.write_samples_to_file", false]], "write_stilde() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_stilde", false]], "write_strain() (pycbc.inference.io.base_hdf.baseinferencefile method)": [[62, "pycbc.inference.io.base_hdf.BaseInferenceFile.write_strain", false]], "write_temperature_data() (pycbc.inference.io.epsie.epsiefile method)": [[62, "pycbc.inference.io.epsie.EpsieFile.write_temperature_data", false]], "write_to_file() (pycbc.tmpltbank.sky_grid.skygrid method)": [[75, "pycbc.tmpltbank.sky_grid.SkyGrid.write_to_file", false]], "write_to_hdf() (pycbc.events.eventmgr.eventmanager method)": [[57, "pycbc.events.eventmgr.EventManager.write_to_hdf", false]], "write_to_hdf() (pycbc.events.eventmgr.eventmanagercoherent method)": [[57, "pycbc.events.eventmgr.EventManagerCoherent.write_to_hdf", false]], "write_to_hdf() (pycbc.events.eventmgr.eventmanagermultidet method)": [[57, "pycbc.events.eventmgr.EventManagerMultiDet.write_to_hdf", false]], "write_to_hdf() (pycbc.waveform.bank.templatebank method)": [[78, "pycbc.waveform.bank.TemplateBank.write_to_hdf", false]], "write_to_hdf() (pycbc.waveform.compress.compressedwaveform method)": [[78, "pycbc.waveform.compress.CompressedWaveform.write_to_hdf", false]], "xi1_from_spin1x_spin1y() (in module pycbc.conversions)": [[52, "pycbc.conversions.xi1_from_spin1x_spin1y", false]], "xi2_from_mass1_mass2_spin2x_spin2y() (in module pycbc.conversions)": [[52, "pycbc.conversions.xi2_from_mass1_mass2_spin2x_spin2y", false]], "zero_pad_data_extend() (pycbc.workflow.jobsetup.pycbcinspiralexecutable method)": [[79, "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.zero_pad_data_extend", false]], "zeros() (in module pycbc.types.aligned)": [[76, "pycbc.types.aligned.zeros", false]], "zeros() (in module pycbc.types.array)": [[76, "pycbc.types.array.zeros", false]], "zeros() (in module pycbc.types.array_cpu)": [[76, "pycbc.types.array_cpu.zeros", false]], "zeros() (in module pycbc.types.array_cupy)": [[76, "pycbc.types.array_cupy.zeros", false]]}, "objects": {"": [[52, 0, 0, "-", "pycbc"]], "pycbc": [[52, 1, 1, "", "LogFormatter"], [52, 3, 1, "", "add_common_pycbc_options"], [52, 0, 0, "-", "bin_utils"], [52, 0, 0, "-", "boundaries"], [53, 0, 0, "-", "catalog"], [52, 0, 0, "-", "conversions"], [54, 0, 0, "-", "coordinates"], [52, 0, 0, "-", "cosmology"], [55, 0, 0, "-", "detector"], [56, 0, 0, "-", "distributions"], [52, 0, 0, "-", "dq"], [57, 0, 0, "-", "events"], [58, 0, 0, "-", "fft"], [59, 0, 0, "-", "filter"], [60, 0, 0, "-", "frame"], [52, 3, 1, "", "gps_now"], [61, 0, 0, "-", "inference"], [52, 3, 1, "", "init_logging"], [66, 0, 0, "-", "inject"], [67, 0, 0, "-", "io"], [52, 0, 0, "-", "libutils"], [68, 0, 0, "-", "live"], [52, 3, 1, "", "load_source"], [52, 3, 1, "", "makedir"], [52, 0, 0, "-", "mchirp_area"], [69, 0, 0, "-", "neutron_stars"], [70, 0, 0, "-", "noise"], [52, 0, 0, "-", "opt"], [52, 0, 0, "-", "pnutils"], [52, 0, 0, "-", "pool"], [71, 0, 0, "-", "population"], [72, 0, 0, "-", "psd"], [52, 3, 1, "", "random_string"], [52, 0, 0, "-", "rate"], [73, 0, 0, "-", "results"], [52, 0, 0, "-", "scheme"], [52, 0, 0, "-", "sensitivity"], [74, 0, 0, "-", "strain"], [75, 0, 0, "-", "tmpltbank"], [52, 0, 0, "-", "transforms"], [76, 0, 0, "-", "types"], [52, 0, 0, "-", "version"], [77, 0, 0, "-", "vetoes"], [78, 0, 0, "-", "waveform"], [79, 0, 0, "-", "workflow"]], "pycbc.LogFormatter": [[52, 2, 1, "", "converter"], [52, 2, 1, "", "formatTime"]], "pycbc.bin_utils": [[52, 1, 1, "", "BinnedArray"], [52, 1, 1, "", "BinnedRatios"], [52, 1, 1, "", "Bins"], [52, 1, 1, "", "IrregularBins"], [52, 1, 1, "", "LinearBins"], [52, 1, 1, "", "LinearPlusOverflowBins"], [52, 1, 1, "", "LogarithmicBins"], [52, 1, 1, "", "LogarithmicPlusOverflowBins"], [52, 1, 1, "", "NDBins"]], "pycbc.bin_utils.BinnedArray": [[52, 2, 1, "", "argmax"], [52, 2, 1, "", "argmin"], [52, 2, 1, "", "centres"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "logregularize"]], "pycbc.bin_utils.BinnedRatios": [[52, 2, 1, "", "bins"], [52, 2, 1, "", "centres"], [52, 2, 1, "", "incdenominator"], [52, 2, 1, "", "incnumerator"], [52, 2, 1, "", "logregularize"], [52, 2, 1, "", "ratio"], [52, 2, 1, "", "regularize"]], "pycbc.bin_utils.Bins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.IrregularBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.LinearBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.LinearPlusOverflowBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.LogarithmicBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.LogarithmicPlusOverflowBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.bin_utils.NDBins": [[52, 2, 1, "", "centres"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "upper"]], "pycbc.boundaries": [[52, 1, 1, "", "Bounds"], [52, 1, 1, "", "ClosedBound"], [52, 1, 1, "", "OpenBound"], [52, 1, 1, "", "ReflectedBound"], [52, 3, 1, "", "apply_cyclic"], [52, 3, 1, "", "reflect_well"]], "pycbc.boundaries.Bounds": [[52, 2, 1, "", "apply_conditions"], [52, 2, 1, "", "contains_conditioned"], [52, 4, 1, "", "cyclic"], [52, 4, 1, "", "max"], [52, 4, 1, "", "min"]], "pycbc.boundaries.ClosedBound": [[52, 2, 1, "", "larger"], [52, 5, 1, "", "name"], [52, 2, 1, "", "smaller"]], "pycbc.boundaries.OpenBound": [[52, 2, 1, "", "larger"], [52, 5, 1, "", "name"], [52, 2, 1, "", "smaller"]], "pycbc.boundaries.ReflectedBound": [[52, 5, 1, "", "name"], [52, 2, 1, "", "reflect"], [52, 2, 1, "", "reflect_left"], [52, 2, 1, "", "reflect_right"]], "pycbc.catalog": [[53, 1, 1, "", "Catalog"], [53, 1, 1, "", "Merger"], [53, 0, 0, "-", "catalog"], [53, 3, 1, "", "find_event_in_catalog"]], "pycbc.catalog.Catalog": [[53, 2, 1, "", "median1d"]], "pycbc.catalog.Merger": [[53, 2, 1, "", "median1d"], [53, 2, 1, "", "strain"]], "pycbc.catalog.catalog": [[53, 3, 1, "", "get_source"], [53, 3, 1, "", "list_catalogs"], [53, 3, 1, "", "lvk_catalogs"], [53, 3, 1, "", "populate_catalogs"]], "pycbc.conversions": [[52, 3, 1, "", "chi_a"], [52, 3, 1, "", "chi_eff"], [52, 3, 1, "", "chi_eff_from_spherical"], [52, 3, 1, "", "chi_p"], [52, 3, 1, "", "chi_p_from_spherical"], [52, 3, 1, "", "chi_p_from_xi1_xi2"], [52, 3, 1, "", "chi_perp_from_mass1_mass2_xi2"], [52, 3, 1, "", "chi_perp_from_spinx_spiny"], [52, 3, 1, "", "chirp_distance"], [52, 3, 1, "", "delta_lambda_tilde"], [52, 3, 1, "", "det_tc"], [52, 3, 1, "", "dquadmon_from_lambda"], [52, 3, 1, "", "eta_from_mass1_mass2"], [52, 3, 1, "", "eta_from_q"], [52, 3, 1, "", "eta_from_tau0_tau3"], [52, 3, 1, "", "final_mass_from_f0_tau"], [52, 3, 1, "", "final_mass_from_initial"], [52, 3, 1, "", "final_spin_from_f0_tau"], [52, 3, 1, "", "final_spin_from_initial"], [52, 3, 1, "", "freq_from_final_mass_spin"], [52, 3, 1, "", "freqlmn_from_other_lmn"], [52, 3, 1, "", "hypertriangle"], [52, 3, 1, "", "invq_from_mass1_mass2"], [52, 3, 1, "", "lambda1_from_delta_lambda_tilde_lambda_tilde"], [52, 3, 1, "", "lambda2_from_delta_lambda_tilde_lambda_tilde"], [52, 3, 1, "", "lambda_from_mass_tov_file"], [52, 3, 1, "", "lambda_tilde"], [52, 3, 1, "", "mass1_from_mass2_eta"], [52, 3, 1, "", "mass1_from_mchirp_eta"], [52, 3, 1, "", "mass1_from_mchirp_q"], [52, 3, 1, "", "mass1_from_mtotal_eta"], [52, 3, 1, "", "mass1_from_mtotal_q"], [52, 3, 1, "", "mass1_from_tau0_tau3"], [52, 3, 1, "", "mass2_from_mass1_eta"], [52, 3, 1, "", "mass2_from_mchirp_eta"], [52, 3, 1, "", "mass2_from_mchirp_q"], [52, 3, 1, "", "mass2_from_mtotal_eta"], [52, 3, 1, "", "mass2_from_mtotal_q"], [52, 3, 1, "", "mass2_from_tau0_tau3"], [52, 3, 1, "", "mchirp_from_mass1_mass2"], [52, 3, 1, "", "mchirp_from_tau0"], [52, 3, 1, "", "mtotal_from_mass1_mass2"], [52, 3, 1, "", "mtotal_from_mchirp_eta"], [52, 3, 1, "", "mtotal_from_tau0_tau3"], [52, 3, 1, "", "nltides_gw_phase_diff_isco"], [52, 3, 1, "", "optimal_dec_from_detector"], [52, 3, 1, "", "optimal_ra_from_detector"], [52, 3, 1, "", "phi1_from_phi_a_phi_s"], [52, 3, 1, "", "phi2_from_phi_a_phi_s"], [52, 3, 1, "", "phi_a"], [52, 3, 1, "", "phi_from_spinx_spiny"], [52, 3, 1, "", "phi_s"], [52, 3, 1, "", "primary_mass"], [52, 3, 1, "", "primary_spin"], [52, 3, 1, "", "primary_xi"], [52, 3, 1, "", "q_from_mass1_mass2"], [52, 3, 1, "", "remnant_mass_from_mass1_mass2_cartesian_spin_eos"], [52, 3, 1, "", "remnant_mass_from_mass1_mass2_spherical_spin_eos"], [52, 3, 1, "", "secondary_mass"], [52, 3, 1, "", "secondary_spin"], [52, 3, 1, "", "secondary_xi"], [52, 3, 1, "", "snr_from_loglr"], [52, 3, 1, "", "spin1x_from_xi1_phi_a_phi_s"], [52, 3, 1, "", "spin1y_from_xi1_phi_a_phi_s"], [52, 3, 1, "", "spin1z_from_mass1_mass2_chi_eff_chi_a"], [52, 3, 1, "", "spin2x_from_mass1_mass2_xi2_phi_a_phi_s"], [52, 3, 1, "", "spin2y_from_mass1_mass2_xi2_phi_a_phi_s"], [52, 3, 1, "", "spin2z_from_mass1_mass2_chi_eff_chi_a"], [52, 3, 1, "", "spin_from_pulsar_freq"], [52, 3, 1, "", "tau0_from_mass1_mass2"], [52, 3, 1, "", "tau0_from_mchirp"], [52, 3, 1, "", "tau0_from_mtotal_eta"], [52, 3, 1, "", "tau3_from_mass1_mass2"], [52, 3, 1, "", "tau3_from_mtotal_eta"], [52, 3, 1, "", "tau_from_final_mass_spin"], [52, 3, 1, "", "taulmn_from_other_lmn"], [52, 3, 1, "", "xi1_from_spin1x_spin1y"], [52, 3, 1, "", "xi2_from_mass1_mass2_spin2x_spin2y"]], "pycbc.coordinates": [[54, 0, 0, "-", "base"], [54, 3, 1, "", "cartesian_to_spherical"], [54, 3, 1, "", "cartesian_to_spherical_azimuthal"], [54, 3, 1, "", "cartesian_to_spherical_polar"], [54, 3, 1, "", "cartesian_to_spherical_rho"], [54, 3, 1, "", "earth_position_ssb"], [54, 3, 1, "", "geo_to_lisa"], [54, 3, 1, "", "geo_to_ssb"], [54, 3, 1, "", "lisa_position_ssb"], [54, 3, 1, "", "lisa_to_geo"], [54, 3, 1, "", "lisa_to_ssb"], [54, 3, 1, "", "localization_to_propagation_vector"], [54, 3, 1, "", "polarization_newframe"], [54, 3, 1, "", "propagation_vector_to_localization"], [54, 3, 1, "", "rotation_matrix_ssb_to_geo"], [54, 3, 1, "", "rotation_matrix_ssb_to_lisa"], [54, 0, 0, "-", "space"], [54, 3, 1, "", "spherical_to_cartesian"], [54, 3, 1, "", "ssb_to_geo"], [54, 3, 1, "", "ssb_to_lisa"], [54, 3, 1, "", "t_geo_from_ssb"], [54, 3, 1, "", "t_lisa_from_ssb"], [54, 3, 1, "", "t_ssb_from_t_geo"], [54, 3, 1, "", "t_ssb_from_t_lisa"]], "pycbc.coordinates.base": [[54, 3, 1, "", "cartesian_to_spherical"], [54, 3, 1, "", "cartesian_to_spherical_azimuthal"], [54, 3, 1, "", "cartesian_to_spherical_polar"], [54, 3, 1, "", "cartesian_to_spherical_rho"], [54, 3, 1, "", "spherical_to_cartesian"]], "pycbc.coordinates.space": [[54, 3, 1, "", "earth_position_ssb"], [54, 3, 1, "", "geo_to_lisa"], [54, 3, 1, "", "geo_to_ssb"], [54, 3, 1, "", "lisa_position_ssb"], [54, 3, 1, "", "lisa_to_geo"], [54, 3, 1, "", "lisa_to_ssb"], [54, 3, 1, "", "localization_to_propagation_vector"], [54, 3, 1, "", "polarization_newframe"], [54, 3, 1, "", "propagation_vector_to_localization"], [54, 3, 1, "", "rotation_matrix_ssb_to_geo"], [54, 3, 1, "", "rotation_matrix_ssb_to_lisa"], [54, 3, 1, "", "ssb_to_geo"], [54, 3, 1, "", "ssb_to_lisa"], [54, 3, 1, "", "t_geo_from_ssb"], [54, 3, 1, "", "t_lisa_from_ssb"], [54, 3, 1, "", "t_ssb_from_t_geo"], [54, 3, 1, "", "t_ssb_from_t_lisa"]], "pycbc.cosmology": [[52, 3, 1, "", "cosmological_quantity_from_redshift"], [52, 3, 1, "", "distance_from_comoving_volume"], [52, 3, 1, "", "redshift"], [52, 3, 1, "", "redshift_from_comoving_volume"]], "pycbc.detector": [[55, 0, 0, "-", "ground"], [55, 0, 0, "-", "space"]], "pycbc.detector.ground": [[55, 1, 1, "", "Detector"], [55, 3, 1, "", "add_detector_on_earth"], [55, 3, 1, "", "get_available_detectors"], [55, 3, 1, "", "get_available_lal_detectors"], [55, 3, 1, "", "gmst_accurate"], [55, 3, 1, "", "load_detector_config"], [55, 3, 1, "", "overhead_antenna_pattern"], [55, 3, 1, "", "ppdets"], [55, 3, 1, "", "single_arm_frequency_response"]], "pycbc.detector.ground.Detector": [[55, 2, 1, "", "antenna_pattern"], [55, 2, 1, "", "arrival_time"], [55, 2, 1, "", "effective_distance"], [55, 2, 1, "", "get_icrs_pos"], [55, 2, 1, "", "gmst_estimate"], [55, 2, 1, "", "lal"], [55, 2, 1, "", "light_travel_time_to_detector"], [55, 2, 1, "", "optimal_orientation"], [55, 2, 1, "", "project_wave"], [55, 2, 1, "", "set_gmst_reference"], [55, 2, 1, "", "time_delay_from_detector"], [55, 2, 1, "", "time_delay_from_earth_center"], [55, 2, 1, "", "time_delay_from_location"]], "pycbc.detector.space": [[55, 1, 1, "", "SpaceDetector"], [55, 3, 1, "", "get_available_space_detectors"]], "pycbc.detector.space.SpaceDetector": [[55, 2, 1, "", "get_links"], [55, 2, 1, "", "project_wave"], [55, 4, 1, "", "sky_coords"]], "pycbc.distributions": [[56, 0, 0, "-", "angular"], [56, 0, 0, "-", "arbitrary"], [56, 0, 0, "-", "bounded"], [56, 0, 0, "-", "constraints"], [56, 0, 0, "-", "external"], [56, 0, 0, "-", "fixedsamples"], [56, 0, 0, "-", "gaussian"], [56, 0, 0, "-", "joint"], [56, 0, 0, "-", "mass"], [56, 0, 0, "-", "power_law"], [56, 0, 0, "-", "qnm"], [56, 3, 1, "", "read_constraints_from_config"], [56, 3, 1, "", "read_distributions_from_config"], [56, 3, 1, "", "read_params_from_config"], [56, 0, 0, "-", "sky_location"], [56, 0, 0, "-", "spins"], [56, 0, 0, "-", "uniform"], [56, 0, 0, "-", "uniform_log"], [56, 0, 0, "-", "utils"]], "pycbc.distributions.angular": [[56, 1, 1, "", "CosAngle"], [56, 1, 1, "", "SinAngle"], [56, 1, 1, "", "UniformAngle"], [56, 1, 1, "", "UniformSolidAngle"]], "pycbc.distributions.angular.CosAngle": [[56, 5, 1, "", "name"]], "pycbc.distributions.angular.SinAngle": [[56, 5, 1, "", "name"]], "pycbc.distributions.angular.UniformAngle": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 4, 1, "", "domain"], [56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"]], "pycbc.distributions.angular.UniformSolidAngle": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 4, 1, "", "azimuthal_angle"], [56, 4, 1, "", "bounds"], [56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"], [56, 4, 1, "", "polar_angle"]], "pycbc.distributions.arbitrary": [[56, 1, 1, "", "Arbitrary"], [56, 1, 1, "", "FromFile"]], "pycbc.distributions.arbitrary.Arbitrary": [[56, 2, 1, "", "from_config"], [56, 2, 1, "", "get_kde_from_arrays"], [56, 4, 1, "", "kde"], [56, 5, 1, "", "name"], [56, 4, 1, "", "params"], [56, 2, 1, "", "rvs"], [56, 2, 1, "", "set_bandwidth"]], "pycbc.distributions.arbitrary.FromFile": [[56, 4, 1, "", "filename"], [56, 2, 1, "", "from_config"], [56, 2, 1, "", "get_arrays_from_file"], [56, 5, 1, "", "kde"], [56, 5, 1, "", "lognorm"], [56, 5, 1, "", "name"], [56, 5, 1, "", "norm"]], "pycbc.distributions.bounded": [[56, 1, 1, "", "BoundedDist"], [56, 3, 1, "", "bounded_from_config"], [56, 3, 1, "", "get_param_bounds_from_config"]], "pycbc.distributions.bounded.BoundedDist": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 4, 1, "", "bounds"], [56, 2, 1, "", "cdfinv"], [56, 2, 1, "", "from_config"], [56, 2, 1, "", "logpdf"], [56, 4, 1, "", "params"], [56, 2, 1, "", "pdf"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.constraints": [[56, 1, 1, "", "Constraint"], [56, 1, 1, "", "SupernovaeConvexHull"]], "pycbc.distributions.constraints.Constraint": [[56, 5, 1, "", "name"]], "pycbc.distributions.constraints.SupernovaeConvexHull": [[56, 5, 1, "", "name"], [56, 5, 1, "", "required_parameters"]], "pycbc.distributions.external": [[56, 1, 1, "", "DistributionFunctionFromFile"], [56, 1, 1, "", "External"]], "pycbc.distributions.external.DistributionFunctionFromFile": [[56, 2, 1, "", "from_config"], [56, 2, 1, "", "logpdf"], [56, 5, 1, "", "name"]], "pycbc.distributions.external.External": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.fixedsamples": [[56, 1, 1, "", "FixedSamples"]], "pycbc.distributions.fixedsamples.FixedSamples": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 2, 1, "", "cdfinv"], [56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.gaussian": [[56, 1, 1, "", "Gaussian"]], "pycbc.distributions.gaussian.Gaussian": [[56, 2, 1, "", "cdf"], [56, 2, 1, "", "from_config"], [56, 4, 1, "", "mean"], [56, 5, 1, "", "name"], [56, 4, 1, "", "var"]], "pycbc.distributions.joint": [[56, 1, 1, "", "JointDistribution"]], "pycbc.distributions.joint.JointDistribution": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 4, 1, "", "bounds"], [56, 2, 1, "", "cdfinv"], [56, 5, 1, "", "constraints"], [56, 2, 1, "", "contains"], [56, 4, 1, "", "cyclic"], [56, 5, 1, "", "distributions"], [56, 5, 1, "", "name"], [56, 2, 1, "", "rvs"], [56, 5, 1, "", "variable_args"], [56, 4, 1, "", "well_reflected"], [56, 2, 1, "", "within_constraints"]], "pycbc.distributions.mass": [[56, 1, 1, "", "MchirpfromUniformMass1Mass2"], [56, 1, 1, "", "QfromUniformMass1Mass2"]], "pycbc.distributions.mass.MchirpfromUniformMass1Mass2": [[56, 5, 1, "", "name"]], "pycbc.distributions.mass.QfromUniformMass1Mass2": [[56, 2, 1, "", "from_config"], [56, 4, 1, "", "lognorm"], [56, 5, 1, "", "name"], [56, 4, 1, "", "norm"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.power_law": [[56, 1, 1, "", "UniformPowerLaw"], [56, 1, 1, "", "UniformRadius"]], "pycbc.distributions.power_law.UniformPowerLaw": [[56, 5, 1, "", "dim"], [56, 2, 1, "", "from_config"], [56, 4, 1, "", "lognorm"], [56, 5, 1, "", "name"], [56, 4, 1, "", "norm"]], "pycbc.distributions.power_law.UniformRadius": [[56, 5, 1, "", "name"]], "pycbc.distributions.qnm": [[56, 1, 1, "", "UniformF0Tau"]], "pycbc.distributions.qnm.UniformF0Tau": [[56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.sky_location": [[56, 1, 1, "", "FisherSky"], [56, 1, 1, "", "HealpixSky"], [56, 1, 1, "", "UniformDiskSky"], [56, 1, 1, "", "UniformSky"]], "pycbc.distributions.sky_location.FisherSky": [[56, 2, 1, "", "from_config"], [56, 2, 1, "", "get_max_prob_point"], [56, 5, 1, "", "name"], [56, 4, 1, "", "params"], [56, 2, 1, "", "rvs"], [56, 2, 1, "", "to_uniform_patch"]], "pycbc.distributions.sky_location.HealpixSky": [[56, 2, 1, "", "from_config"], [56, 2, 1, "", "get_max_prob_point"], [56, 5, 1, "", "name"], [56, 2, 1, "", "normalize_azimuth"], [56, 4, 1, "", "params"], [56, 2, 1, "", "pixel_corners"], [56, 2, 1, "", "rvs"], [56, 2, 1, "", "to_uniform_patch"]], "pycbc.distributions.sky_location.UniformDiskSky": [[56, 2, 1, "", "from_config"], [56, 2, 1, "", "get_max_prob_point"], [56, 5, 1, "", "name"], [56, 4, 1, "", "params"], [56, 2, 1, "", "rvs"], [56, 2, 1, "", "to_uniform_patch"]], "pycbc.distributions.sky_location.UniformSky": [[56, 5, 1, "", "name"], [56, 2, 1, "", "to_uniform_patch"]], "pycbc.distributions.spins": [[56, 1, 1, "", "IndependentChiPChiEff"]], "pycbc.distributions.spins.IndependentChiPChiEff": [[56, 2, 1, "", "apply_boundary_conditions"], [56, 2, 1, "", "from_config"], [56, 5, 1, "", "name"], [56, 2, 1, "", "rvs"]], "pycbc.distributions.uniform": [[56, 1, 1, "", "Uniform"]], "pycbc.distributions.uniform.Uniform": [[56, 2, 1, "", "from_config"], [56, 4, 1, "", "lognorm"], [56, 5, 1, "", "name"], [56, 4, 1, "", "norm"]], "pycbc.distributions.uniform_log": [[56, 1, 1, "", "UniformLog10"]], "pycbc.distributions.uniform_log.UniformLog10": [[56, 5, 1, "", "name"]], "pycbc.distributions.utils": [[56, 3, 1, "", "draw_samples_from_config"], [56, 3, 1, "", "prior_from_config"]], "pycbc.dq": [[52, 3, 1, "", "parse_flag_str"], [52, 3, 1, "", "parse_veto_definer"], [52, 3, 1, "", "query_cumulative_flags"], [52, 3, 1, "", "query_dqsegdb2"], [52, 3, 1, "", "query_flag"], [52, 3, 1, "", "query_str"]], "pycbc.events": [[57, 0, 0, "-", "coherent"], [57, 0, 0, "-", "coinc"], [57, 0, 0, "-", "coinc_rate"], [57, 0, 0, "-", "cuts"], [57, 0, 0, "-", "eventmgr"], [57, 0, 0, "-", "eventmgr_cython"], [57, 0, 0, "-", "ranking"], [57, 0, 0, "-", "significance"], [57, 0, 0, "-", "simd_threshold_cython"], [57, 0, 0, "-", "single"], [57, 0, 0, "-", "stat"], [57, 0, 0, "-", "threshold_cpu"], [57, 0, 0, "-", "threshold_cupy"], [57, 0, 0, "-", "trigger_fits"], [57, 0, 0, "-", "triggers"], [57, 0, 0, "-", "veto"]], "pycbc.events.coherent": [[57, 3, 1, "", "coherent_snr"], [57, 3, 1, "", "coincident_snr"], [57, 3, 1, "", "get_coinc_indexes"], [57, 3, 1, "", "get_coinc_triggers"], [57, 3, 1, "", "get_projection_matrix"], [57, 3, 1, "", "network_chisq"], [57, 3, 1, "", "null_snr"], [57, 3, 1, "", "reweight_snr_by_null"], [57, 3, 1, "", "reweightedsnr_cut"]], "pycbc.events.coinc": [[57, 1, 1, "", "CoincExpireBuffer"], [57, 1, 1, "", "LiveCoincTimeslideBackgroundEstimator"], [57, 1, 1, "", "MultiRingBuffer"], [57, 3, 1, "", "background_bin_from_string"], [57, 3, 1, "", "cluster_coincs"], [57, 3, 1, "", "cluster_coincs_multiifo"], [57, 3, 1, "", "cluster_over_time"], [57, 3, 1, "", "mean_if_greater_than_zero"], [57, 3, 1, "", "time_coincidence"], [57, 3, 1, "", "time_multi_coincidence"], [57, 3, 1, "", "timeslide_durations"]], "pycbc.events.coinc.CoincExpireBuffer": [[57, 2, 1, "", "add"], [57, 4, 1, "", "data"], [57, 2, 1, "", "increment"], [57, 4, 1, "", "nbytes"], [57, 2, 1, "", "num_greater"], [57, 2, 1, "", "remove"]], "pycbc.events.coinc.LiveCoincTimeslideBackgroundEstimator": [[57, 2, 1, "", "add_singles"], [57, 4, 1, "", "background_time"], [57, 2, 1, "", "backout_last"], [57, 2, 1, "", "from_cli"], [57, 2, 1, "", "ifar"], [57, 2, 1, "", "insert_args"], [57, 2, 1, "", "pick_best_coinc"], [57, 2, 1, "", "refresh_statistic"], [57, 2, 1, "", "restore_state"], [57, 2, 1, "", "save_state"], [57, 2, 1, "", "set_singles_buffer"], [57, 2, 1, "", "start_refresh_thread"], [57, 2, 1, "", "verify_args"]], "pycbc.events.coinc.MultiRingBuffer": [[57, 2, 1, "", "add"], [57, 2, 1, "", "advance_time"], [57, 2, 1, "", "check_expired_triggers"], [57, 2, 1, "", "data"], [57, 2, 1, "", "discard_last"], [57, 2, 1, "", "expire_vector"], [57, 4, 1, "", "filled_time"], [57, 4, 1, "", "nbytes"], [57, 2, 1, "", "num_elements"], [57, 2, 1, "", "update_valid_start"], [57, 2, 1, "", "valid_slice"]], "pycbc.events.coinc_rate": [[57, 3, 1, "", "combination_noise_lograte"], [57, 3, 1, "", "combination_noise_rate"], [57, 3, 1, "", "multiifo_noise_coincident_area"], [57, 3, 1, "", "multiifo_noise_lograte"], [57, 3, 1, "", "multiifo_signal_coincident_area"]], "pycbc.events.cuts": [[57, 3, 1, "", "apply_template_cuts"], [57, 3, 1, "", "apply_template_fit_cut"], [57, 3, 1, "", "apply_trigger_cuts"], [57, 3, 1, "", "check_update_cuts"], [57, 3, 1, "", "convert_inputstr"], [57, 3, 1, "", "ingest_cuts_option_group"], [57, 3, 1, "", "insert_cuts_option_group"], [57, 3, 1, "", "sigma_multiple_cut_thresh"]], "pycbc.events.eventmgr": [[57, 1, 1, "", "EventManager"], [57, 1, 1, "", "EventManagerCoherent"], [57, 1, 1, "", "EventManagerMultiDet"], [57, 1, 1, "", "ThresholdCluster"], [57, 3, 1, "", "cluster_reduce"], [57, 3, 1, "", "findchirp_cluster_over_window"], [57, 3, 1, "", "threshold"], [57, 3, 1, "", "threshold_and_cluster"], [57, 3, 1, "", "threshold_only"], [57, 3, 1, "", "threshold_real_numpy"]], "pycbc.events.eventmgr.EventManager": [[57, 2, 1, "", "add_template_events"], [57, 2, 1, "", "add_template_params"], [57, 2, 1, "", "chisq_threshold"], [57, 2, 1, "", "cluster_template_events"], [57, 2, 1, "", "consolidate_events"], [57, 2, 1, "", "cut_events_via_indices"], [57, 2, 1, "", "cut_events_via_mask"], [57, 4, 1, "", "events"], [57, 2, 1, "", "finalize_events"], [57, 2, 1, "", "finalize_template_events"], [57, 2, 1, "", "from_multi_ifo_interface"], [57, 2, 1, "", "keep_loudest_in_interval"], [57, 2, 1, "", "keep_near_injection"], [57, 2, 1, "", "make_output_dir"], [57, 2, 1, "", "new_template"], [57, 2, 1, "", "newsnr_threshold"], [57, 2, 1, "", "restore_state"], [57, 2, 1, "", "save_performance"], [57, 2, 1, "", "save_state"], [57, 2, 1, "", "write_events"], [57, 2, 1, "", "write_to_hdf"]], "pycbc.events.eventmgr.EventManagerCoherent": [[57, 2, 1, "", "add_template_events_to_network"], [57, 2, 1, "", "add_template_network_events"], [57, 2, 1, "", "cluster_template_network_events"], [57, 2, 1, "", "finalize_template_events"], [57, 2, 1, "", "write_to_hdf"]], "pycbc.events.eventmgr.EventManagerMultiDet": [[57, 2, 1, "", "cluster_template_events_single_ifo"], [57, 2, 1, "", "finalize_template_events"], [57, 2, 1, "", "write_to_hdf"]], "pycbc.events.eventmgr_cython": [[57, 3, 1, "", "coincbuffer_expireelements"], [57, 3, 1, "", "coincbuffer_numgreater"], [57, 3, 1, "", "findchirp_cluster_over_window_cython"], [57, 3, 1, "", "logsignalrateinternals_compute2detrate"], [57, 3, 1, "", "logsignalrateinternals_computepsignalbins"], [57, 3, 1, "", "timecluster_cython"], [57, 3, 1, "", "timecoincidence_constructfold"], [57, 3, 1, "", "timecoincidence_constructidxs"], [57, 3, 1, "", "timecoincidence_findidxlen"], [57, 3, 1, "", "timecoincidence_getslideint"]], "pycbc.events.ranking": [[57, 3, 1, "", "effsnr"], [57, 3, 1, "", "get_newsnr"], [57, 3, 1, "", "get_newsnr_sgveto"], [57, 3, 1, "", "get_newsnr_sgveto_psdvar"], [57, 3, 1, "", "get_newsnr_sgveto_psdvar_scaled"], [57, 3, 1, "", "get_newsnr_sgveto_psdvar_scaled_threshold"], [57, 3, 1, "", "get_newsnr_sgveto_psdvar_threshold"], [57, 3, 1, "", "get_sngls_ranking_from_trigs"], [57, 3, 1, "", "get_snr"], [57, 3, 1, "", "newsnr"], [57, 3, 1, "", "newsnr_sgveto"], [57, 3, 1, "", "newsnr_sgveto_psdvar"], [57, 3, 1, "", "newsnr_sgveto_psdvar_scaled"], [57, 3, 1, "", "newsnr_sgveto_psdvar_scaled_threshold"], [57, 3, 1, "", "newsnr_sgveto_psdvar_threshold"]], "pycbc.events.significance": [[57, 3, 1, "", "apply_far_limit"], [57, 3, 1, "", "check_significance_options"], [57, 3, 1, "", "count_n_louder"], [57, 3, 1, "", "digest_significance_options"], [57, 3, 1, "", "get_far"], [57, 3, 1, "", "get_n_louder"], [57, 3, 1, "", "ifar_opt_to_far_limit"], [57, 3, 1, "", "insert_significance_option_group"], [57, 3, 1, "", "n_louder_from_fit"], [57, 3, 1, "", "positive_float"]], "pycbc.events.simd_threshold_cython": [[57, 3, 1, "", "parallel_thresh_cluster"], [57, 3, 1, "", "parallel_threshold"]], "pycbc.events.single": [[57, 1, 1, "", "LiveSingle"]], "pycbc.events.single.LiveSingle": [[57, 2, 1, "", "calculate_ifar"], [57, 2, 1, "", "check"], [57, 2, 1, "", "from_cli"], [57, 2, 1, "", "insert_args"], [57, 2, 1, "", "refresh_statistic"], [57, 2, 1, "", "start_refresh_thread"], [57, 2, 1, "", "verify_args"]], "pycbc.events.stat": [[57, 1, 1, "", "ExpFitCombinedSNR"], [57, 1, 1, "", "ExpFitStatistic"], [57, 1, 1, "", "PhaseTDStatistic"], [57, 1, 1, "", "QuadratureSumStatistic"], [57, 1, 1, "", "Stat"], [57, 3, 1, "", "get_statistic"], [57, 3, 1, "", "get_statistic_from_opts"], [57, 3, 1, "", "insert_statistic_option_group"], [57, 3, 1, "", "parse_statistic_feature_options"]], "pycbc.events.stat.ExpFitCombinedSNR": [[57, 2, 1, "", "coinc_lim_for_thresh"], [57, 2, 1, "", "rank_stat_coinc"], [57, 2, 1, "", "rank_stat_single"], [57, 2, 1, "", "single"]], "pycbc.events.stat.ExpFitStatistic": [[57, 2, 1, "", "assign_dq_rates"], [57, 2, 1, "", "assign_fits"], [57, 2, 1, "", "assign_kdes"], [57, 2, 1, "", "assign_template_bins"], [57, 2, 1, "", "check_low_latency"], [57, 2, 1, "", "coinc_lim_for_thresh"], [57, 2, 1, "", "find_dq_noise_rate"], [57, 2, 1, "", "find_dq_state_by_time"], [57, 2, 1, "", "find_fits"], [57, 2, 1, "", "find_kdes"], [57, 2, 1, "", "get_ref_vals"], [57, 2, 1, "", "kde_ratio"], [57, 2, 1, "", "lognoiserate"], [57, 2, 1, "", "logsignalrate_shared"], [57, 2, 1, "", "rank_stat_coinc"], [57, 2, 1, "", "rank_stat_single"], [57, 2, 1, "", "reassign_rate"], [57, 2, 1, "", "sensitive_volume_factor"], [57, 2, 1, "", "setup_segments"], [57, 2, 1, "", "single"], [57, 2, 1, "", "update_file"]], "pycbc.events.stat.PhaseTDStatistic": [[57, 2, 1, "", "coinc_lim_for_thresh"], [57, 2, 1, "", "get_hist"], [57, 2, 1, "", "logsignalrate"], [57, 2, 1, "", "rank_stat_coinc"], [57, 2, 1, "", "rank_stat_single"], [57, 2, 1, "", "single"], [57, 2, 1, "", "update_file"]], "pycbc.events.stat.QuadratureSumStatistic": [[57, 2, 1, "", "coinc_lim_for_thresh"], [57, 2, 1, "", "rank_stat_coinc"], [57, 2, 1, "", "rank_stat_single"], [57, 2, 1, "", "single"]], "pycbc.events.stat.Stat": [[57, 2, 1, "", "check_update_files"], [57, 2, 1, "", "coinc_lim_for_thresh"], [57, 2, 1, "", "files_changed"], [57, 2, 1, "", "get_file_hashes"], [57, 2, 1, "", "get_sngl_ranking"], [57, 2, 1, "", "rank_stat_coinc"], [57, 2, 1, "", "rank_stat_single"], [57, 2, 1, "", "single"], [57, 2, 1, "", "update_file"]], "pycbc.events.threshold_cpu": [[57, 1, 1, "", "CPUThresholdCluster"], [57, 3, 1, "", "threshold"], [57, 3, 1, "", "threshold_inline"], [57, 3, 1, "", "threshold_numpy"], [57, 3, 1, "", "threshold_only"]], "pycbc.events.threshold_cpu.CPUThresholdCluster": [[57, 2, 1, "", "threshold_and_cluster"]], "pycbc.events.threshold_cupy": [[57, 1, 1, "", "CUDAThresholdCluster"], [57, 3, 1, "", "get_tkernel"], [57, 3, 1, "", "threshold_and_cluster"]], "pycbc.events.threshold_cupy.CUDAThresholdCluster": [[57, 2, 1, "", "threshold_and_cluster"]], "pycbc.events.trigger_fits": [[57, 3, 1, "", "KS_test"], [57, 3, 1, "", "cum_fit"], [57, 3, 1, "", "exponential_fitalpha"], [57, 3, 1, "", "fit_above_thresh"], [57, 3, 1, "", "fit_fn"], [57, 3, 1, "", "power_fitalpha"], [57, 3, 1, "", "rayleigh_fitalpha"], [57, 3, 1, "", "tail_threshold"], [57, 3, 1, "", "which_bin"]], "pycbc.events.triggers": [[57, 3, 1, "", "bank_bins_from_cli"], [57, 3, 1, "", "get_found_param"], [57, 3, 1, "", "get_inj_param"], [57, 3, 1, "", "get_mass_spin"], [57, 3, 1, "", "get_param"], [57, 3, 1, "", "insert_bank_bins_option_group"]], "pycbc.events.veto": [[57, 3, 1, "", "get_segment_definer_comments"], [57, 3, 1, "", "indices_outside_segments"], [57, 3, 1, "", "indices_outside_times"], [57, 3, 1, "", "indices_within_segments"], [57, 3, 1, "", "indices_within_times"], [57, 3, 1, "", "segments_to_start_end"], [57, 3, 1, "", "select_segments_by_definer"], [57, 3, 1, "", "start_end_from_segments"], [57, 3, 1, "", "start_end_to_segments"]], "pycbc.fft": [[58, 0, 0, "-", "backend_cpu"], [58, 0, 0, "-", "backend_cupy"], [58, 0, 0, "-", "backend_mkl"], [58, 0, 0, "-", "backend_support"], [58, 0, 0, "-", "class_api"], [58, 0, 0, "-", "core"], [58, 0, 0, "-", "cupyfft"], [58, 0, 0, "-", "fft_callback"], [58, 0, 0, "-", "fftw"], [58, 0, 0, "-", "fftw_pruned"], [58, 0, 0, "-", "fftw_pruned_cython"], [58, 0, 0, "-", "func_api"], [58, 0, 0, "-", "mkl"], [58, 0, 0, "-", "npfft"], [58, 0, 0, "-", "parser_support"]], "pycbc.fft.backend_cpu": [[58, 3, 1, "", "get_backend"], [58, 3, 1, "", "set_backend"]], "pycbc.fft.backend_cupy": [[58, 3, 1, "", "get_backend"], [58, 3, 1, "", "set_backend"]], "pycbc.fft.backend_mkl": [[58, 3, 1, "", "get_backend"], [58, 3, 1, "", "set_backend"]], "pycbc.fft.backend_support": [[58, 3, 1, "", "get_backend"], [58, 3, 1, "", "get_backend_modules"], [58, 3, 1, "", "get_backend_names"], [58, 3, 1, "", "set_backend"]], "pycbc.fft.class_api": [[58, 1, 1, "", "FFT"], [58, 1, 1, "", "IFFT"]], "pycbc.fft.cupyfft": [[58, 1, 1, "", "FFT"], [58, 1, 1, "", "IFFT"], [58, 3, 1, "", "fft"], [58, 3, 1, "", "ifft"]], "pycbc.fft.cupyfft.FFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.cupyfft.IFFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.fft_callback": [[58, 3, 1, "", "c2c_correlate_ifft"], [58, 3, 1, "", "c2c_half_correlate_ifft"], [58, 3, 1, "", "compile"], [58, 3, 1, "", "get_fn_plan"], [58, 1, 1, "", "param"], [58, 1, 1, "", "param2"]], "pycbc.fft.fft_callback.param": [[58, 5, 1, "", "htilde"]], "pycbc.fft.fft_callback.param2": [[58, 5, 1, "", "htilde"], [58, 5, 1, "", "in_kmax"], [58, 5, 1, "", "out_kmax"], [58, 5, 1, "", "out_kmin"]], "pycbc.fft.fftw": [[58, 1, 1, "", "FFT"], [58, 1, 1, "", "IFFT"], [58, 3, 1, "", "execute"], [58, 3, 1, "", "export_double_wisdom_to_filename"], [58, 3, 1, "", "export_single_wisdom_to_filename"], [58, 3, 1, "", "fft"], [58, 3, 1, "", "from_cli"], [58, 3, 1, "", "get_flag"], [58, 3, 1, "", "get_measure_level"], [58, 3, 1, "", "ifft"], [58, 3, 1, "", "import_double_wisdom_from_filename"], [58, 3, 1, "", "import_single_wisdom_from_filename"], [58, 3, 1, "", "import_sys_wisdom"], [58, 3, 1, "", "insert_fft_options"], [58, 3, 1, "", "plan"], [58, 3, 1, "", "set_measure_level"], [58, 3, 1, "", "set_planning_limit"], [58, 3, 1, "", "set_threads_backend"], [58, 3, 1, "", "verify_fft_options"], [58, 3, 1, "", "wisdom_io"]], "pycbc.fft.fftw.FFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.fftw.IFFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.fftw_pruned": [[58, 3, 1, "", "fft_transpose"], [58, 3, 1, "", "fft_transpose_fftw"], [58, 3, 1, "", "first_phase"], [58, 3, 1, "", "plan_first_phase"], [58, 3, 1, "", "plan_transpose"], [58, 3, 1, "", "pruned_c2cifft"], [58, 3, 1, "", "second_phase"], [58, 3, 1, "", "splay"]], "pycbc.fft.fftw_pruned_cython": [[58, 3, 1, "", "second_phase_cython"]], "pycbc.fft.func_api": [[58, 3, 1, "", "fft"], [58, 3, 1, "", "ifft"]], "pycbc.fft.mkl": [[58, 1, 1, "", "FFT"], [58, 1, 1, "", "IFFT"], [58, 3, 1, "", "check_status"], [58, 3, 1, "", "create_descriptor"], [58, 3, 1, "", "fft"], [58, 3, 1, "", "ifft"]], "pycbc.fft.mkl.FFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.mkl.IFFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.npfft": [[58, 1, 1, "", "FFT"], [58, 1, 1, "", "IFFT"], [58, 3, 1, "", "fft"], [58, 3, 1, "", "ifft"]], "pycbc.fft.npfft.FFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.npfft.IFFT": [[58, 2, 1, "", "execute"]], "pycbc.fft.parser_support": [[58, 3, 1, "", "from_cli"], [58, 3, 1, "", "insert_fft_option_group"], [58, 3, 1, "", "verify_fft_options"]], "pycbc.filter": [[59, 0, 0, "-", "autocorrelation"], [59, 0, 0, "-", "matchedfilter"], [59, 0, 0, "-", "matchedfilter_cpu"], [59, 0, 0, "-", "matchedfilter_cupy"], [59, 0, 0, "-", "matchedfilter_numpy"], [59, 0, 0, "-", "qtransform"], [59, 0, 0, "-", "resample"], [59, 0, 0, "-", "simd_correlate"], [59, 0, 0, "-", "simd_correlate_cython"], [59, 0, 0, "-", "zpk"]], "pycbc.filter.autocorrelation": [[59, 3, 1, "", "calculate_acf"], [59, 3, 1, "", "calculate_acl"]], "pycbc.filter.matchedfilter": [[59, 1, 1, "", "LiveBatchMatchedFilter"], [59, 1, 1, "", "MatchedFilterControl"], [59, 1, 1, "", "MatchedFilterSkyMaxControl"], [59, 1, 1, "", "MatchedFilterSkyMaxControlNoPhase"], [59, 3, 1, "", "compute_followup_snr_series"], [59, 3, 1, "", "compute_max_snr_over_sky_loc_stat"], [59, 3, 1, "", "compute_max_snr_over_sky_loc_stat_no_phase"], [59, 3, 1, "", "compute_u_val_for_sky_loc_stat"], [59, 3, 1, "", "compute_u_val_for_sky_loc_stat_no_phase"], [59, 3, 1, "", "correlate"], [59, 3, 1, "", "followup_event_significance"], [59, 3, 1, "", "get_cutoff_indices"], [59, 3, 1, "", "make_frequency_series"], [59, 3, 1, "", "match"], [59, 3, 1, "", "matched_filter"], [59, 3, 1, "", "matched_filter_core"], [59, 3, 1, "", "optimized_match"], [59, 3, 1, "", "overlap"], [59, 3, 1, "", "overlap_cplx"], [59, 3, 1, "", "sigma"], [59, 3, 1, "", "sigmasq"], [59, 3, 1, "", "sigmasq_series"]], "pycbc.filter.matchedfilter.LiveBatchMatchedFilter": [[59, 2, 1, "", "combine_results"], [59, 2, 1, "", "process_all"], [59, 2, 1, "", "process_data"], [59, 2, 1, "", "set_data"]], "pycbc.filter.matchedfilter.MatchedFilterControl": [[59, 2, 1, "", "full_matched_filter_and_cluster_fc"], [59, 2, 1, "", "full_matched_filter_and_cluster_symm"], [59, 2, 1, "", "full_matched_filter_thresh_only"], [59, 2, 1, "", "hierarchical_matched_filter_and_cluster"]], "pycbc.filter.matchedfilter.MatchedFilterSkyMaxControl": [[59, 2, 1, "", "full_matched_filter_and_cluster"]], "pycbc.filter.matchedfilter_cpu": [[59, 1, 1, "", "CPUCorrelator"], [59, 3, 1, "", "batch_correlate_execute"], [59, 3, 1, "", "correlate"], [59, 3, 1, "", "correlate_numpy"]], "pycbc.filter.matchedfilter_cpu.CPUCorrelator": [[59, 2, 1, "", "correlate"]], "pycbc.filter.matchedfilter_cupy": [[59, 1, 1, "", "CUPYCorrelator"], [59, 3, 1, "", "correlate"]], "pycbc.filter.matchedfilter_cupy.CUPYCorrelator": [[59, 2, 1, "", "correlate"]], "pycbc.filter.matchedfilter_numpy": [[59, 3, 1, "", "correlate"]], "pycbc.filter.qtransform": [[59, 3, 1, "", "deltam_f"], [59, 3, 1, "", "qplane"], [59, 3, 1, "", "qseries"], [59, 3, 1, "", "qtiling"]], "pycbc.filter.resample": [[59, 3, 1, "", "fir_zero_filter"], [59, 3, 1, "", "highpass"], [59, 3, 1, "", "highpass_fir"], [59, 3, 1, "", "interpolate_complex_frequency"], [59, 3, 1, "", "lowpass"], [59, 3, 1, "", "lowpass_fir"], [59, 3, 1, "", "notch_fir"], [59, 3, 1, "", "resample_to_delta_t"]], "pycbc.filter.simd_correlate": [[59, 3, 1, "", "correlate_parallel"], [59, 3, 1, "", "correlate_simd"]], "pycbc.filter.simd_correlate_cython": [[59, 3, 1, "", "ccorrf_parallel"], [59, 3, 1, "", "ccorrf_simd"]], "pycbc.filter.zpk": [[59, 3, 1, "", "filter_zpk"]], "pycbc.frame": [[60, 3, 1, "", "flag_names_to_bitmask"], [60, 0, 0, "-", "frame"], [60, 0, 0, "-", "gwosc"], [60, 0, 0, "-", "store"]], "pycbc.frame.frame": [[60, 1, 1, "", "DataBuffer"], [60, 1, 1, "", "StatusBuffer"], [60, 3, 1, "", "frame_paths"], [60, 1, 1, "", "iDQBuffer"], [60, 3, 1, "", "locations_to_cache"], [60, 3, 1, "", "query_and_read_frame"], [60, 3, 1, "", "read_frame"], [60, 3, 1, "", "write_frame"]], "pycbc.frame.frame.DataBuffer": [[60, 2, 1, "", "advance"], [60, 2, 1, "", "attempt_advance"], [60, 2, 1, "", "null_advance"], [60, 2, 1, "", "update_cache"], [60, 2, 1, "", "update_cache_by_increment"]], "pycbc.frame.frame.StatusBuffer": [[60, 2, 1, "", "advance"], [60, 2, 1, "", "check_valid"], [60, 2, 1, "", "indices_of_flag"], [60, 2, 1, "", "is_extent_valid"]], "pycbc.frame.frame.iDQBuffer": [[60, 2, 1, "", "advance"], [60, 2, 1, "", "flag_at_times"], [60, 2, 1, "", "null_advance"]], "pycbc.frame.gwosc": [[60, 3, 1, "", "get_run"], [60, 3, 1, "", "gwosc_frame_json"], [60, 3, 1, "", "gwosc_frame_urls"], [60, 3, 1, "", "read_frame_gwosc"], [60, 3, 1, "", "read_strain_gwosc"]], "pycbc.frame.store": [[60, 3, 1, "", "read_store"]], "pycbc.inference": [[61, 0, 0, "-", "burn_in"], [61, 0, 0, "-", "entropy"], [61, 0, 0, "-", "evidence"], [61, 0, 0, "-", "gelman_rubin"], [61, 0, 0, "-", "geweke"], [62, 0, 0, "-", "io"], [63, 0, 0, "-", "jump"], [64, 0, 0, "-", "models"], [61, 0, 0, "-", "option_utils"], [65, 0, 0, "-", "sampler"]], "pycbc.inference.burn_in": [[61, 1, 1, "", "BaseBurnInTests"], [61, 1, 1, "", "EnsembleMCMCBurnInTests"], [61, 1, 1, "", "EnsembleMultiTemperedMCMCBurnInTests"], [61, 1, 1, "", "MCMCBurnInTests"], [61, 1, 1, "", "MultiTemperedMCMCBurnInTests"], [61, 3, 1, "", "evaluate_tests"], [61, 3, 1, "", "ks_test"], [61, 3, 1, "", "max_posterior"], [61, 3, 1, "", "nacl"], [61, 3, 1, "", "posterior_step"]], "pycbc.inference.burn_in.BaseBurnInTests": [[61, 5, 1, "", "available_tests"], [61, 2, 1, "", "burn_in_index"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "from_config"], [61, 2, 1, "", "halfchain"], [61, 2, 1, "", "max_posterior"], [61, 2, 1, "", "min_iterations"], [61, 2, 1, "", "nacl"], [61, 2, 1, "", "posterior_step"], [61, 2, 1, "", "write"]], "pycbc.inference.burn_in.EnsembleMCMCBurnInTests": [[61, 5, 1, "", "available_tests"], [61, 2, 1, "", "burn_in_index"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "ks_test"], [61, 2, 1, "", "max_posterior"], [61, 2, 1, "", "nacl"], [61, 2, 1, "", "posterior_step"]], "pycbc.inference.burn_in.MCMCBurnInTests": [[61, 2, 1, "", "burn_in_index"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "max_posterior"], [61, 2, 1, "", "nacl"], [61, 2, 1, "", "posterior_step"], [61, 2, 1, "", "write"]], "pycbc.inference.entropy": [[61, 3, 1, "", "check_hist_params"], [61, 3, 1, "", "compute_pdf"], [61, 3, 1, "", "entropy"], [61, 3, 1, "", "js"], [61, 3, 1, "", "kl"]], "pycbc.inference.evidence": [[61, 3, 1, "", "arithmetic_mean_estimator"], [61, 3, 1, "", "harmonic_mean_estimator"], [61, 3, 1, "", "stepping_stone_algorithm"], [61, 3, 1, "", "thermodynamic_integration"]], "pycbc.inference.gelman_rubin": [[61, 3, 1, "", "gelman_rubin"], [61, 3, 1, "", "walk"]], "pycbc.inference.geweke": [[61, 3, 1, "", "geweke"]], "pycbc.inference.io": [[62, 6, 1, "", "NoInputFileError"], [62, 1, 1, "", "PrintFileParams"], [62, 1, 1, "", "ResultsArgumentParser"], [62, 0, 0, "-", "base_hdf"], [62, 0, 0, "-", "base_mcmc"], [62, 0, 0, "-", "base_multitemper"], [62, 0, 0, "-", "base_nested_sampler"], [62, 0, 0, "-", "base_sampler"], [62, 3, 1, "", "check_integrity"], [62, 0, 0, "-", "dynesty"], [62, 0, 0, "-", "emcee"], [62, 0, 0, "-", "emcee_pt"], [62, 0, 0, "-", "epsie"], [62, 3, 1, "", "get_common_parameters"], [62, 3, 1, "", "get_file_type"], [62, 3, 1, "", "injections_from_cli"], [62, 3, 1, "", "loadfile"], [62, 0, 0, "-", "multinest"], [62, 0, 0, "-", "nessai"], [62, 0, 0, "-", "posterior"], [62, 0, 0, "-", "ptemcee"], [62, 3, 1, "", "results_from_cli"], [62, 0, 0, "-", "snowline"], [62, 0, 0, "-", "txt"], [62, 0, 0, "-", "ultranest"], [62, 3, 1, "", "validate_checkpoint_files"]], "pycbc.inference.io.ResultsArgumentParser": [[62, 4, 1, "", "actions"], [62, 2, 1, "", "add_results_option_group"], [62, 2, 1, "", "parse_known_args"]], "pycbc.inference.io.base_hdf": [[62, 1, 1, "", "BaseInferenceFile"], [62, 3, 1, "", "format_attr"]], "pycbc.inference.io.base_hdf.BaseInferenceFile": [[62, 4, 1, "", "cmd"], [62, 5, 1, "", "config_group"], [62, 2, 1, "", "copy"], [62, 2, 1, "", "copy_info"], [62, 2, 1, "", "copy_metadata"], [62, 2, 1, "", "copy_samples"], [62, 5, 1, "", "data_group"], [62, 4, 1, "", "effective_nsamples"], [62, 2, 1, "", "extra_args_parser"], [62, 2, 1, "", "get_slice"], [62, 2, 1, "", "getattrs"], [62, 5, 1, "", "injections_group"], [62, 4, 1, "", "log_evidence"], [62, 5, 1, "", "name"], [62, 2, 1, "", "parse_parameters"], [62, 2, 1, "", "read_config_file"], [62, 2, 1, "", "read_data"], [62, 2, 1, "", "read_injections"], [62, 2, 1, "", "read_psds"], [62, 2, 1, "", "read_random_state"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "read_samples"], [62, 5, 1, "", "sampler_group"], [62, 2, 1, "", "samples_from_cli"], [62, 5, 1, "", "samples_group"], [62, 4, 1, "", "static_params"], [62, 4, 1, "", "thin_end"], [62, 4, 1, "", "thin_interval"], [62, 4, 1, "", "thin_start"], [62, 2, 1, "", "write_command_line"], [62, 2, 1, "", "write_config_file"], [62, 2, 1, "", "write_data"], [62, 2, 1, "", "write_effective_nsamples"], [62, 2, 1, "", "write_injections"], [62, 2, 1, "", "write_kwargs_to_attrs"], [62, 2, 1, "", "write_logevidence"], [62, 2, 1, "", "write_psd"], [62, 2, 1, "", "write_random_state"], [62, 2, 1, "", "write_samples"], [62, 2, 1, "", "write_stilde"], [62, 2, 1, "", "write_strain"]], "pycbc.inference.io.base_mcmc": [[62, 1, 1, "", "CommonMCMCMetadataIO"], [62, 1, 1, "", "EnsembleMCMCMetadataIO"], [62, 1, 1, "", "MCMCMetadataIO"], [62, 3, 1, "", "ensemble_read_raw_samples"], [62, 3, 1, "", "nsamples_in_chain"], [62, 3, 1, "", "thin_samples_for_writing"], [62, 3, 1, "", "write_samples"]], "pycbc.inference.io.base_mcmc.CommonMCMCMetadataIO": [[62, 4, 1, "", "acl"], [62, 4, 1, "", "act"], [62, 4, 1, "", "burn_in_index"], [62, 4, 1, "", "burn_in_iteration"], [62, 2, 1, "", "extra_args_parser"], [62, 4, 1, "", "is_burned_in"], [62, 2, 1, "", "iterations"], [62, 2, 1, "", "last_iteration"], [62, 4, 1, "", "nchains"], [62, 4, 1, "", "niterations"], [62, 4, 1, "", "nwalkers"], [62, 4, 1, "", "raw_acls"], [62, 4, 1, "", "raw_acts"], [62, 2, 1, "", "thin"], [62, 4, 1, "", "thinned_by"], [62, 2, 1, "", "write_niterations"], [62, 2, 1, "", "write_resume_point"], [62, 2, 1, "", "write_sampler_metadata"]], "pycbc.inference.io.base_mcmc.EnsembleMCMCMetadataIO": [[62, 4, 1, "", "thin_interval"], [62, 4, 1, "", "thin_start"]], "pycbc.inference.io.base_mcmc.MCMCMetadataIO": [[62, 4, 1, "", "thin_interval"], [62, 4, 1, "", "thin_start"]], "pycbc.inference.io.base_multitemper": [[62, 1, 1, "", "CommonMultiTemperedMetadataIO"], [62, 1, 1, "", "ParseTempsArg"], [62, 3, 1, "", "ensemble_read_raw_samples"], [62, 3, 1, "", "read_raw_samples"], [62, 3, 1, "", "write_samples"]], "pycbc.inference.io.base_multitemper.CommonMultiTemperedMetadataIO": [[62, 2, 1, "", "extra_args_parser"], [62, 4, 1, "", "ntemps"], [62, 2, 1, "", "write_sampler_metadata"]], "pycbc.inference.io.base_nested_sampler": [[62, 1, 1, "", "BaseNestedSamplerFile"]], "pycbc.inference.io.base_nested_sampler.BaseNestedSamplerFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "write_niterations"], [62, 2, 1, "", "write_resume_point"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.base_sampler": [[62, 1, 1, "", "BaseSamplerFile"]], "pycbc.inference.io.base_sampler.BaseSamplerFile": [[62, 4, 1, "", "run_end_time"], [62, 4, 1, "", "run_start_time"], [62, 2, 1, "", "update_checkpoint_history"], [62, 2, 1, "", "validate"], [62, 2, 1, "", "write_resume_point"], [62, 2, 1, "", "write_run_end_time"], [62, 2, 1, "", "write_run_start_time"], [62, 2, 1, "", "write_sampler_metadata"]], "pycbc.inference.io.dynesty": [[62, 1, 1, "", "CommonNestedMetadataIO"], [62, 1, 1, "", "DynestyFile"]], "pycbc.inference.io.dynesty.CommonNestedMetadataIO": [[62, 2, 1, "", "extra_args_parser"], [62, 2, 1, "", "read_pickled_data_from_checkpoint_file"], [62, 2, 1, "", "validate"], [62, 2, 1, "", "write_pickled_data_into_checkpoint_file"], [62, 2, 1, "", "write_raw_samples"]], "pycbc.inference.io.dynesty.DynestyFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_raw_samples"]], "pycbc.inference.io.emcee": [[62, 1, 1, "", "EmceeFile"]], "pycbc.inference.io.emcee.EmceeFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_acceptance_fraction"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "write_acceptance_fraction"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.emcee_pt": [[62, 1, 1, "", "EmceePTFile"]], "pycbc.inference.io.emcee_pt.EmceePTFile": [[62, 4, 1, "", "betas"], [62, 5, 1, "", "name"], [62, 2, 1, "", "read_acceptance_fraction"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "write_acceptance_fraction"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.epsie": [[62, 1, 1, "", "EpsieFile"]], "pycbc.inference.io.epsie.EpsieFile": [[62, 4, 1, "", "betas"], [62, 5, 1, "", "name"], [62, 4, 1, "", "nchains"], [62, 2, 1, "", "read_acceptance_fraction"], [62, 2, 1, "", "read_acceptance_rate"], [62, 2, 1, "", "read_acceptance_ratio"], [62, 2, 1, "", "read_raw_samples"], [62, 4, 1, "", "seed"], [62, 4, 1, "", "swap_interval"], [62, 2, 1, "", "thin"], [62, 2, 1, "", "validate"], [62, 2, 1, "", "write_acceptance_ratio"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"], [62, 2, 1, "", "write_temperature_data"]], "pycbc.inference.io.multinest": [[62, 1, 1, "", "MultinestFile"]], "pycbc.inference.io.multinest.MultinestFile": [[62, 5, 1, "", "name"], [62, 4, 1, "", "niterations"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "write_logevidence"], [62, 2, 1, "", "write_niterations"], [62, 2, 1, "", "write_resume_point"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.nessai": [[62, 1, 1, "", "NessaiFile"]], "pycbc.inference.io.nessai.NessaiFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_raw_samples"]], "pycbc.inference.io.posterior": [[62, 1, 1, "", "PosteriorFile"], [62, 3, 1, "", "read_raw_samples_from_file"], [62, 3, 1, "", "write_samples_to_file"]], "pycbc.inference.io.posterior.PosteriorFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_raw_samples"], [62, 2, 1, "", "write_resume_point"], [62, 2, 1, "", "write_run_end_time"], [62, 2, 1, "", "write_run_start_time"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.ptemcee": [[62, 1, 1, "", "PTEmceeFile"]], "pycbc.inference.io.ptemcee.PTEmceeFile": [[62, 5, 1, "", "name"], [62, 2, 1, "", "read_betas"], [62, 2, 1, "", "read_ensemble_attrs"], [62, 2, 1, "", "read_raw_samples"], [62, 4, 1, "", "starting_betas"], [62, 2, 1, "", "write_betas"], [62, 2, 1, "", "write_ensemble_attrs"], [62, 2, 1, "", "write_sampler_metadata"], [62, 2, 1, "", "write_samples"]], "pycbc.inference.io.snowline": [[62, 1, 1, "", "SnowlineFile"]], "pycbc.inference.io.snowline.SnowlineFile": [[62, 5, 1, "", "name"]], "pycbc.inference.io.txt": [[62, 1, 1, "", "InferenceTXTFile"]], "pycbc.inference.io.txt.InferenceTXTFile": [[62, 5, 1, "", "comments"], [62, 5, 1, "", "delimiter"], [62, 5, 1, "", "name"], [62, 2, 1, "", "write"]], "pycbc.inference.io.ultranest": [[62, 1, 1, "", "UltranestFile"]], "pycbc.inference.io.ultranest.UltranestFile": [[62, 5, 1, "", "name"]], "pycbc.inference.jump": [[63, 0, 0, "-", "angular"], [63, 0, 0, "-", "bounded_normal"], [63, 0, 0, "-", "discrete"], [63, 3, 1, "", "epsie_proposals_from_config"], [63, 0, 0, "-", "normal"]], "pycbc.inference.jump.angular": [[63, 1, 1, "", "EpsieATAdaptiveAngular"], [63, 1, 1, "", "EpsieAdaptiveAngular"], [63, 1, 1, "", "EpsieAngular"]], "pycbc.inference.jump.angular.EpsieATAdaptiveAngular": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.angular.EpsieAdaptiveAngular": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.angular.EpsieAngular": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.bounded_normal": [[63, 1, 1, "", "EpsieATAdaptiveBoundedNormal"], [63, 1, 1, "", "EpsieAdaptiveBoundedNormal"], [63, 1, 1, "", "EpsieBoundedNormal"]], "pycbc.inference.jump.bounded_normal.EpsieATAdaptiveBoundedNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.bounded_normal.EpsieAdaptiveBoundedNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.bounded_normal.EpsieBoundedNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.discrete": [[63, 1, 1, "", "EpsieAdaptiveBoundedDiscrete"], [63, 1, 1, "", "EpsieAdaptiveNormalDiscrete"], [63, 1, 1, "", "EpsieBoundedDiscrete"], [63, 1, 1, "", "EpsieNormalDiscrete"]], "pycbc.inference.jump.discrete.EpsieAdaptiveBoundedDiscrete": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.discrete.EpsieAdaptiveNormalDiscrete": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.discrete.EpsieBoundedDiscrete": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.discrete.EpsieNormalDiscrete": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.normal": [[63, 1, 1, "", "EpsieATAdaptiveNormal"], [63, 1, 1, "", "EpsieAdaptiveNormal"], [63, 1, 1, "", "EpsieNormal"], [63, 3, 1, "", "epsie_adaptive_from_config"], [63, 3, 1, "", "epsie_at_adaptive_from_config"], [63, 3, 1, "", "epsie_from_config"], [63, 3, 1, "", "get_epsie_adaptation_settings"], [63, 3, 1, "", "get_epsie_discrete_successive_settings"], [63, 3, 1, "", "get_param_boundaries"], [63, 3, 1, "", "get_variance"], [63, 3, 1, "", "load_opts"]], "pycbc.inference.jump.normal.EpsieATAdaptiveNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.normal.EpsieAdaptiveNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.jump.normal.EpsieNormal": [[63, 2, 1, "", "from_config"]], "pycbc.inference.models": [[64, 1, 1, "", "CallModel"], [64, 0, 0, "-", "analytic"], [64, 3, 1, "", "available_models"], [64, 0, 0, "-", "base"], [64, 0, 0, "-", "base_data"], [64, 0, 0, "-", "brute_marg"], [64, 0, 0, "-", "data_utils"], [64, 0, 0, "-", "gated_gaussian_noise"], [64, 0, 0, "-", "gaussian_noise"], [64, 3, 1, "", "get_model"], [64, 3, 1, "", "get_models"], [64, 0, 0, "-", "hierarchical"], [64, 0, 0, "-", "marginalized_gaussian_noise"], [64, 3, 1, "", "read_from_config"], [64, 3, 1, "", "register_model"], [64, 0, 0, "-", "relbin"], [64, 0, 0, "-", "relbin_cpu"], [64, 0, 0, "-", "single_template"], [64, 0, 0, "-", "tools"]], "pycbc.inference.models.analytic": [[64, 1, 1, "", "TestEggbox"], [64, 1, 1, "", "TestNormal"], [64, 1, 1, "", "TestPosterior"], [64, 1, 1, "", "TestPrior"], [64, 1, 1, "", "TestRosenbrock"], [64, 1, 1, "", "TestVolcano"]], "pycbc.inference.models.analytic.TestEggbox": [[64, 5, 1, "", "name"]], "pycbc.inference.models.analytic.TestNormal": [[64, 5, 1, "", "name"]], "pycbc.inference.models.analytic.TestPosterior": [[64, 5, 1, "", "name"]], "pycbc.inference.models.analytic.TestPrior": [[64, 5, 1, "", "name"]], "pycbc.inference.models.analytic.TestRosenbrock": [[64, 5, 1, "", "name"]], "pycbc.inference.models.analytic.TestVolcano": [[64, 5, 1, "", "name"]], "pycbc.inference.models.base": [[64, 1, 1, "", "BaseModel"], [64, 1, 1, "", "ModelStats"], [64, 1, 1, "", "SamplingTransforms"], [64, 3, 1, "", "check_for_cartesian_spins"], [64, 3, 1, "", "read_sampling_params_from_config"]], "pycbc.inference.models.base.BaseModel": [[64, 4, 1, "", "current_params"], [64, 4, 1, "", "current_stats"], [64, 4, 1, "", "default_stats"], [64, 2, 1, "", "extra_args_from_config"], [64, 2, 1, "", "from_config"], [64, 2, 1, "", "get_current_stats"], [64, 4, 1, "", "logjacobian"], [64, 4, 1, "", "loglikelihood"], [64, 4, 1, "", "logposterior"], [64, 4, 1, "", "logprior"], [64, 5, 1, "", "name"], [64, 2, 1, "", "prior_from_config"], [64, 2, 1, "", "prior_rvs"], [64, 4, 1, "", "sampling_params"], [64, 4, 1, "", "static_params"], [64, 2, 1, "", "update"], [64, 4, 1, "", "variable_params"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.base.ModelStats": [[64, 2, 1, "", "getstats"], [64, 2, 1, "", "getstatsdict"], [64, 4, 1, "", "statnames"]], "pycbc.inference.models.base.SamplingTransforms": [[64, 2, 1, "", "apply"], [64, 2, 1, "", "from_config"], [64, 2, 1, "", "logjacobian"]], "pycbc.inference.models.base_data": [[64, 1, 1, "", "BaseDataModel"]], "pycbc.inference.models.base_data.BaseDataModel": [[64, 4, 1, "", "data"], [64, 4, 1, "", "detectors"], [64, 4, 1, "", "loglr"], [64, 4, 1, "", "lognl"], [64, 4, 1, "", "logplr"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.brute_marg": [[64, 1, 1, "", "BruteLISASkyModesMarginalize"], [64, 1, 1, "", "BruteParallelGaussianMarginalize"], [64, 1, 1, "", "likelihood_wrapper"]], "pycbc.inference.models.brute_marg.BruteLISASkyModesMarginalize": [[64, 2, 1, "", "from_config"], [64, 5, 1, "", "name"], [64, 2, 1, "", "reconstruct"]], "pycbc.inference.models.brute_marg.BruteParallelGaussianMarginalize": [[64, 5, 1, "", "name"]], "pycbc.inference.models.data_utils": [[64, 6, 1, "", "NoValidDataError"], [64, 3, 1, "", "check_for_nans"], [64, 3, 1, "", "check_validtimes"], [64, 3, 1, "", "create_data_parser"], [64, 3, 1, "", "data_from_cli"], [64, 3, 1, "", "data_opts_from_config"], [64, 3, 1, "", "detectors_with_valid_data"], [64, 3, 1, "", "fd_data_from_strain_dict"], [64, 3, 1, "", "gate_overwhitened_data"], [64, 3, 1, "", "strain_from_cli_multi_ifos"]], "pycbc.inference.models.gated_gaussian_noise": [[64, 1, 1, "", "BaseGatedGaussian"], [64, 1, 1, "", "GatedGaussianMargPol"], [64, 1, 1, "", "GatedGaussianNoise"]], "pycbc.inference.models.gated_gaussian_noise.BaseGatedGaussian": [[64, 4, 1, "", "data"], [64, 2, 1, "", "det_lognl"], [64, 2, 1, "", "det_lognorm"], [64, 2, 1, "", "from_config"], [64, 2, 1, "", "gate_indices"], [64, 2, 1, "", "get_data"], [64, 2, 1, "", "get_gate_times"], [64, 2, 1, "", "get_gate_times_hmeco"], [64, 2, 1, "", "get_gated_data"], [64, 2, 1, "", "get_gated_waveforms"], [64, 2, 1, "", "get_waveforms"], [64, 2, 1, "", "logdet_fit"], [64, 4, 1, "", "normalize"], [64, 4, 1, "", "psds"], [64, 4, 1, "", "td_data"], [64, 2, 1, "", "whiten"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.gated_gaussian_noise.GatedGaussianMargPol": [[64, 2, 1, "", "get_gate_times_hmeco"], [64, 2, 1, "", "get_gated_waveforms"], [64, 2, 1, "", "get_waveforms"], [64, 2, 1, "", "multi_loglikelihood"], [64, 4, 1, "", "multi_signal_support"], [64, 5, 1, "", "name"]], "pycbc.inference.models.gated_gaussian_noise.GatedGaussianNoise": [[64, 2, 1, "", "get_gated_waveforms"], [64, 2, 1, "", "get_waveforms"], [64, 2, 1, "", "multi_loglikelihood"], [64, 4, 1, "", "multi_signal_support"], [64, 5, 1, "", "name"]], "pycbc.inference.models.gaussian_noise": [[64, 1, 1, "", "BaseGaussianNoise"], [64, 1, 1, "", "GaussianNoise"], [64, 3, 1, "", "catch_waveform_error"], [64, 3, 1, "", "create_waveform_generator"], [64, 3, 1, "", "get_values_from_injection"]], "pycbc.inference.models.gaussian_noise.BaseGaussianNoise": [[64, 2, 1, "", "det_lognl"], [64, 2, 1, "", "det_lognorm"], [64, 2, 1, "", "from_config"], [64, 4, 1, "", "high_frequency_cutoff"], [64, 5, 1, "", "ignore_failed_waveforms"], [64, 4, 1, "", "kmax"], [64, 4, 1, "", "kmin"], [64, 4, 1, "", "lognorm"], [64, 4, 1, "", "low_frequency_cutoff"], [64, 4, 1, "", "normalize"], [64, 4, 1, "", "psd_segments"], [64, 4, 1, "", "psds"], [64, 2, 1, "", "set_psd_segments"], [64, 2, 1, "", "update"], [64, 4, 1, "", "weight"], [64, 4, 1, "", "whitened_data"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.gaussian_noise.GaussianNoise": [[64, 2, 1, "", "det_cplx_loglr"], [64, 2, 1, "", "det_optimal_snrsq"], [64, 2, 1, "", "get_waveforms"], [64, 2, 1, "", "multi_loglikelihood"], [64, 4, 1, "", "multi_signal_support"], [64, 5, 1, "", "name"]], "pycbc.inference.models.hierarchical": [[64, 1, 1, "", "HierarchicalModel"], [64, 1, 1, "", "HierarchicalParam"], [64, 1, 1, "", "JointPrimaryMarginalizedModel"], [64, 1, 1, "", "MultiSignalModel"], [64, 3, 1, "", "hpiter"], [64, 3, 1, "", "map_params"]], "pycbc.inference.models.hierarchical.HierarchicalModel": [[64, 2, 1, "", "from_config"], [64, 4, 1, "", "hstatic_params"], [64, 4, 1, "", "hvariable_params"], [64, 5, 1, "", "name"], [64, 4, 1, "", "static_params"], [64, 4, 1, "", "variable_params"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.hierarchical.HierarchicalParam": [[64, 5, 1, "", "delim"], [64, 2, 1, "", "from_subname"], [64, 5, 1, "", "fullname"], [64, 5, 1, "", "model_delim"], [64, 5, 1, "", "models"], [64, 2, 1, "", "parse"], [64, 5, 1, "", "subname"]], "pycbc.inference.models.hierarchical.JointPrimaryMarginalizedModel": [[64, 2, 1, "", "from_config"], [64, 5, 1, "", "name"], [64, 2, 1, "", "others_lognl"], [64, 2, 1, "", "reconstruct"], [64, 2, 1, "", "total_loglr"], [64, 2, 1, "", "update_all_models"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.hierarchical.MultiSignalModel": [[64, 5, 1, "", "name"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.marginalized_gaussian_noise": [[64, 1, 1, "", "MarginalizedHMPolPhase"], [64, 1, 1, "", "MarginalizedPhaseGaussianNoise"], [64, 1, 1, "", "MarginalizedPolarization"], [64, 1, 1, "", "MarginalizedTime"]], "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedHMPolPhase": [[64, 5, 1, "", "name"], [64, 2, 1, "", "phase_fac"]], "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise": [[64, 5, 1, "", "name"]], "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPolarization": [[64, 5, 1, "", "name"]], "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedTime": [[64, 5, 1, "", "name"]], "pycbc.inference.models.relbin": [[64, 1, 1, "", "Relative"], [64, 1, 1, "", "RelativeTime"], [64, 1, 1, "", "RelativeTimeDom"], [64, 3, 1, "", "setup_bins"]], "pycbc.inference.models.relbin.Relative": [[64, 2, 1, "", "calculate_hihjs"], [64, 2, 1, "", "combine_layout"], [64, 2, 1, "", "extra_args_from_config"], [64, 2, 1, "", "get_waveforms"], [64, 2, 1, "", "init_from_frequencies"], [64, 4, 1, "", "likelihood_function"], [64, 2, 1, "", "max_curvature_from_reference"], [64, 2, 1, "", "multi_loglikelihood"], [64, 4, 1, "", "multi_signal_support"], [64, 5, 1, "", "name"], [64, 2, 1, "", "setup_antenna"], [64, 2, 1, "", "summary_product"], [64, 2, 1, "", "write_metadata"]], "pycbc.inference.models.relbin.RelativeTime": [[64, 2, 1, "", "get_snr"], [64, 5, 1, "", "name"], [64, 4, 1, "", "ref_snr"]], "pycbc.inference.models.relbin.RelativeTimeDom": [[64, 2, 1, "", "get_snr"], [64, 5, 1, "", "name"]], "pycbc.inference.models.relbin_cpu": [[64, 3, 1, "", "likelihood_parts"], [64, 3, 1, "", "likelihood_parts_det"], [64, 3, 1, "", "likelihood_parts_det_multi"], [64, 3, 1, "", "likelihood_parts_multi"], [64, 3, 1, "", "likelihood_parts_multi_v"], [64, 3, 1, "", "likelihood_parts_v"], [64, 3, 1, "", "likelihood_parts_v_pol"], [64, 3, 1, "", "likelihood_parts_v_pol_time"], [64, 3, 1, "", "likelihood_parts_v_time"], [64, 3, 1, "", "likelihood_parts_vector"], [64, 3, 1, "", "likelihood_parts_vectorp"], [64, 3, 1, "", "likelihood_parts_vectort"], [64, 3, 1, "", "snr_predictor"], [64, 3, 1, "", "snr_predictor_dom"]], "pycbc.inference.models.single_template": [[64, 1, 1, "", "SingleTemplate"]], "pycbc.inference.models.single_template.SingleTemplate": [[64, 2, 1, "", "calculate_hihjs"], [64, 2, 1, "", "multi_loglikelihood"], [64, 4, 1, "", "multi_signal_support"], [64, 5, 1, "", "name"]], "pycbc.inference.models.tools": [[64, 1, 1, "", "DistMarg"], [64, 3, 1, "", "draw_sample"], [64, 3, 1, "", "marginalize_likelihood"], [64, 3, 1, "", "setup_distance_marg_interpolant"], [64, 3, 1, "", "str_to_bool"], [64, 3, 1, "", "str_to_tuple"]], "pycbc.inference.models.tools.DistMarg": [[64, 4, 1, "", "current_params"], [64, 2, 1, "", "draw_ifos"], [64, 2, 1, "", "draw_sky_times"], [64, 2, 1, "", "draw_times"], [64, 2, 1, "", "get_precalc_antenna_factors"], [64, 2, 1, "", "marginalize_loglr"], [64, 2, 1, "", "premarg_draw"], [64, 2, 1, "", "reconstruct"], [64, 2, 1, "", "reset_vector_params"], [64, 2, 1, "", "setup_marginalization"], [64, 2, 1, "", "setup_peak_lock"], [64, 2, 1, "", "snr_draw"]], "pycbc.inference.option_utils": [[61, 1, 1, "", "ParseLabelArg"], [61, 1, 1, "", "ParseParametersArg"], [61, 3, 1, "", "add_density_option_group"], [61, 3, 1, "", "add_injsamples_map_opt"], [61, 3, 1, "", "add_plot_posterior_option_group"], [61, 3, 1, "", "add_scatter_option_group"], [61, 3, 1, "", "expected_parameters_from_cli"], [61, 3, 1, "", "plot_ranges_from_cli"]], "pycbc.inference.sampler": [[65, 0, 0, "-", "base"], [65, 0, 0, "-", "base_cube"], [65, 0, 0, "-", "base_mcmc"], [65, 0, 0, "-", "base_multitemper"], [65, 0, 0, "-", "dummy"], [65, 0, 0, "-", "dynesty"], [65, 0, 0, "-", "emcee"], [65, 0, 0, "-", "emcee_pt"], [65, 0, 0, "-", "epsie"], [65, 0, 0, "-", "games"], [65, 3, 1, "", "load_from_config"], [65, 0, 0, "-", "multinest"], [65, 0, 0, "-", "nessai"], [65, 0, 0, "-", "ptemcee"], [65, 0, 0, "-", "refine"], [65, 0, 0, "-", "snowline"], [65, 0, 0, "-", "ultranest"]], "pycbc.inference.sampler.base": [[65, 1, 1, "", "BaseSampler"], [65, 3, 1, "", "create_new_output_file"], [65, 3, 1, "", "initial_dist_from_config"], [65, 3, 1, "", "setup_output"]], "pycbc.inference.sampler.base.BaseSampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 4, 1, "", "sampling_params"], [65, 4, 1, "", "static_params"], [65, 4, 1, "", "variable_params"]], "pycbc.inference.sampler.base_cube": [[65, 1, 1, "", "CubeModel"], [65, 3, 1, "", "call_global_loglikelihood"], [65, 3, 1, "", "call_global_logprior"], [65, 3, 1, "", "setup_calls"]], "pycbc.inference.sampler.base_cube.CubeModel": [[65, 2, 1, "", "log_likelihood"], [65, 2, 1, "", "prior_transform"]], "pycbc.inference.sampler.base_mcmc": [[65, 1, 1, "", "BaseMCMC"], [65, 1, 1, "", "EnsembleSupport"], [65, 3, 1, "", "blob_data_to_dict"], [65, 3, 1, "", "ensemble_compute_acf"], [65, 3, 1, "", "ensemble_compute_acl"], [65, 3, 1, "", "get_optional_arg_from_config"], [65, 3, 1, "", "raw_samples_to_dict"]], "pycbc.inference.sampler.base_mcmc.BaseMCMC": [[65, 2, 1, "", "acl"], [65, 4, 1, "", "act"], [65, 4, 1, "", "base_shape"], [65, 4, 1, "", "burn_in"], [65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "checkpoint_from_config"], [65, 4, 1, "", "checkpoint_interval"], [65, 4, 1, "", "checkpoint_signal"], [65, 2, 1, "", "ckpt_signal_from_config"], [65, 2, 1, "", "clear_samples"], [65, 2, 1, "", "compute_acf"], [65, 2, 1, "", "compute_acl"], [65, 2, 1, "", "effective_nsamples"], [65, 2, 1, "", "get_thin_interval"], [65, 4, 1, "", "max_samples_per_chain"], [65, 4, 1, "", "nchains"], [65, 4, 1, "", "niterations"], [65, 4, 1, "", "p0"], [65, 4, 1, "", "pos"], [65, 4, 1, "", "raw_acls"], [65, 4, 1, "", "raw_acts"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 2, 1, "", "run_mcmc"], [65, 2, 1, "", "set_burn_in"], [65, 2, 1, "", "set_burn_in_from_config"], [65, 2, 1, "", "set_p0"], [65, 2, 1, "", "set_start_from_config"], [65, 2, 1, "", "set_state_from_file"], [65, 2, 1, "", "set_target"], [65, 2, 1, "", "set_target_from_config"], [65, 2, 1, "", "set_thin_interval_from_config"], [65, 4, 1, "", "target_eff_nsamples"], [65, 4, 1, "", "target_niterations"], [65, 4, 1, "", "thin_interval"], [65, 4, 1, "", "thin_safety_factor"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.base_mcmc.EnsembleSupport": [[65, 4, 1, "", "acl"], [65, 4, 1, "", "effective_nsamples"], [65, 4, 1, "", "nwalkers"]], "pycbc.inference.sampler.base_multitemper": [[65, 1, 1, "", "MultiTemperedSupport"], [65, 3, 1, "", "acl_from_raw_acls"], [65, 3, 1, "", "compute_acf"], [65, 3, 1, "", "compute_acl"], [65, 3, 1, "", "ensemble_compute_acf"], [65, 3, 1, "", "ensemble_compute_acl"], [65, 3, 1, "", "read_betas_from_hdf"]], "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport": [[65, 2, 1, "", "betas_from_config"], [65, 4, 1, "", "ntemps"]], "pycbc.inference.sampler.dummy": [[65, 1, 1, "", "DummySampler"], [65, 3, 1, "", "call_reconstruct"]], "pycbc.inference.sampler.dummy.DummySampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"]], "pycbc.inference.sampler.dynesty": [[65, 1, 1, "", "DynestySampler"], [65, 3, 1, "", "estimate_nmcmc"], [65, 3, 1, "", "sample_rwalk_mod"]], "pycbc.inference.sampler.dynesty.DynestySampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "logz"], [65, 4, 1, "", "logz_err"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "niterations"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "set_initial_conditions"], [65, 2, 1, "", "set_state_from_file"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.emcee": [[65, 1, 1, "", "EmceeEnsembleSampler"]], "pycbc.inference.sampler.emcee.EmceeEnsembleSampler": [[65, 4, 1, "", "base_shape"], [65, 5, 1, "", "burn_in_class"], [65, 2, 1, "", "clear_samples"], [65, 2, 1, "", "compute_acf"], [65, 2, 1, "", "compute_acl"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 2, 1, "", "run_mcmc"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "set_state_from_file"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.emcee_pt": [[65, 1, 1, "", "EmceePTSampler"]], "pycbc.inference.sampler.emcee_pt.EmceePTSampler": [[65, 4, 1, "", "base_shape"], [65, 4, 1, "", "betas"], [65, 5, 1, "", "burn_in_class"], [65, 2, 1, "", "calculate_logevidence"], [65, 2, 1, "", "clear_samples"], [65, 2, 1, "", "compute_acf"], [65, 2, 1, "", "compute_acl"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 2, 1, "", "run_mcmc"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "set_state_from_file"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.epsie": [[65, 1, 1, "", "EpsieSampler"]], "pycbc.inference.sampler.epsie.EpsieSampler": [[65, 4, 1, "", "acl"], [65, 4, 1, "", "base_shape"], [65, 4, 1, "", "betas"], [65, 5, 1, "", "burn_in_class"], [65, 2, 1, "", "clear_samples"], [65, 2, 1, "", "compute_acf"], [65, 2, 1, "", "compute_acl"], [65, 4, 1, "", "effective_nsamples"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "pos"], [65, 2, 1, "", "run_mcmc"], [65, 4, 1, "", "samples"], [65, 4, 1, "", "seed"], [65, 2, 1, "", "set_p0"], [65, 2, 1, "", "set_state_from_file"], [65, 4, 1, "", "swap_interval"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.games": [[65, 1, 1, "", "GameSampler"], [65, 6, 1, "", "OutOfSamples"], [65, 3, 1, "", "call_likelihood"]], "pycbc.inference.sampler.games.GameSampler": [[65, 2, 1, "", "draw_samples_from_bin"], [65, 5, 1, "", "name"], [65, 2, 1, "", "run"], [65, 2, 1, "", "sample_round"]], "pycbc.inference.sampler.multinest": [[65, 1, 1, "", "MultinestSampler"]], "pycbc.inference.sampler.multinest.MultinestSampler": [[65, 2, 1, "", "check_if_finished"], [65, 2, 1, "", "checkpoint"], [65, 4, 1, "", "checkpoint_interval"], [65, 4, 1, "", "dlogz"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 2, 1, "", "get_posterior_samples"], [65, 4, 1, "", "importance_dlogz"], [65, 4, 1, "", "importance_logz"], [65, 4, 1, "", "io"], [65, 2, 1, "", "loglikelihood"], [65, 4, 1, "", "logz"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "niterations"], [65, 4, 1, "", "nlivepoints"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "set_initial_conditions"], [65, 2, 1, "", "set_state_from_file"], [65, 2, 1, "", "setup_output"], [65, 2, 1, "", "transform_prior"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.nessai": [[65, 1, 1, "", "NessaiModel"], [65, 1, 1, "", "NessaiSampler"]], "pycbc.inference.sampler.nessai.NessaiModel": [[65, 2, 1, "", "from_unit_hypercube"], [65, 2, 1, "", "log_likelihood"], [65, 2, 1, "", "log_prior"], [65, 2, 1, "", "new_point"], [65, 2, 1, "", "new_point_log_prob"], [65, 2, 1, "", "to_dict"], [65, 2, 1, "", "to_live_points"], [65, 2, 1, "", "to_unit_hypercube"]], "pycbc.inference.sampler.nessai.NessaiSampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "checkpoint_callback"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 2, 1, "", "get_default_kwds"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "set_initial_conditions"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.ptemcee": [[65, 1, 1, "", "PTEmceeSampler"]], "pycbc.inference.sampler.ptemcee.PTEmceeSampler": [[65, 4, 1, "", "adaptation_lag"], [65, 4, 1, "", "adaptation_time"], [65, 4, 1, "", "adaptive"], [65, 4, 1, "", "base_shape"], [65, 4, 1, "", "betas"], [65, 5, 1, "", "burn_in_class"], [65, 2, 1, "", "calculate_logevidence"], [65, 4, 1, "", "chain"], [65, 2, 1, "", "clear_samples"], [65, 2, 1, "", "compute_acf"], [65, 2, 1, "", "compute_acl"], [65, 4, 1, "", "ensemble"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "ntemps"], [65, 2, 1, "", "run_mcmc"], [65, 4, 1, "", "samples"], [65, 4, 1, "", "scale_factor"], [65, 2, 1, "", "set_state_from_file"], [65, 4, 1, "", "starting_betas"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.refine": [[65, 1, 1, "", "RefineSampler"], [65, 3, 1, "", "call_model"], [65, 3, 1, "", "resample_equal"]], "pycbc.inference.sampler.refine.RefineSampler": [[65, 2, 1, "", "compare_kde"], [65, 2, 1, "", "converged"], [65, 2, 1, "", "draw_samples"], [65, 2, 1, "", "from_config"], [65, 5, 1, "", "name"], [65, 2, 1, "", "run"], [65, 2, 1, "", "run_samples"], [65, 2, 1, "", "set_start_from_config"]], "pycbc.inference.sampler.snowline": [[65, 1, 1, "", "SnowlineSampler"]], "pycbc.inference.sampler.snowline.SnowlineSampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "logz"], [65, 4, 1, "", "logz_err"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "niterations"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "write_results"]], "pycbc.inference.sampler.ultranest": [[65, 1, 1, "", "UltranestSampler"]], "pycbc.inference.sampler.ultranest.UltranestSampler": [[65, 2, 1, "", "checkpoint"], [65, 2, 1, "", "finalize"], [65, 2, 1, "", "from_config"], [65, 4, 1, "", "io"], [65, 4, 1, "", "logz"], [65, 4, 1, "", "logz_err"], [65, 4, 1, "", "model_stats"], [65, 5, 1, "", "name"], [65, 4, 1, "", "niterations"], [65, 2, 1, "", "resume_from_checkpoint"], [65, 2, 1, "", "run"], [65, 4, 1, "", "samples"], [65, 2, 1, "", "write_results"]], "pycbc.inject": [[66, 0, 0, "-", "inject"], [66, 0, 0, "-", "injfilterrejector"]], "pycbc.inject.inject": [[66, 1, 1, "", "CBCHDFInjectionSet"], [66, 1, 1, "", "IncoherentFromFileHDFInjectionSet"], [66, 1, 1, "", "InjectionSet"], [66, 1, 1, "", "RingdownHDFInjectionSet"], [66, 1, 1, "", "SGBurstInjectionSet"], [66, 3, 1, "", "get_hdf_injtype"], [66, 3, 1, "", "hdf_injtype_from_approximant"], [66, 3, 1, "", "legacy_approximant_name"], [66, 3, 1, "", "projector"], [66, 3, 1, "", "set_sim_data"]], "pycbc.inject.inject.CBCHDFInjectionSet": [[66, 2, 1, "", "apply"], [66, 2, 1, "", "end_times"], [66, 5, 1, "", "injtype"], [66, 2, 1, "", "make_strain_from_inj_object"], [66, 5, 1, "", "required_params"], [66, 2, 1, "", "supported_approximants"]], "pycbc.inject.inject.IncoherentFromFileHDFInjectionSet": [[66, 2, 1, "", "apply"], [66, 2, 1, "", "end_times"], [66, 5, 1, "", "injtype"], [66, 2, 1, "", "loadts"], [66, 2, 1, "", "make_strain_from_inj_object"], [66, 5, 1, "", "required_params"], [66, 2, 1, "", "set_ref_time"], [66, 2, 1, "", "slice_and_taper"], [66, 2, 1, "", "supported_approximants"]], "pycbc.inject.inject.InjectionSet": [[66, 2, 1, "", "from_cli"], [66, 5, 1, "", "table"], [66, 2, 1, "", "write"]], "pycbc.inject.inject.RingdownHDFInjectionSet": [[66, 2, 1, "", "apply"], [66, 2, 1, "", "end_times"], [66, 5, 1, "", "injtype"], [66, 2, 1, "", "make_strain_from_inj_object"], [66, 5, 1, "", "required_params"], [66, 2, 1, "", "supported_approximants"]], "pycbc.inject.inject.SGBurstInjectionSet": [[66, 2, 1, "", "apply"], [66, 5, 1, "", "indoc"], [66, 5, 1, "", "table"]], "pycbc.inject.injfilterrejector": [[66, 1, 1, "", "InjFilterRejector"], [66, 3, 1, "", "insert_injfilterrejector_option_group"], [66, 3, 1, "", "insert_injfilterrejector_option_group_multi_ifo"]], "pycbc.inject.injfilterrejector.InjFilterRejector": [[66, 2, 1, "", "find_indices_in_injection_intervals"], [66, 2, 1, "", "from_cli"], [66, 2, 1, "", "from_cli_multi_ifos"], [66, 2, 1, "", "from_cli_single_ifo"], [66, 2, 1, "", "generate_short_inj_from_inj"], [66, 2, 1, "", "get_inj_end_times"], [66, 2, 1, "", "precompute_injection_intervals"], [66, 2, 1, "", "template_segment_checker"]], "pycbc.io": [[67, 3, 1, "", "get_file"], [67, 0, 0, "-", "gracedb"], [67, 0, 0, "-", "hdf"], [67, 0, 0, "-", "ligolw"], [67, 0, 0, "-", "live"], [67, 0, 0, "-", "record"]], "pycbc.io.gracedb": [[67, 1, 1, "", "CandidateForGraceDB"], [67, 3, 1, "", "gracedb_tag_with_version"]], "pycbc.io.gracedb.CandidateForGraceDB": [[67, 2, 1, "", "save"], [67, 2, 1, "", "upload"]], "pycbc.io.hdf": [[67, 1, 1, "", "DataFromFiles"], [67, 1, 1, "", "DictArray"], [67, 1, 1, "", "FileData"], [67, 1, 1, "", "ForegroundTriggers"], [67, 1, 1, "", "HFile"], [67, 1, 1, "", "MultiifoStatmapData"], [67, 1, 1, "", "ReadByTemplate"], [67, 1, 1, "", "SingleDetTriggers"], [67, 1, 1, "", "StatmapData"], [67, 3, 1, "", "combine_and_copy"], [67, 3, 1, "", "dump_pickle_to_hdf"], [67, 3, 1, "", "dump_state"], [67, 3, 1, "", "get_all_subkeys"], [67, 3, 1, "", "get_chisq_from_file_choice"], [67, 3, 1, "", "load_hdf5_to_dict"], [67, 3, 1, "", "load_state"], [67, 3, 1, "", "name_all_datasets"], [67, 3, 1, "", "recursively_save_dict_contents_to_group"], [67, 3, 1, "", "save_dict_to_hdf5"]], "pycbc.io.hdf.DataFromFiles": [[67, 2, 1, "", "get_column"]], "pycbc.io.hdf.DictArray": [[67, 2, 1, "", "remove"], [67, 2, 1, "", "save"], [67, 2, 1, "", "select"]], "pycbc.io.hdf.FileData": [[67, 2, 1, "", "close"], [67, 2, 1, "", "get_column"], [67, 4, 1, "", "mask"]], "pycbc.io.hdf.ForegroundTriggers": [[67, 2, 1, "", "get_active_segments"], [67, 2, 1, "", "get_bankfile_array"], [67, 2, 1, "", "get_coincfile_array"], [67, 2, 1, "", "get_end_time"], [67, 2, 1, "", "get_ifos"], [67, 2, 1, "", "get_snglfile_array_dict"], [67, 4, 1, "", "sort_arr"], [67, 4, 1, "", "template_id"], [67, 2, 1, "", "to_coinc_hdf_object"], [67, 2, 1, "", "to_coinc_xml_object"], [67, 4, 1, "", "trig_id"]], "pycbc.io.hdf.HFile": [[67, 2, 1, "", "select"]], "pycbc.io.hdf.MultiifoStatmapData": [[67, 2, 1, "", "cluster"]], "pycbc.io.hdf.ReadByTemplate": [[67, 2, 1, "", "get_data"], [67, 2, 1, "", "set_template"]], "pycbc.io.hdf.SingleDetTriggers": [[67, 2, 1, "", "and_masks"], [67, 2, 1, "", "apply_mask"], [67, 4, 1, "", "approximant"], [67, 2, 1, "", "checkbank"], [67, 4, 1, "", "effective_spin"], [67, 4, 1, "", "end_time"], [67, 4, 1, "", "eta"], [67, 4, 1, "", "f_lower"], [67, 4, 1, "", "f_seobnrv2_peak"], [67, 4, 1, "", "f_seobnrv4_peak"], [67, 2, 1, "", "get_column"], [67, 2, 1, "", "get_param_names"], [67, 2, 1, "", "get_ranking"], [67, 4, 1, "", "inclination"], [67, 4, 1, "", "mask_size"], [67, 2, 1, "", "mask_to_n_loudest_clustered_events"], [67, 4, 1, "", "mass1"], [67, 4, 1, "", "mass2"], [67, 4, 1, "", "mchirp"], [67, 4, 1, "", "mtotal"], [67, 4, 1, "", "newsnr"], [67, 4, 1, "", "newsnr_sgveto"], [67, 4, 1, "", "newsnr_sgveto_psdvar"], [67, 4, 1, "", "newsnr_sgveto_psdvar_threshold"], [67, 4, 1, "", "psd_var_val"], [67, 4, 1, "", "rchisq"], [67, 4, 1, "", "sgchisq"], [67, 4, 1, "", "snr"], [67, 4, 1, "", "spin1x"], [67, 4, 1, "", "spin1y"], [67, 4, 1, "", "spin1z"], [67, 4, 1, "", "spin2x"], [67, 4, 1, "", "spin2y"], [67, 4, 1, "", "spin2z"], [67, 4, 1, "", "template_duration"], [67, 4, 1, "", "template_id"], [67, 2, 1, "", "trig_dict"], [67, 4, 1, "", "u_vals"]], "pycbc.io.hdf.StatmapData": [[67, 2, 1, "", "cluster"], [67, 2, 1, "", "save"]], "pycbc.io.ligolw": [[67, 1, 1, "", "LIGOLWContentHandler"], [67, 3, 1, "", "create_process_table"], [67, 3, 1, "", "default_null_value"], [67, 3, 1, "", "get_table_columns"], [67, 3, 1, "", "legacy_row_id_converter"], [67, 3, 1, "", "return_empty_sngl"], [67, 3, 1, "", "return_search_summary"]], "pycbc.io.ligolw.LIGOLWContentHandler": [[67, 2, 1, "", "endElementNS"], [67, 2, 1, "", "startColumn"], [67, 2, 1, "", "startStream"]], "pycbc.io.live": [[67, 3, 1, "", "add_live_trigger_selection_options"], [67, 3, 1, "", "find_trigger_files"], [67, 3, 1, "", "find_trigger_files_from_cli"]], "pycbc.io.record": [[67, 1, 1, "", "FieldArray"], [67, 1, 1, "", "WaveformArray"]], "pycbc.io.record.FieldArray": [[67, 2, 1, "", "add_fields"], [67, 2, 1, "", "add_functions"], [67, 2, 1, "", "add_methods"], [67, 2, 1, "", "add_properties"], [67, 2, 1, "", "add_virtualfields"], [67, 2, 1, "", "addattr"], [67, 4, 1, "", "aliases"], [67, 2, 1, "", "append"], [67, 2, 1, "", "del_functions"], [67, 4, 1, "", "fieldnames"], [67, 4, 1, "", "fields"], [67, 2, 1, "", "from_arrays"], [67, 2, 1, "", "from_kwargs"], [67, 2, 1, "", "from_ligolw_table"], [67, 2, 1, "", "from_records"], [67, 4, 1, "", "functionlib"], [67, 5, 1, "", "name"], [67, 2, 1, "", "parse_boolargs"], [67, 2, 1, "", "parse_parameters"], [67, 2, 1, "", "sort"], [67, 2, 1, "", "to_array"], [67, 4, 1, "", "virtualfields"]], "pycbc.io.record.WaveformArray": [[67, 4, 1, "", "chi_eff"], [67, 4, 1, "", "eta"], [67, 4, 1, "", "mchirp"], [67, 4, 1, "", "mtotal"], [67, 4, 1, "", "primary_mass"], [67, 4, 1, "", "q"], [67, 4, 1, "", "remnant_mass"], [67, 4, 1, "", "secondary_mass"], [67, 4, 1, "", "spin1_a"], [67, 4, 1, "", "spin1_azimuthal"], [67, 4, 1, "", "spin1_polar"], [67, 4, 1, "", "spin2_a"], [67, 4, 1, "", "spin2_azimuthal"], [67, 4, 1, "", "spin2_polar"], [67, 4, 1, "", "spin_px"], [67, 4, 1, "", "spin_py"], [67, 4, 1, "", "spin_pz"], [67, 4, 1, "", "spin_sx"], [67, 4, 1, "", "spin_sy"], [67, 4, 1, "", "spin_sz"]], "pycbc.libutils": [[52, 3, 1, "", "get_ctypes_library"], [52, 3, 1, "", "get_libpath_from_dirlist"], [52, 3, 1, "", "import_optional"], [52, 3, 1, "", "pkg_config"], [52, 3, 1, "", "pkg_config_check_exists"], [52, 3, 1, "", "pkg_config_header_strings"], [52, 3, 1, "", "pkg_config_libdirs"]], "pycbc.live": [[68, 0, 0, "-", "significance_fits"], [68, 0, 0, "-", "snr_optimizer"], [68, 0, 0, "-", "supervision"]], "pycbc.live.significance_fits": [[68, 3, 1, "", "add_live_significance_duration_bin_options"], [68, 3, 1, "", "add_live_significance_trigger_pruning_options"], [68, 3, 1, "", "duration_bins_from_cli"], [68, 3, 1, "", "verify_live_significance_duration_bin_options"], [68, 3, 1, "", "verify_live_significance_trigger_pruning_options"]], "pycbc.live.snr_optimizer": [[68, 3, 1, "", "callback_func"], [68, 3, 1, "", "check_snr_optimizer_options"], [68, 3, 1, "", "compute_minus_network_snr"], [68, 3, 1, "", "compute_minus_network_snr_pso"], [68, 3, 1, "", "compute_network_snr_core"], [68, 3, 1, "", "insert_snr_optimizer_options"], [68, 3, 1, "", "optimize_di"], [68, 3, 1, "", "optimize_pso"], [68, 3, 1, "", "optimize_shgo"]], "pycbc.live.supervision": [[68, 3, 1, "", "dict_to_args"], [68, 3, 1, "", "ensure_directories"], [68, 3, 1, "", "mail_volunteers_error"], [68, 3, 1, "", "run_and_error"], [68, 3, 1, "", "symlink"], [68, 3, 1, "", "wait_for_utc_time"]], "pycbc.mchirp_area": [[52, 3, 1, "", "calc_areas"], [52, 3, 1, "", "calc_probabilities"], [52, 3, 1, "", "from_cli"], [52, 3, 1, "", "get_area"], [52, 3, 1, "", "insert_args"], [52, 3, 1, "", "intmc"], [52, 3, 1, "", "redshift_estimation"], [52, 3, 1, "", "src_mass_from_z_det_mass"]], "pycbc.neutron_stars": [[69, 0, 0, "-", "eos_utils"], [69, 0, 0, "-", "pg_isso_solver"]], "pycbc.neutron_stars.eos_utils": [[69, 3, 1, "", "foucart18"], [69, 3, 1, "", "initialize_eos"], [69, 3, 1, "", "interp_grav_mass_to_baryon_mass"], [69, 3, 1, "", "interp_grav_mass_to_compactness"], [69, 3, 1, "", "load_ns_sequence"]], "pycbc.neutron_stars.pg_isso_solver": [[69, 3, 1, "", "ISCO_solution"], [69, 3, 1, "", "ISSO_eq_at_pole"], [69, 3, 1, "", "ISSO_eq_at_pole_dr"], [69, 3, 1, "", "ISSO_eq_at_pole_dr2"], [69, 3, 1, "", "PG_ISSO_eq"], [69, 3, 1, "", "PG_ISSO_eq_dr"], [69, 3, 1, "", "PG_ISSO_eq_dr2"], [69, 3, 1, "", "PG_ISSO_solver"]], "pycbc.noise": [[70, 0, 0, "-", "gaussian"], [70, 0, 0, "-", "reproduceable"]], "pycbc.noise.gaussian": [[70, 3, 1, "", "frequency_noise_from_psd"], [70, 3, 1, "", "noise_from_psd"], [70, 3, 1, "", "noise_from_string"]], "pycbc.noise.reproduceable": [[70, 3, 1, "", "block"], [70, 3, 1, "", "colored_noise"], [70, 3, 1, "", "noise_from_string"], [70, 3, 1, "", "normal"]], "pycbc.opt": [[52, 1, 1, "", "LimitedSizeDict"], [52, 3, 1, "", "getconf"], [52, 3, 1, "", "insert_optimization_option_group"], [52, 3, 1, "", "verify_optimization_options"]], "pycbc.pnutils": [[52, 3, 1, "", "A0"], [52, 3, 1, "", "A3"], [52, 3, 1, "", "chirp_distance"], [52, 3, 1, "", "energy"], [52, 3, 1, "", "energy_coefficients"], [52, 3, 1, "", "eta_mass1_to_mass2"], [52, 3, 1, "", "f_BKLISCO"], [52, 3, 1, "", "f_ERD"], [52, 3, 1, "", "f_FRD"], [52, 3, 1, "", "f_LRD"], [52, 3, 1, "", "f_LightRing"], [52, 3, 1, "", "f_SchwarzISCO"], [52, 3, 1, "", "frequency_cutoff_from_name"], [52, 3, 1, "", "frequency_to_velocity"], [52, 3, 1, "", "get_beta_sigma_from_aligned_spins"], [52, 3, 1, "", "get_final_freq"], [52, 3, 1, "", "get_freq"], [52, 3, 1, "", "get_inspiral_tf"], [52, 3, 1, "", "hybridEnergy"], [52, 3, 1, "", "hybrid_meco_frequency"], [52, 3, 1, "", "hybrid_meco_velocity"], [52, 3, 1, "", "jframe_to_l0frame"], [52, 3, 1, "", "kerr_lightring"], [52, 3, 1, "", "kerr_lightring_velocity"], [52, 3, 1, "", "l0frame_to_jframe"], [52, 3, 1, "", "mass1_mass2_spin1z_spin2z_to_beta_sigma_gamma"], [52, 3, 1, "", "mass1_mass2_to_mchirp_eta"], [52, 3, 1, "", "mass1_mass2_to_mtotal_eta"], [52, 3, 1, "", "mass1_mass2_to_tau0_tau3"], [52, 3, 1, "", "mchirp_eta_to_mass1_mass2"], [52, 3, 1, "", "mchirp_mass1_to_mass2"], [52, 3, 1, "", "mchirp_q_to_mass1_mass2"], [52, 3, 1, "", "meco2"], [52, 3, 1, "", "meco_velocity"], [52, 3, 1, "", "megaparsecs_to_meters"], [52, 3, 1, "", "mtotal_eta_to_mass1_mass2"], [52, 3, 1, "", "nearest_larger_binary_number"], [52, 3, 1, "", "parsecs_to_meters"], [52, 3, 1, "", "solar_mass_to_kg"], [52, 3, 1, "", "t2_cutoff_frequency"], [52, 3, 1, "", "t2_cutoff_velocity"], [52, 3, 1, "", "t4_cutoff_velocity"], [52, 3, 1, "", "tau0_tau3_to_mass1_mass2"], [52, 3, 1, "", "tau0_tau3_to_mtotal_eta"], [52, 3, 1, "", "velocity_to_frequency"]], "pycbc.pool": [[52, 1, 1, "", "BroadcastPool"], [52, 1, 1, "", "SinglePool"], [52, 3, 1, "", "choose_pool"], [52, 3, 1, "", "is_main_process"], [52, 3, 1, "", "use_mpi"]], "pycbc.pool.BroadcastPool": [[52, 2, 1, "", "allmap"], [52, 2, 1, "", "broadcast"], [52, 2, 1, "", "close_pool"], [52, 2, 1, "", "map"]], "pycbc.pool.SinglePool": [[52, 2, 1, "", "broadcast"], [52, 2, 1, "", "close_pool"], [52, 2, 1, "", "imap"], [52, 2, 1, "", "imap_unordered"], [52, 2, 1, "", "map"]], "pycbc.population": [[71, 0, 0, "-", "fgmc_functions"], [71, 0, 0, "-", "fgmc_laguerre"], [71, 0, 0, "-", "fgmc_plots"], [71, 0, 0, "-", "live_pastro"], [71, 0, 0, "-", "live_pastro_utils"], [71, 0, 0, "-", "population_models"], [71, 0, 0, "-", "rates_functions"], [71, 0, 0, "-", "scale_injections"]], "pycbc.population.fgmc_functions": [[71, 1, 1, "", "BackgroundEventRate"], [71, 1, 1, "", "EventRate"], [71, 1, 1, "", "ForegroundEvents"], [71, 1, 1, "", "SignalEventRate"], [71, 3, 1, "", "alltimes"], [71, 3, 1, "", "filter_bin_lo_hi"], [71, 3, 1, "", "filter_tmplt_mchirp"], [71, 3, 1, "", "get_start_dur"], [71, 3, 1, "", "ifos_from_combo"], [71, 3, 1, "", "in_coinc_time_incl"], [71, 3, 1, "", "log_rho_bg"], [71, 3, 1, "", "log_rho_fg"], [71, 3, 1, "", "log_rho_fg_analytic"], [71, 3, 1, "", "read_full_data"], [71, 3, 1, "", "read_full_data_mchirp"], [71, 3, 1, "", "type_in_time"]], "pycbc.population.fgmc_functions.BackgroundEventRate": [[71, 2, 1, "", "add_background"], [71, 2, 1, "", "eval_pdf"], [71, 2, 1, "", "get_norms"], [71, 2, 1, "", "plot_bg"]], "pycbc.population.fgmc_functions.EventRate": [[71, 2, 1, "", "add_bank"], [71, 2, 1, "", "filter_templates"], [71, 2, 1, "", "get_ctypes"], [71, 2, 1, "", "get_livetimes"], [71, 2, 1, "", "in_coinc_time_excl"], [71, 2, 1, "", "make_bins"], [71, 2, 1, "", "moreifotimes"]], "pycbc.population.fgmc_functions.ForegroundEvents": [[71, 2, 1, "", "add_zerolag"], [71, 2, 1, "", "get_bg_pdf"], [71, 2, 1, "", "get_sg_pdf"]], "pycbc.population.fgmc_functions.SignalEventRate": [[71, 2, 1, "", "add_injections"], [71, 2, 1, "", "eval_pdf"], [71, 2, 1, "", "get_norms"], [71, 2, 1, "", "make_all_bins"], [71, 2, 1, "", "plot_inj"]], "pycbc.population.fgmc_laguerre": [[71, 1, 1, "", "augmented_rv_continuous"], [71, 1, 1, "", "count_posterior"]], "pycbc.population.fgmc_laguerre.augmented_rv_continuous": [[71, 2, 1, "", "hpd_interval"]], "pycbc.population.fgmc_laguerre.count_posterior": [[71, 2, 1, "", "expect"], [71, 2, 1, "", "p_bg"]], "pycbc.population.fgmc_plots": [[71, 3, 1, "", "dist_summary"], [71, 3, 1, "", "odds_summary"], [71, 3, 1, "", "plotdist"]], "pycbc.population.live_pastro": [[71, 3, 1, "", "check_template_param_bin_data"], [71, 3, 1, "", "noise_density_from_far"], [71, 3, 1, "", "read_template_bank_param"], [71, 3, 1, "", "signal_pdf_from_snr"], [71, 3, 1, "", "signal_rate_rescale"], [71, 3, 1, "", "signal_rate_trig_type"], [71, 3, 1, "", "template_param_bin_pa"], [71, 3, 1, "", "template_param_bin_types_farlim_pa"], [71, 3, 1, "", "template_param_bin_types_pa"]], "pycbc.population.live_pastro_utils": [[71, 1, 1, "", "PAstroData"], [71, 3, 1, "", "insert_live_pastro_option_group"]], "pycbc.population.live_pastro_utils.PAstroData": [[71, 2, 1, "", "apply_significance_limits"], [71, 2, 1, "", "do_pastro_calc"]], "pycbc.population.population_models": [[71, 3, 1, "", "average_time_between_signals"], [71, 3, 1, "", "coalescence_rate"], [71, 3, 1, "", "diff_lookback_time"], [71, 3, 1, "", "distance_from_rate"], [71, 3, 1, "", "merger_rate_density"], [71, 3, 1, "", "norm_redshift_distribution"], [71, 3, 1, "", "p_tau"], [71, 3, 1, "", "sfr_grb_2008"], [71, 3, 1, "", "sfr_madau_dickinson_2014"], [71, 3, 1, "", "sfr_madau_fragos_2017"], [71, 3, 1, "", "total_rate_upto_redshift"]], "pycbc.population.rates_functions": [[71, 3, 1, "", "draw_flat_samples"], [71, 3, 1, "", "draw_imf_samples"], [71, 3, 1, "", "draw_lnm_samples"], [71, 3, 1, "", "fgmc"], [71, 3, 1, "", "fit"], [71, 3, 1, "", "log_rho_fgmc"], [71, 3, 1, "", "mchirp_sampler_flat"], [71, 3, 1, "", "mchirp_sampler_imf"], [71, 3, 1, "", "mchirp_sampler_lnm"], [71, 3, 1, "", "prob_flat"], [71, 3, 1, "", "prob_imf"], [71, 3, 1, "", "prob_lnm"], [71, 3, 1, "", "process_full_data"], [71, 3, 1, "", "save_bkg_falloff"], [71, 3, 1, "", "skew_lognormal_samples"]], "pycbc.population.scale_injections": [[71, 3, 1, "", "astro_redshifts"], [71, 3, 1, "", "contracted_dVdc"], [71, 3, 1, "", "dlum_to_z"], [71, 3, 1, "", "estimate_vt"], [71, 3, 1, "", "inj_distance_pdf"], [71, 3, 1, "", "inj_mass_pdf"], [71, 3, 1, "", "inj_spin_pdf"], [71, 3, 1, "", "pdf_z_astro"], [71, 3, 1, "", "process_injections"], [71, 3, 1, "", "read_injections"]], "pycbc.psd": [[72, 0, 0, "-", "analytical"], [72, 0, 0, "-", "analytical_space"], [72, 3, 1, "", "associate_psds_to_multi_ifo_segments"], [72, 3, 1, "", "associate_psds_to_segments"], [72, 3, 1, "", "associate_psds_to_single_ifo_segments"], [72, 0, 0, "-", "estimate"], [72, 3, 1, "", "from_cli"], [72, 3, 1, "", "from_cli_multi_ifos"], [72, 3, 1, "", "from_cli_single_ifo"], [72, 3, 1, "", "generate_overlapping_psds"], [72, 3, 1, "", "insert_psd_option_group"], [72, 3, 1, "", "insert_psd_option_group_multi_ifo"], [72, 0, 0, "-", "read"], [72, 0, 0, "-", "variation"], [72, 3, 1, "", "verify_psd_options"], [72, 3, 1, "", "verify_psd_options_multi_ifo"]], "pycbc.psd.analytical": [[72, 3, 1, "", "AdVBNSOptimizedSensitivityP1200087"], [72, 3, 1, "", "AdVDesignSensitivityP1200087"], [72, 3, 1, "", "AdVEarlyHighSensitivityP1200087"], [72, 3, 1, "", "AdVEarlyLowSensitivityP1200087"], [72, 3, 1, "", "AdVLateHighSensitivityP1200087"], [72, 3, 1, "", "AdVLateLowSensitivityP1200087"], [72, 3, 1, "", "AdVMidHighSensitivityP1200087"], [72, 3, 1, "", "AdVMidLowSensitivityP1200087"], [72, 3, 1, "", "AdVO3LowT1800545"], [72, 3, 1, "", "AdVO4IntermediateT1800545"], [72, 3, 1, "", "AdVO4T1800545"], [72, 3, 1, "", "AdvVirgo"], [72, 3, 1, "", "CosmicExplorerP1600143"], [72, 3, 1, "", "CosmicExplorerPessimisticP1600143"], [72, 3, 1, "", "CosmicExplorerWidebandP1600143"], [72, 3, 1, "", "EinsteinTelescopeP1600143"], [72, 3, 1, "", "GEO"], [72, 3, 1, "", "GEOHF"], [72, 3, 1, "", "KAGRA"], [72, 3, 1, "", "KAGRA128MpcT1800545"], [72, 3, 1, "", "KAGRA25MpcT1800545"], [72, 3, 1, "", "KAGRA80MpcT1800545"], [72, 3, 1, "", "KAGRADesignSensitivityT1600593"], [72, 3, 1, "", "KAGRAEarlySensitivityT1600593"], [72, 3, 1, "", "KAGRALateSensitivityT1600593"], [72, 3, 1, "", "KAGRAMidSensitivityT1600593"], [72, 3, 1, "", "KAGRAOpeningSensitivityT1600593"], [72, 3, 1, "", "TAMA"], [72, 3, 1, "", "Virgo"], [72, 3, 1, "", "aLIGO140MpcT1800545"], [72, 3, 1, "", "aLIGO175MpcT1800545"], [72, 3, 1, "", "aLIGOAPlusDesignSensitivityT1800042"], [72, 3, 1, "", "aLIGOAdVO3LowT1800545"], [72, 3, 1, "", "aLIGOAdVO4IntermediateT1800545"], [72, 3, 1, "", "aLIGOAdVO4T1800545"], [72, 3, 1, "", "aLIGOBHBH20Deg"], [72, 3, 1, "", "aLIGOBHBH20DegGWINC"], [72, 3, 1, "", "aLIGOBNSOptimizedSensitivityP1200087"], [72, 3, 1, "", "aLIGODesignSensitivityP1200087"], [72, 3, 1, "", "aLIGODesignSensitivityT1800044"], [72, 3, 1, "", "aLIGOEarlyHighSensitivityP1200087"], [72, 3, 1, "", "aLIGOEarlyLowSensitivityP1200087"], [72, 3, 1, "", "aLIGOHighFrequency"], [72, 3, 1, "", "aLIGOHighFrequencyGWINC"], [72, 3, 1, "", "aLIGOKAGRA128MpcT1800545"], [72, 3, 1, "", "aLIGOKAGRA25MpcT1800545"], [72, 3, 1, "", "aLIGOKAGRA80MpcT1800545"], [72, 3, 1, "", "aLIGOLateHighSensitivityP1200087"], [72, 3, 1, "", "aLIGOLateLowSensitivityP1200087"], [72, 3, 1, "", "aLIGOMidHighSensitivityP1200087"], [72, 3, 1, "", "aLIGOMidLowSensitivityP1200087"], [72, 3, 1, "", "aLIGONSNSOpt"], [72, 3, 1, "", "aLIGONSNSOptGWINC"], [72, 3, 1, "", "aLIGONoSRMHighPower"], [72, 3, 1, "", "aLIGONoSRMLowPower"], [72, 3, 1, "", "aLIGONoSRMLowPowerGWINC"], [72, 3, 1, "", "aLIGOO3LowT1800545"], [72, 3, 1, "", "aLIGOQuantumBHBH20Deg"], [72, 3, 1, "", "aLIGOQuantumHighFrequency"], [72, 3, 1, "", "aLIGOQuantumNSNSOpt"], [72, 3, 1, "", "aLIGOQuantumNoSRMHighPower"], [72, 3, 1, "", "aLIGOQuantumNoSRMLowPower"], [72, 3, 1, "", "aLIGOQuantumZeroDetHighPower"], [72, 3, 1, "", "aLIGOQuantumZeroDetLowPower"], [72, 3, 1, "", "aLIGOThermal"], [72, 3, 1, "", "aLIGOZeroDetHighPower"], [72, 3, 1, "", "aLIGOZeroDetHighPowerGWINC"], [72, 3, 1, "", "aLIGOZeroDetLowPower"], [72, 3, 1, "", "aLIGOZeroDetLowPowerGWINC"], [72, 3, 1, "", "aLIGOaLIGO140MpcT1800545"], [72, 3, 1, "", "aLIGOaLIGO175MpcT1800545"], [72, 3, 1, "", "aLIGOaLIGODesignSensitivityT1800044"], [72, 3, 1, "", "aLIGOaLIGOO3LowT1800545"], [72, 3, 1, "", "eLIGOModel"], [72, 3, 1, "", "eLIGOShot"], [72, 3, 1, "", "flat_unity"], [72, 3, 1, "", "from_string"], [72, 3, 1, "", "get_lalsim_psd_list"], [72, 3, 1, "", "get_psd_model_list"], [72, 3, 1, "", "get_pycbc_psd_list"], [72, 3, 1, "", "iLIGOModel"], [72, 3, 1, "", "iLIGOSRD"], [72, 3, 1, "", "iLIGOSeismic"], [72, 3, 1, "", "iLIGOShot"], [72, 3, 1, "", "iLIGOThermal"]], "pycbc.psd.analytical_space": [[72, 3, 1, "", "analytical_csd_lisa_tdi_XY"], [72, 3, 1, "", "analytical_psd_lisa_tdi_AE"], [72, 3, 1, "", "analytical_psd_lisa_tdi_AE_confusion"], [72, 3, 1, "", "analytical_psd_lisa_tdi_T"], [72, 3, 1, "", "analytical_psd_lisa_tdi_XYZ"], [72, 3, 1, "", "analytical_psd_taiji_confusion_noise"], [72, 3, 1, "", "analytical_psd_taiji_tdi_AE"], [72, 3, 1, "", "analytical_psd_taiji_tdi_AE_confusion"], [72, 3, 1, "", "analytical_psd_taiji_tdi_T"], [72, 3, 1, "", "analytical_psd_taiji_tdi_XYZ"], [72, 3, 1, "", "analytical_psd_tianqin_confusion_noise"], [72, 3, 1, "", "analytical_psd_tianqin_tdi_AE"], [72, 3, 1, "", "analytical_psd_tianqin_tdi_AE_confusion"], [72, 3, 1, "", "analytical_psd_tianqin_tdi_T"], [72, 3, 1, "", "analytical_psd_tianqin_tdi_XYZ"], [72, 3, 1, "", "averaged_fplus_sq_approximated"], [72, 3, 1, "", "averaged_lisa_fplus_sq_numerical"], [72, 3, 1, "", "averaged_response_lisa_tdi"], [72, 3, 1, "", "averaged_response_taiji_tdi"], [72, 3, 1, "", "averaged_response_tianqin_tdi"], [72, 3, 1, "", "averaged_tianqin_fplus_sq_numerical"], [72, 3, 1, "", "confusion_fit_lisa"], [72, 3, 1, "", "confusion_fit_taiji"], [72, 3, 1, "", "confusion_fit_tianqin"], [72, 3, 1, "", "lisa_psd_components"], [72, 3, 1, "", "omega_length"], [72, 3, 1, "", "psd_lisa_acc_noise"], [72, 3, 1, "", "psd_lisa_oms_noise"], [72, 3, 1, "", "psd_taiji_acc_noise"], [72, 3, 1, "", "psd_taiji_oms_noise"], [72, 3, 1, "", "psd_tianqin_acc_noise"], [72, 3, 1, "", "psd_tianqin_oms_noise"], [72, 3, 1, "", "semi_analytical_psd_lisa_confusion_noise"], [72, 3, 1, "", "sensitivity_curve_lisa_SciRD"], [72, 3, 1, "", "sensitivity_curve_lisa_confusion"], [72, 3, 1, "", "sensitivity_curve_lisa_semi_analytical"], [72, 3, 1, "", "sensitivity_curve_taiji_analytical"], [72, 3, 1, "", "sensitivity_curve_taiji_confusion"], [72, 3, 1, "", "sensitivity_curve_tianqin_analytical"], [72, 3, 1, "", "sensitivity_curve_tianqin_confusion"], [72, 3, 1, "", "sh_transformed_psd_lisa_tdi_XYZ"], [72, 3, 1, "", "taiji_psd_components"], [72, 3, 1, "", "tianqin_psd_components"]], "pycbc.psd.estimate": [[72, 3, 1, "", "bandlimited_interpolate"], [72, 3, 1, "", "interpolate"], [72, 3, 1, "", "inverse_spectrum_truncation"], [72, 3, 1, "", "median_bias"], [72, 3, 1, "", "welch"]], "pycbc.psd.read": [[72, 3, 1, "", "from_numpy_arrays"], [72, 3, 1, "", "from_txt"], [72, 3, 1, "", "from_xml"]], "pycbc.psd.variation": [[72, 3, 1, "", "calc_filt_psd_variation"], [72, 3, 1, "", "create_full_filt"], [72, 3, 1, "", "find_trigger_value"], [72, 3, 1, "", "live_calc_psd_variation"], [72, 3, 1, "", "live_create_filter"], [72, 3, 1, "", "live_find_var_value"], [72, 3, 1, "", "mean_square"]], "pycbc.rate": [[52, 3, 1, "", "compute_efficiency"], [52, 3, 1, "", "compute_lower_limit"], [52, 3, 1, "", "compute_upper_limit"], [52, 3, 1, "", "compute_volume_vs_mass"], [52, 3, 1, "", "confidence_interval_min_width"], [52, 3, 1, "", "filter_injections_by_mass"], [52, 3, 1, "", "hpd_coverage"], [52, 3, 1, "", "hpd_credible_interval"], [52, 3, 1, "", "hpd_threshold"], [52, 3, 1, "", "integral_element"], [52, 3, 1, "", "integrate_efficiency"], [52, 3, 1, "", "mean_efficiency_volume"], [52, 3, 1, "", "normalize_pdf"]], "pycbc.results": [[73, 0, 0, "-", "color"], [73, 0, 0, "-", "dq"], [73, 0, 0, "-", "followup"], [73, 0, 0, "-", "layout"], [73, 0, 0, "-", "metadata"], [73, 0, 0, "-", "mpld3_utils"], [73, 0, 0, "-", "plot"], [73, 0, 0, "-", "psd"], [73, 0, 0, "-", "pygrb_plotting_utils"], [73, 0, 0, "-", "pygrb_postprocessing_utils"], [73, 0, 0, "-", "render"], [73, 0, 0, "-", "scatter_histograms"], [73, 0, 0, "-", "snr"], [73, 0, 0, "-", "str_utils"], [73, 0, 0, "-", "table_utils"], [73, 0, 0, "-", "versioning"]], "pycbc.results.color": [[73, 3, 1, "", "ifo_color"], [73, 3, 1, "", "source_color"]], "pycbc.results.dq": [[73, 3, 1, "", "get_summary_page_link"]], "pycbc.results.followup": [[73, 3, 1, "", "coinc_timeseries_plot"], [73, 3, 1, "", "columns_from_file_list"], [73, 3, 1, "", "get_gracedb_search_link"], [73, 3, 1, "", "times_to_links"], [73, 3, 1, "", "times_to_urls"], [73, 3, 1, "", "trigger_timeseries_plot"]], "pycbc.results.layout": [[73, 1, 1, "", "SectionNumber"], [73, 3, 1, "", "group_layout"], [73, 3, 1, "", "grouper"], [73, 3, 1, "", "single_layout"], [73, 3, 1, "", "two_column_layout"]], "pycbc.results.metadata": [[73, 1, 1, "", "MetaParser"], [73, 3, 1, "", "html_escape"], [73, 3, 1, "", "load_html_metadata"], [73, 3, 1, "", "load_metadata_from_file"], [73, 3, 1, "", "load_png_metadata"], [73, 3, 1, "", "save_fig_with_metadata"], [73, 3, 1, "", "save_html_with_metadata"], [73, 3, 1, "", "save_pdf_with_metadata"], [73, 3, 1, "", "save_png_with_metadata"]], "pycbc.results.metadata.MetaParser": [[73, 2, 1, "", "handle_data"], [73, 2, 1, "", "handle_starttag"]], "pycbc.results.mpld3_utils": [[73, 1, 1, "", "ClickLink"], [73, 1, 1, "", "LineTooltip"], [73, 1, 1, "", "MPLSlide"], [73, 1, 1, "", "Tooltip"]], "pycbc.results.mpld3_utils.ClickLink": [[73, 5, 1, "", "JAVASCRIPT"]], "pycbc.results.mpld3_utils.LineTooltip": [[73, 5, 1, "", "JAVASCRIPT"]], "pycbc.results.mpld3_utils.MPLSlide": [[73, 5, 1, "", "JAVASCRIPT"]], "pycbc.results.mpld3_utils.Tooltip": [[73, 5, 1, "", "JAVASCRIPT"]], "pycbc.results.plot": [[73, 3, 1, "", "add_style_opt_to_parser"], [73, 3, 1, "", "hist_overflow"], [73, 3, 1, "", "set_style_from_cli"]], "pycbc.results.psd": [[73, 3, 1, "", "generate_asd_plot"]], "pycbc.results.pygrb_plotting_utils": [[73, 3, 1, "", "axis_max_value"], [73, 3, 1, "", "axis_min_value"], [73, 3, 1, "", "contour_plotter"], [73, 3, 1, "", "make_grb_segments_plot"], [73, 3, 1, "", "pygrb_plotter"]], "pycbc.results.pygrb_postprocessing_utils": [[73, 3, 1, "", "apply_vetoes_to_found_injs"], [73, 3, 1, "", "construct_trials"], [73, 3, 1, "", "extract_ifos"], [73, 3, 1, "", "extract_trig_properties"], [73, 3, 1, "", "get_antenna_dist_factor"], [73, 3, 1, "", "get_coinc_snr"], [73, 3, 1, "", "load_data"], [73, 3, 1, "", "load_segment_dict"], [73, 3, 1, "", "load_time_slides"], [73, 3, 1, "", "max_median_stat"], [73, 3, 1, "", "mc_cal_wf_errs"], [73, 3, 1, "", "pygrb_add_bestnr_cut_opt"], [73, 3, 1, "", "pygrb_add_bestnr_opts"], [73, 3, 1, "", "pygrb_add_injmc_opts"], [73, 3, 1, "", "pygrb_add_null_snr_opts"], [73, 3, 1, "", "pygrb_add_slide_opts"], [73, 3, 1, "", "pygrb_initialize_plot_parser"], [73, 3, 1, "", "slide_opts_helper"], [73, 3, 1, "", "sort_stat"], [73, 3, 1, "", "sort_trigs"], [73, 3, 1, "", "template_hash_to_id"]], "pycbc.results.render": [[73, 3, 1, "", "get_embedded_config"], [73, 3, 1, "", "render_default"], [73, 3, 1, "", "render_glitchgram"], [73, 3, 1, "", "render_ignore"], [73, 3, 1, "", "render_text"], [73, 3, 1, "", "render_tmplt"], [73, 3, 1, "", "render_workflow_html_template"], [73, 3, 1, "", "setup_template_render"]], "pycbc.results.scatter_histograms": [[73, 3, 1, "", "construct_kde"], [73, 3, 1, "", "create_axes_grid"], [73, 3, 1, "", "create_density_plot"], [73, 3, 1, "", "create_marginalized_hist"], [73, 3, 1, "", "create_multidim_plot"], [73, 3, 1, "", "get_scale_fac"], [73, 3, 1, "", "reduce_ticks"], [73, 3, 1, "", "remove_common_offset"], [73, 3, 1, "", "set_marginal_histogram_title"]], "pycbc.results.snr": [[73, 3, 1, "", "generate_snr_plot"]], "pycbc.results.str_utils": [[73, 3, 1, "", "drop_trailing_zeros"], [73, 3, 1, "", "format_value"], [73, 3, 1, "", "get_signum"], [73, 3, 1, "", "mathjax_html_header"]], "pycbc.results.table_utils": [[73, 3, 1, "", "html_table"], [73, 3, 1, "", "static_table"]], "pycbc.results.versioning": [[73, 3, 1, "", "get_code_version_numbers"], [73, 3, 1, "", "get_library_version_info"]], "pycbc.scheme": [[52, 1, 1, "", "CPUScheme"], [52, 1, 1, "", "CUDAScheme"], [52, 1, 1, "", "CUPYScheme"], [52, 1, 1, "", "ChooseBySchemeDict"], [52, 1, 1, "", "DefaultScheme"], [52, 1, 1, "", "MKLScheme"], [52, 1, 1, "", "NumpyScheme"], [52, 1, 1, "", "Scheme"], [52, 3, 1, "", "clean_cuda"], [52, 3, 1, "", "cpuonly"], [52, 3, 1, "", "current_prefix"], [52, 3, 1, "", "from_cli"], [52, 3, 1, "", "insert_processing_option_group"], [52, 3, 1, "", "register_clean_cuda"], [52, 3, 1, "", "schemed"], [52, 3, 1, "", "verify_processing_options"]], "pycbc.sensitivity": [[52, 3, 1, "", "chirp_volume_montecarlo"], [52, 3, 1, "", "compute_search_efficiency_in_bins"], [52, 3, 1, "", "compute_search_volume_in_bins"], [52, 3, 1, "", "volume_binned_pylal"], [52, 3, 1, "", "volume_montecarlo"], [52, 3, 1, "", "volume_shell"], [52, 3, 1, "", "volume_to_distance_with_errors"]], "pycbc.strain": [[74, 0, 0, "-", "calibration"], [74, 0, 0, "-", "gate"], [74, 0, 0, "-", "lines"], [74, 3, 1, "", "read_model_from_config"], [74, 0, 0, "-", "recalibrate"], [74, 0, 0, "-", "strain"]], "pycbc.strain.calibration": [[74, 1, 1, "", "CubicSpline"], [74, 1, 1, "", "Recalibrate"]], "pycbc.strain.calibration.CubicSpline": [[74, 2, 1, "", "apply_calibration"], [74, 5, 1, "", "name"]], "pycbc.strain.calibration.Recalibrate": [[74, 2, 1, "", "apply_calibration"], [74, 2, 1, "", "from_config"], [74, 2, 1, "", "map_to_adjust"], [74, 5, 1, "", "name"]], "pycbc.strain.gate": [[74, 3, 1, "", "add_gate_option_group"], [74, 3, 1, "", "apply_gates_to_fd"], [74, 3, 1, "", "apply_gates_to_td"], [74, 3, 1, "", "gate_and_paint"], [74, 3, 1, "", "gates_from_cli"], [74, 3, 1, "", "psd_gates_from_cli"]], "pycbc.strain.lines": [[74, 3, 1, "", "avg_inner_product"], [74, 3, 1, "", "calibration_lines"], [74, 3, 1, "", "clean_data"], [74, 3, 1, "", "complex_median"], [74, 3, 1, "", "line_model"], [74, 3, 1, "", "matching_line"]], "pycbc.strain.recalibrate": [[74, 1, 1, "", "CubicSpline"], [74, 1, 1, "", "PhysicalModel"], [74, 1, 1, "", "Recalibrate"], [74, 3, 1, "", "get_calibration_files_O1_O2_O3"], [74, 3, 1, "", "read_calibration_envelop_file"]], "pycbc.strain.recalibrate.CubicSpline": [[74, 2, 1, "", "apply_calibration"], [74, 5, 1, "", "name"]], "pycbc.strain.recalibrate.PhysicalModel": [[74, 2, 1, "", "adjust_strain"], [74, 2, 1, "", "from_config"], [74, 2, 1, "", "map_to_adjust"], [74, 5, 1, "", "name"], [74, 2, 1, "", "tf_from_file"], [74, 2, 1, "", "update_c"], [74, 2, 1, "", "update_g"], [74, 2, 1, "", "update_r"]], "pycbc.strain.recalibrate.Recalibrate": [[74, 2, 1, "", "apply_calibration"], [74, 2, 1, "", "from_config"], [74, 2, 1, "", "map_to_adjust"], [74, 5, 1, "", "name"]], "pycbc.strain.strain": [[74, 1, 1, "", "StrainBuffer"], [74, 1, 1, "", "StrainSegments"], [74, 3, 1, "", "create_memory_and_engine_for_class_based_fft"], [74, 3, 1, "", "detect_loud_glitches"], [74, 3, 1, "", "execute_cached_fft"], [74, 3, 1, "", "execute_cached_ifft"], [74, 3, 1, "", "from_cli"], [74, 3, 1, "", "from_cli_multi_ifos"], [74, 3, 1, "", "from_cli_single_ifo"], [74, 3, 1, "", "gate_data"], [74, 3, 1, "", "insert_strain_option_group"], [74, 3, 1, "", "insert_strain_option_group_multi_ifo"], [74, 3, 1, "", "next_power_of_2"], [74, 3, 1, "", "verify_strain_options"], [74, 3, 1, "", "verify_strain_options_multi_ifo"]], "pycbc.strain.strain.StrainBuffer": [[74, 2, 1, "", "add_hard_count"], [74, 2, 1, "", "advance"], [74, 2, 1, "", "check_psd_dist"], [74, 4, 1, "", "end_time"], [74, 2, 1, "", "from_cli"], [74, 2, 1, "", "invalidate_psd"], [74, 2, 1, "", "near_hwinj"], [74, 2, 1, "", "null_advance_strain"], [74, 2, 1, "", "overwhitened_data"], [74, 2, 1, "", "recalculate_psd"], [74, 4, 1, "", "start_time"]], "pycbc.strain.strain.StrainSegments": [[74, 2, 1, "", "fourier_segments"], [74, 2, 1, "", "from_cli"], [74, 2, 1, "", "from_cli_multi_ifos"], [74, 2, 1, "", "from_cli_single_ifo"], [74, 2, 1, "", "insert_segment_option_group"], [74, 2, 1, "", "insert_segment_option_group_multi_ifo"], [74, 5, 1, "", "required_opts_list"], [74, 2, 1, "", "verify_segment_options"], [74, 2, 1, "", "verify_segment_options_multi_ifo"]], "pycbc.tmpltbank": [[75, 0, 0, "-", "bank_conversions"], [75, 0, 0, "-", "bank_output_utils"], [75, 0, 0, "-", "brute_force_methods"], [75, 0, 0, "-", "calc_moments"], [75, 0, 0, "-", "coord_utils"], [75, 0, 0, "-", "lambda_mapping"], [75, 0, 0, "-", "lattice_utils"], [75, 0, 0, "-", "option_utils"], [75, 0, 0, "-", "partitioned_bank"], [75, 0, 0, "-", "sky_grid"]], "pycbc.tmpltbank.bank_conversions": [[75, 3, 1, "", "get_bank_property"]], "pycbc.tmpltbank.bank_output_utils": [[75, 3, 1, "", "calculate_ethinca_metric_comps"], [75, 3, 1, "", "convert_to_sngl_inspiral_table"], [75, 3, 1, "", "output_bank_to_file"], [75, 3, 1, "", "output_bank_to_hdf"], [75, 3, 1, "", "output_sngl_inspiral_table"]], "pycbc.tmpltbank.brute_force_methods": [[75, 3, 1, "", "find_xi_extrema_brute"], [75, 3, 1, "", "get_mass_distribution"], [75, 3, 1, "", "get_physical_covaried_masses"], [75, 3, 1, "", "stack_xi_direction_brute"]], "pycbc.tmpltbank.calc_moments": [[75, 3, 1, "", "calculate_metric"], [75, 3, 1, "", "calculate_metric_comp"], [75, 3, 1, "", "calculate_moment"], [75, 3, 1, "", "determine_eigen_directions"], [75, 3, 1, "", "get_moments"], [75, 3, 1, "", "interpolate_psd"]], "pycbc.tmpltbank.coord_utils": [[75, 3, 1, "", "calc_point_dist"], [75, 3, 1, "", "calc_point_dist_vary"], [75, 3, 1, "", "estimate_mass_range"], [75, 3, 1, "", "find_closest_calculated_frequencies"], [75, 3, 1, "", "find_max_and_min_frequencies"], [75, 3, 1, "", "get_conv_params"], [75, 3, 1, "", "get_cov_params"], [75, 3, 1, "", "get_covaried_params"], [75, 3, 1, "", "get_mu_params"], [75, 3, 1, "", "get_point_distance"], [75, 3, 1, "", "get_random_mass"], [75, 3, 1, "", "get_random_mass_point_particles"], [75, 3, 1, "", "outspiral_loop"], [75, 3, 1, "", "return_nearest_cutoff"], [75, 3, 1, "", "rotate_vector"], [75, 3, 1, "", "test_point_dist"]], "pycbc.tmpltbank.lambda_mapping": [[75, 3, 1, "", "ethinca_order_from_string"], [75, 3, 1, "", "generate_inverse_mapping"], [75, 3, 1, "", "generate_mapping"], [75, 3, 1, "", "get_chirp_params"], [75, 3, 1, "", "get_ethinca_orders"]], "pycbc.tmpltbank.lattice_utils": [[75, 3, 1, "", "generate_anstar_3d_lattice"], [75, 3, 1, "", "generate_hexagonal_lattice"]], "pycbc.tmpltbank.option_utils": [[75, 1, 1, "", "IndentedHelpFormatterWithNL"], [75, 3, 1, "", "check_ethinca_against_bank_params"], [75, 1, 1, "", "ethincaParameters"], [75, 3, 1, "", "get_options_from_group"], [75, 3, 1, "", "insert_base_bank_options"], [75, 3, 1, "", "insert_ethinca_metric_options"], [75, 3, 1, "", "insert_mass_range_option_group"], [75, 3, 1, "", "insert_metric_calculation_options"], [75, 1, 1, "", "massRangeParameters"], [75, 1, 1, "", "metricParameters"], [75, 3, 1, "", "verify_ethinca_metric_options"], [75, 3, 1, "", "verify_mass_range_options"], [75, 3, 1, "", "verify_metric_calculation_options"]], "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL": [[75, 2, 1, "", "format_description"], [75, 2, 1, "", "format_option"]], "pycbc.tmpltbank.option_utils.ethincaParameters": [[75, 2, 1, "", "from_argparse"]], "pycbc.tmpltbank.option_utils.massRangeParameters": [[75, 5, 1, "", "default_delta_bh_spin"], [75, 5, 1, "", "default_delta_ns_mass"], [75, 5, 1, "", "default_ns_eos"], [75, 5, 1, "", "default_nsbh_boundary_mass"], [75, 2, 1, "", "from_argparse"], [75, 2, 1, "", "is_outside_range"]], "pycbc.tmpltbank.option_utils.metricParameters": [[75, 4, 1, "", "evals"], [75, 4, 1, "", "evecs"], [75, 4, 1, "", "evecsCV"], [75, 2, 1, "", "from_argparse"], [75, 4, 1, "", "metric"], [75, 4, 1, "", "moments"], [75, 4, 1, "", "psd"], [75, 4, 1, "", "time_unprojected_metric"]], "pycbc.tmpltbank.partitioned_bank": [[75, 1, 1, "", "PartitionedTmpltbank"]], "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank": [[75, 2, 1, "", "add_point_by_chi_coords"], [75, 2, 1, "", "add_point_by_masses"], [75, 2, 1, "", "add_tmpltbank_from_hdf_file"], [75, 2, 1, "", "add_tmpltbank_from_xml_table"], [75, 2, 1, "", "calc_point_distance"], [75, 2, 1, "", "calc_point_distance_vary"], [75, 2, 1, "", "check_bin_existence"], [75, 2, 1, "", "find_point_bin"], [75, 2, 1, "", "get_freq_map_and_normalizations"], [75, 2, 1, "", "get_point_from_bins_and_idx"], [75, 2, 1, "", "output_all_points"], [75, 2, 1, "", "test_point_distance"], [75, 2, 1, "", "test_point_distance_vary"]], "pycbc.tmpltbank.sky_grid": [[75, 1, 1, "", "SkyGrid"]], "pycbc.tmpltbank.sky_grid.SkyGrid": [[75, 2, 1, "", "calculate_antenna_patterns"], [75, 2, 1, "", "calculate_time_delays"], [75, 4, 1, "", "decs"], [75, 2, 1, "", "from_cli"], [75, 4, 1, "", "ras"], [75, 2, 1, "", "read_from_file"], [75, 2, 1, "", "write_to_file"]], "pycbc.transforms": [[52, 1, 1, "", "AlignTotalSpin"], [52, 1, 1, "", "AlignedMassSpinToCartesianSpin"], [52, 1, 1, "", "BaseTransform"], [52, 1, 1, "", "CartesianSpin1ToSphericalSpin1"], [52, 1, 1, "", "CartesianSpin2ToSphericalSpin2"], [52, 1, 1, "", "CartesianSpinToAlignedMassSpin"], [52, 1, 1, "", "CartesianSpinToChiP"], [52, 1, 1, "", "CartesianSpinToPrecessionMassSpin"], [52, 1, 1, "", "CartesianToSpherical"], [52, 1, 1, "", "ChiPToCartesianSpin"], [52, 1, 1, "", "ChirpDistanceToDistance"], [52, 1, 1, "", "CustomTransform"], [52, 1, 1, "", "CustomTransformMultiOutputs"], [52, 1, 1, "", "DistanceToChirpDistance"], [52, 1, 1, "", "DistanceToRedshift"], [52, 1, 1, "", "Exponent"], [52, 1, 1, "", "GEOToLISA"], [52, 1, 1, "", "GEOToSSB"], [52, 1, 1, "", "LISAToGEO"], [52, 1, 1, "", "LISAToSSB"], [52, 1, 1, "", "LambdaFromMultipleTOVFiles"], [52, 1, 1, "", "LambdaFromTOVFile"], [52, 1, 1, "", "Log"], [52, 1, 1, "", "Logistic"], [52, 1, 1, "", "Logit"], [52, 1, 1, "", "Mass1Mass2ToMchirpEta"], [52, 1, 1, "", "Mass1Mass2ToMchirpQ"], [52, 1, 1, "", "MchirpEtaToMass1Mass2"], [52, 1, 1, "", "MchirpQToMass1Mass2"], [52, 1, 1, "", "PrecessionMassSpinToCartesianSpin"], [52, 1, 1, "", "SSBToGEO"], [52, 1, 1, "", "SSBToLISA"], [52, 1, 1, "", "SphericalSpin1ToCartesianSpin1"], [52, 1, 1, "", "SphericalSpin2ToCartesianSpin2"], [52, 1, 1, "", "SphericalToCartesian"], [52, 3, 1, "", "apply_transforms"], [52, 3, 1, "", "compute_jacobian"], [52, 3, 1, "", "get_common_cbc_transforms"], [52, 3, 1, "", "order_transforms"], [52, 3, 1, "", "read_transforms_from_config"]], "pycbc.transforms.AlignTotalSpin": [[52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.AlignedMassSpinToCartesianSpin": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.BaseTransform": [[52, 2, 1, "", "format_output"], [52, 2, 1, "", "from_config"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CartesianSpin1ToSphericalSpin1": [[52, 5, 1, "", "name"]], "pycbc.transforms.CartesianSpin2ToSphericalSpin2": [[52, 5, 1, "", "name"]], "pycbc.transforms.CartesianSpinToAlignedMassSpin": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CartesianSpinToChiP": [[52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CartesianSpinToPrecessionMassSpin": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CartesianToSpherical": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.ChiPToCartesianSpin": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.ChirpDistanceToDistance": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CustomTransform": [[52, 2, 1, "", "from_config"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.CustomTransformMultiOutputs": [[52, 2, 1, "", "from_config"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.DistanceToChirpDistance": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.DistanceToRedshift": [[52, 5, 1, "", "inverse"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Exponent": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.GEOToLISA": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.GEOToSSB": [[52, 5, 1, "", "default_params_name"], [52, 2, 1, "", "from_config"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.LISAToGEO": [[52, 5, 1, "", "default_params_name"], [52, 2, 1, "", "from_config"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.LISAToSSB": [[52, 5, 1, "", "default_params_name"], [52, 2, 1, "", "from_config"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.LambdaFromMultipleTOVFiles": [[52, 4, 1, "", "distance"], [52, 2, 1, "", "from_config"], [52, 2, 1, "", "get_eos"], [52, 4, 1, "", "lambda_param"], [52, 4, 1, "", "map_file"], [52, 4, 1, "", "mass_param"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.LambdaFromTOVFile": [[52, 4, 1, "", "data"], [52, 4, 1, "", "distance"], [52, 2, 1, "", "from_config"], [52, 4, 1, "", "lambda_data"], [52, 2, 1, "", "lambda_from_tov_data"], [52, 4, 1, "", "lambda_param"], [52, 4, 1, "", "mass_data"], [52, 4, 1, "", "mass_param"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Log": [[52, 4, 1, "", "inputvar"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 4, 1, "", "outputvar"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Logistic": [[52, 4, 1, "", "bounds"], [52, 2, 1, "", "from_config"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Logit": [[52, 4, 1, "", "bounds"], [52, 2, 1, "", "from_config"], [52, 4, 1, "", "inputvar"], [52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 2, 1, "", "logistic"], [52, 2, 1, "", "logit"], [52, 5, 1, "", "name"], [52, 4, 1, "", "outputvar"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Mass1Mass2ToMchirpEta": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.Mass1Mass2ToMchirpQ": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.MchirpEtaToMass1Mass2": [[52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.MchirpQToMass1Mass2": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_jacobian"], [52, 2, 1, "", "inverse_transform"], [52, 2, 1, "", "jacobian"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.PrecessionMassSpinToCartesianSpin": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.SSBToGEO": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.SSBToLISA": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.transforms.SphericalSpin1ToCartesianSpin1": [[52, 5, 1, "", "inverse"], [52, 5, 1, "", "name"]], "pycbc.transforms.SphericalSpin2ToCartesianSpin2": [[52, 5, 1, "", "inverse"], [52, 5, 1, "", "name"]], "pycbc.transforms.SphericalToCartesian": [[52, 5, 1, "", "inverse"], [52, 2, 1, "", "inverse_transform"], [52, 5, 1, "", "name"], [52, 2, 1, "", "transform"]], "pycbc.types": [[76, 0, 0, "-", "aligned"], [76, 0, 0, "-", "array"], [76, 0, 0, "-", "array_cpu"], [76, 0, 0, "-", "array_cupy"], [76, 0, 0, "-", "config"], [76, 0, 0, "-", "frequencyseries"], [76, 0, 0, "-", "optparse"], [76, 0, 0, "-", "timeseries"]], "pycbc.types.aligned": [[76, 3, 1, "", "check_aligned"], [76, 3, 1, "", "empty"], [76, 3, 1, "", "zeros"]], "pycbc.types.array": [[76, 1, 1, "", "Array"], [76, 3, 1, "", "check_same_len_precision"], [76, 3, 1, "", "common_kind"], [76, 3, 1, "", "complex_same_precision_as"], [76, 3, 1, "", "empty"], [76, 3, 1, "", "force_precision_to_match"], [76, 3, 1, "", "load_array"], [76, 3, 1, "", "real_same_precision_as"], [76, 3, 1, "", "zeros"]], "pycbc.types.array.Array": [[76, 2, 1, "", "abs_arg_max"], [76, 2, 1, "", "abs_max_loc"], [76, 2, 1, "", "almost_equal_elem"], [76, 2, 1, "", "almost_equal_norm"], [76, 2, 1, "", "astype"], [76, 2, 1, "", "clear"], [76, 2, 1, "", "conj"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "cumsum"], [76, 4, 1, "", "data"], [76, 2, 1, "", "dot"], [76, 4, 1, "", "dtype"], [76, 2, 1, "", "fill"], [76, 2, 1, "", "imag"], [76, 2, 1, "", "inner"], [76, 4, 1, "", "itemsize"], [76, 4, 1, "", "kind"], [76, 2, 1, "", "lal"], [76, 2, 1, "", "max"], [76, 2, 1, "", "max_loc"], [76, 2, 1, "", "min"], [76, 2, 1, "", "multiply_and_add"], [76, 4, 1, "", "nbytes"], [76, 4, 1, "", "ndim"], [76, 2, 1, "", "numpy"], [76, 4, 1, "", "precision"], [76, 4, 1, "", "ptr"], [76, 2, 1, "", "real"], [76, 2, 1, "", "resize"], [76, 2, 1, "", "roll"], [76, 2, 1, "", "save"], [76, 4, 1, "", "shape"], [76, 2, 1, "", "squared_norm"], [76, 2, 1, "", "sum"], [76, 2, 1, "", "take"], [76, 2, 1, "", "trim_zeros"], [76, 2, 1, "", "vdot"], [76, 2, 1, "", "view"], [76, 2, 1, "", "weighted_inner"]], "pycbc.types.array_cpu": [[76, 3, 1, "", "abs_arg_max"], [76, 3, 1, "", "abs_arg_max_complex"], [76, 3, 1, "", "abs_max_loc"], [76, 3, 1, "", "clear"], [76, 3, 1, "", "cumsum"], [76, 3, 1, "", "dot"], [76, 3, 1, "", "empty"], [76, 3, 1, "", "inner"], [76, 3, 1, "", "inner_real"], [76, 3, 1, "", "max"], [76, 3, 1, "", "max_loc"], [76, 3, 1, "", "min"], [76, 3, 1, "", "multiply_and_add"], [76, 3, 1, "", "numpy"], [76, 3, 1, "", "ptr"], [76, 3, 1, "", "squared_norm"], [76, 3, 1, "", "sum"], [76, 3, 1, "", "take"], [76, 3, 1, "", "vdot"], [76, 3, 1, "", "weighted_inner"], [76, 3, 1, "", "zeros"]], "pycbc.types.array_cupy": [[76, 3, 1, "", "abs_arg_max"], [76, 3, 1, "", "abs_max_loc"], [76, 3, 1, "", "clear"], [76, 3, 1, "", "cumsum"], [76, 3, 1, "", "dot"], [76, 3, 1, "", "empty"], [76, 3, 1, "", "inner"], [76, 3, 1, "", "max"], [76, 3, 1, "", "max_loc"], [76, 3, 1, "", "min"], [76, 3, 1, "", "numpy"], [76, 3, 1, "", "ptr"], [76, 3, 1, "", "squared_norm"], [76, 3, 1, "", "sum"], [76, 3, 1, "", "take"], [76, 3, 1, "", "vdot"], [76, 3, 1, "", "weighted_inner"], [76, 3, 1, "", "zeros"]], "pycbc.types.config": [[76, 1, 1, "", "DeepCopyableConfigParser"], [76, 1, 1, "", "InterpolatingConfigParser"]], "pycbc.types.config.InterpolatingConfigParser": [[76, 2, 1, "", "add_options_to_section"], [76, 2, 1, "", "check_duplicate_options"], [76, 2, 1, "", "from_cli"], [76, 2, 1, "", "get_opt_tag"], [76, 2, 1, "", "get_opt_tags"], [76, 2, 1, "", "get_subsections"], [76, 2, 1, "", "has_option_tag"], [76, 2, 1, "", "has_option_tags"], [76, 2, 1, "", "interpolate_string"], [76, 2, 1, "", "perform_extended_interpolation"], [76, 2, 1, "", "populate_shared_sections"], [76, 2, 1, "", "read_ini_file"], [76, 2, 1, "", "sanitize_newline"], [76, 2, 1, "", "sanity_check_subsections"], [76, 2, 1, "", "split_multi_sections"]], "pycbc.types.frequencyseries": [[76, 1, 1, "", "FrequencySeries"], [76, 3, 1, "", "load_frequencyseries"]], "pycbc.types.frequencyseries.FrequencySeries": [[76, 2, 1, "", "almost_equal_elem"], [76, 2, 1, "", "almost_equal_norm"], [76, 2, 1, "", "at_frequency"], [76, 2, 1, "", "cyclic_time_shift"], [76, 4, 1, "", "delta_f"], [76, 4, 1, "", "delta_t"], [76, 4, 1, "", "duration"], [76, 4, 1, "", "end_time"], [76, 4, 1, "", "epoch"], [76, 2, 1, "", "get_delta_f"], [76, 2, 1, "", "get_epoch"], [76, 2, 1, "", "get_sample_frequencies"], [76, 2, 1, "", "lal"], [76, 2, 1, "", "match"], [76, 2, 1, "", "plot"], [76, 4, 1, "", "sample_frequencies"], [76, 4, 1, "", "sample_rate"], [76, 2, 1, "", "save"], [76, 4, 1, "", "start_time"], [76, 2, 1, "", "to_frequencyseries"], [76, 2, 1, "", "to_timeseries"]], "pycbc.types.optparse": [[76, 1, 1, "", "DictOptionAction"], [76, 1, 1, "", "DictWithDefaultReturn"], [76, 1, 1, "", "MultiDetDictOptionAction"], [76, 1, 1, "", "MultiDetMultiColonOptionAction"], [76, 1, 1, "", "MultiDetOptionAction"], [76, 1, 1, "", "MultiDetOptionActionSpecial"], [76, 1, 1, "", "MultiDetOptionAppendAction"], [76, 3, 1, "", "angle_as_radians"], [76, 3, 1, "", "convert_to_process_params_dict"], [76, 3, 1, "", "copy_opts_for_single_ifo"], [76, 3, 1, "", "ensure_one_opt"], [76, 3, 1, "", "ensure_one_opt_multi_ifo"], [76, 3, 1, "", "nonnegative_float"], [76, 3, 1, "", "nonnegative_int"], [76, 3, 1, "", "positive_float"], [76, 3, 1, "", "positive_int"], [76, 3, 1, "", "required_opts"], [76, 3, 1, "", "required_opts_multi_ifo"]], "pycbc.types.optparse.DictWithDefaultReturn": [[76, 5, 1, "", "default_set"], [76, 5, 1, "", "ifo_set"]], "pycbc.types.timeseries": [[76, 1, 1, "", "TimeSeries"], [76, 3, 1, "", "load_timeseries"]], "pycbc.types.timeseries.TimeSeries": [[76, 2, 1, "", "add_into"], [76, 2, 1, "", "almost_equal_elem"], [76, 2, 1, "", "almost_equal_norm"], [76, 2, 1, "", "append_zeros"], [76, 2, 1, "", "at_time"], [76, 2, 1, "", "at_times"], [76, 2, 1, "", "crop"], [76, 2, 1, "", "cyclic_time_shift"], [76, 4, 1, "", "delta_f"], [76, 4, 1, "", "delta_t"], [76, 2, 1, "", "detrend"], [76, 4, 1, "", "duration"], [76, 4, 1, "", "end_time"], [76, 2, 1, "", "epoch_close"], [76, 2, 1, "", "filter_psd"], [76, 2, 1, "", "fir_zero_filter"], [76, 2, 1, "", "gate"], [76, 2, 1, "", "get_delta_t"], [76, 2, 1, "", "get_duration"], [76, 2, 1, "", "get_end_time"], [76, 2, 1, "", "get_gate_indices"], [76, 2, 1, "", "get_sample_rate"], [76, 2, 1, "", "get_sample_times"], [76, 2, 1, "", "highpass_fir"], [76, 2, 1, "", "inject"], [76, 2, 1, "", "lal"], [76, 2, 1, "", "lowpass_fir"], [76, 2, 1, "", "match"], [76, 2, 1, "", "notch_fir"], [76, 2, 1, "", "plot"], [76, 2, 1, "", "prepend_zeros"], [76, 2, 1, "", "psd"], [76, 2, 1, "", "qtransform"], [76, 2, 1, "", "resample"], [76, 4, 1, "", "sample_rate"], [76, 2, 1, "", "sample_rate_close"], [76, 4, 1, "", "sample_times"], [76, 2, 1, "", "save"], [76, 2, 1, "", "save_to_wav"], [76, 4, 1, "", "start_time"], [76, 2, 1, "", "taper_timeseries"], [76, 2, 1, "", "time_slice"], [76, 2, 1, "", "to_astropy"], [76, 2, 1, "", "to_frequencyseries"], [76, 2, 1, "", "to_timeseries"], [76, 2, 1, "", "whiten"]], "pycbc.vetoes": [[77, 0, 0, "-", "autochisq"], [77, 0, 0, "-", "bank_chisq"], [77, 0, 0, "-", "chisq"], [77, 0, 0, "-", "chisq_cpu"], [77, 0, 0, "-", "chisq_cupy"], [77, 0, 0, "-", "sgchisq"]], "pycbc.vetoes.autochisq": [[77, 1, 1, "", "SingleDetAutoChisq"], [77, 1, 1, "", "SingleDetSkyMaxAutoChisq"], [77, 3, 1, "", "autochisq_from_precomputed"]], "pycbc.vetoes.autochisq.SingleDetAutoChisq": [[77, 2, 1, "", "values"]], "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq": [[77, 2, 1, "", "values"]], "pycbc.vetoes.bank_chisq": [[77, 1, 1, "", "SingleDetBankVeto"], [77, 1, 1, "", "SingleDetSkyMaxBankVeto"], [77, 3, 1, "", "bank_chisq_from_filters"], [77, 3, 1, "", "segment_snrs"], [77, 3, 1, "", "template_overlaps"]], "pycbc.vetoes.bank_chisq.SingleDetBankVeto": [[77, 2, 1, "", "cache_overlaps"], [77, 2, 1, "", "cache_segment_snrs"], [77, 2, 1, "", "values"]], "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto": [[77, 2, 1, "", "values"]], "pycbc.vetoes.chisq": [[77, 1, 1, "", "SingleDetPowerChisq"], [77, 1, 1, "", "SingleDetSkyMaxPowerChisq"], [77, 3, 1, "", "chisq_accum_bin"], [77, 3, 1, "", "fastest_power_chisq_at_points"], [77, 3, 1, "", "power_chisq"], [77, 3, 1, "", "power_chisq_at_points_from_precomputed"], [77, 3, 1, "", "power_chisq_bins"], [77, 3, 1, "", "power_chisq_bins_from_sigmasq_series"], [77, 3, 1, "", "power_chisq_from_precomputed"], [77, 3, 1, "", "shift_sum"]], "pycbc.vetoes.chisq.SingleDetPowerChisq": [[77, 2, 1, "", "cached_chisq_bins"], [77, 2, 1, "", "parse_option"], [77, 2, 1, "", "values"]], "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq": [[77, 2, 1, "", "calculate_chisq_bins"], [77, 2, 1, "", "values"]], "pycbc.vetoes.chisq_cpu": [[77, 3, 1, "", "chisq_accum_bin"], [77, 3, 1, "", "chisq_accum_bin_cython"], [77, 3, 1, "", "chisq_accum_bin_numpy"], [77, 3, 1, "", "point_chisq_code"], [77, 3, 1, "", "shift_sum"]], "pycbc.vetoes.chisq_cupy": [[77, 3, 1, "", "chisq_accum_bin"], [77, 3, 1, "", "get_cached_bin_layout"], [77, 3, 1, "", "get_cached_pow2"], [77, 3, 1, "", "get_pchisq_fn"], [77, 3, 1, "", "get_pchisq_fn_pow2"], [77, 3, 1, "", "shift_sum"], [77, 3, 1, "", "shift_sum_points"], [77, 3, 1, "", "shift_sum_points_pow2"]], "pycbc.vetoes.sgchisq": [[77, 1, 1, "", "SingleDetSGChisq"]], "pycbc.vetoes.sgchisq.SingleDetSGChisq": [[77, 2, 1, "", "from_cli"], [77, 2, 1, "", "insert_option_group"], [77, 5, 1, "", "returns"], [77, 2, 1, "", "values"]], "pycbc.waveform": [[78, 0, 0, "-", "bank"], [78, 0, 0, "-", "compress"], [78, 0, 0, "-", "decompress_cpu"], [78, 0, 0, "-", "decompress_cpu_cython"], [78, 0, 0, "-", "decompress_cupy"], [78, 0, 0, "-", "generator"], [78, 0, 0, "-", "multiband"], [78, 0, 0, "-", "nltides"], [78, 0, 0, "-", "parameters"], [78, 0, 0, "-", "plugin"], [78, 0, 0, "-", "premerger"], [78, 0, 0, "-", "ringdown"], [78, 0, 0, "-", "sinegauss"], [78, 0, 0, "-", "spa_tmplt"], [78, 0, 0, "-", "spa_tmplt_cpu"], [78, 0, 0, "-", "spa_tmplt_cupy"], [78, 0, 0, "-", "supernovae"], [78, 0, 0, "-", "utils"], [78, 0, 0, "-", "utils_cpu"], [78, 0, 0, "-", "utils_cupy"], [78, 0, 0, "-", "waveform"], [78, 0, 0, "-", "waveform_modes"]], "pycbc.waveform.bank": [[78, 1, 1, "", "FilterBank"], [78, 1, 1, "", "FilterBankSkyMax"], [78, 1, 1, "", "LiveFilterBank"], [78, 1, 1, "", "TemplateBank"], [78, 3, 1, "", "add_approximant_arg"], [78, 3, 1, "", "boolargs_from_apprxstr"], [78, 3, 1, "", "find_variable_start_frequency"], [78, 3, 1, "", "parse_approximant_arg"], [78, 3, 1, "", "sigma_cached"], [78, 3, 1, "", "tuple_to_hash"]], "pycbc.waveform.bank.FilterBank": [[78, 2, 1, "", "generate_with_delta_f_and_max_freq"], [78, 2, 1, "", "get_decompressed_waveform"]], "pycbc.waveform.bank.LiveFilterBank": [[78, 2, 1, "", "freq_resolution_for_template"], [78, 2, 1, "", "get_template"], [78, 2, 1, "", "getslice"], [78, 2, 1, "", "id_from_param"], [78, 2, 1, "", "round_up"]], "pycbc.waveform.bank.TemplateBank": [[78, 2, 1, "", "approximant"], [78, 2, 1, "", "end_frequency"], [78, 2, 1, "", "ensure_hash"], [78, 2, 1, "", "ensure_standard_filter_columns"], [78, 5, 1, "", "extra_args"], [78, 5, 1, "", "filehandler"], [78, 5, 1, "", "has_compressed_waveforms"], [78, 5, 1, "", "indoc"], [78, 4, 1, "", "parameters"], [78, 2, 1, "", "parse_approximant"], [78, 5, 1, "", "table"], [78, 2, 1, "", "template_thinning"], [78, 2, 1, "", "write_to_hdf"]], "pycbc.waveform.compress": [[78, 1, 1, "", "CompressedWaveform"], [78, 3, 1, "", "compress_waveform"], [78, 3, 1, "", "fd_decompress"], [78, 3, 1, "", "inline_linear_interp"], [78, 3, 1, "", "mchirp_compression"], [78, 3, 1, "", "rough_time_estimate"], [78, 3, 1, "", "spa_compression"], [78, 3, 1, "", "vecdiff"]], "pycbc.waveform.compress.CompressedWaveform": [[78, 4, 1, "", "amplitude"], [78, 2, 1, "", "clear_cache"], [78, 2, 1, "", "decompress"], [78, 2, 1, "", "from_hdf"], [78, 5, 1, "", "interpolation"], [78, 5, 1, "", "load_to_memory"], [78, 5, 1, "", "mismatch"], [78, 4, 1, "", "phase"], [78, 5, 1, "", "precision"], [78, 4, 1, "", "sample_points"], [78, 5, 1, "", "tolerance"], [78, 2, 1, "", "write_to_hdf"]], "pycbc.waveform.decompress_cpu": [[78, 3, 1, "", "inline_linear_interp"]], "pycbc.waveform.decompress_cpu_cython": [[78, 3, 1, "", "decomp_ccode_double"], [78, 3, 1, "", "decomp_ccode_float"]], "pycbc.waveform.decompress_cupy": [[78, 1, 1, "", "CUPYLinearInterpolate"], [78, 3, 1, "", "get_dckernel"], [78, 3, 1, "", "inline_linear_interp"]], "pycbc.waveform.decompress_cupy.CUPYLinearInterpolate": [[78, 2, 1, "", "interpolate"]], "pycbc.waveform.generator": [[78, 1, 1, "", "BaseCBCGenerator"], [78, 1, 1, "", "BaseFDomainDetFrameGenerator"], [78, 1, 1, "", "BaseGenerator"], [78, 1, 1, "", "FDomainCBCGenerator"], [78, 1, 1, "", "FDomainCBCModesGenerator"], [78, 1, 1, "", "FDomainDetFrameGenerator"], [78, 1, 1, "", "FDomainDetFrameModesGenerator"], [78, 1, 1, "", "FDomainDetFrameTwoPolGenerator"], [78, 1, 1, "", "FDomainDetFrameTwoPolNoRespGenerator"], [78, 1, 1, "", "FDomainDirectDetFrameGenerator"], [78, 1, 1, "", "FDomainFreqTauRingdownGenerator"], [78, 1, 1, "", "FDomainMassSpinRingdownGenerator"], [78, 1, 1, "", "TDomainCBCGenerator"], [78, 1, 1, "", "TDomainCBCModesGenerator"], [78, 1, 1, "", "TDomainFreqTauRingdownGenerator"], [78, 1, 1, "", "TDomainMassSpinRingdownGenerator"], [78, 1, 1, "", "TDomainSupernovaeGenerator"], [78, 3, 1, "", "get_fd_generator"], [78, 3, 1, "", "get_td_generator"], [78, 3, 1, "", "select_waveform_generator"], [78, 3, 1, "", "select_waveform_modes_generator"]], "pycbc.waveform.generator.BaseCBCGenerator": [[78, 5, 1, "", "possible_args"]], "pycbc.waveform.generator.BaseFDomainDetFrameGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "detector_names"], [78, 5, 1, "", "detectors"], [78, 4, 1, "", "epoch"], [78, 5, 1, "", "frozen_location_args"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "location_args"], [78, 5, 1, "", "rframe_generator"], [78, 2, 1, "", "select_rframe_generator"], [78, 2, 1, "", "set_epoch"], [78, 4, 1, "", "static_args"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.BaseGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "frozen_params"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "generator"], [78, 4, 1, "", "static_args"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.FDomainDetFrameGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "detector_names"], [78, 5, 1, "", "detectors"], [78, 5, 1, "", "epoch"], [78, 5, 1, "", "frozen_location_args"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "location_args"], [78, 5, 1, "", "rframe_generator"], [78, 2, 1, "", "select_rframe_generator"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.FDomainDetFrameModesGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "detector_names"], [78, 5, 1, "", "detectors"], [78, 5, 1, "", "epoch"], [78, 5, 1, "", "frozen_location_args"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "location_args"], [78, 5, 1, "", "rframe_generator"], [78, 2, 1, "", "select_rframe_generator"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.FDomainDetFrameTwoPolGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "detector_names"], [78, 5, 1, "", "detectors"], [78, 5, 1, "", "epoch"], [78, 5, 1, "", "frozen_location_args"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "location_args"], [78, 5, 1, "", "rframe_generator"], [78, 2, 1, "", "select_rframe_generator"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.FDomainDetFrameTwoPolNoRespGenerator": [[78, 5, 1, "", "current_params"], [78, 5, 1, "", "detector_names"], [78, 5, 1, "", "detectors"], [78, 5, 1, "", "epoch"], [78, 5, 1, "", "frozen_location_args"], [78, 2, 1, "", "generate"], [78, 5, 1, "", "rframe_generator"], [78, 2, 1, "", "select_rframe_generator"], [78, 5, 1, "", "variable_args"]], "pycbc.waveform.generator.FDomainDirectDetFrameGenerator": [[78, 4, 1, "", "epoch"], [78, 2, 1, "", "generate"], [78, 2, 1, "", "select_rframe_generator"], [78, 2, 1, "", "set_epoch"]], "pycbc.waveform.multiband": [[78, 3, 1, "", "multiband_fd_waveform"]], "pycbc.waveform.nltides": [[78, 3, 1, "", "nltides_fourier_phase_difference"], [78, 3, 1, "", "nonlinear_tidal_spa"]], "pycbc.waveform.parameters": [[78, 1, 1, "", "Parameter"], [78, 1, 1, "", "ParameterList"]], "pycbc.waveform.parameters.Parameter": [[78, 2, 1, "", "docstr"]], "pycbc.waveform.parameters.ParameterList": [[78, 4, 1, "", "asdict"], [78, 4, 1, "", "aslist"], [78, 2, 1, "", "default_dict"], [78, 2, 1, "", "defaults"], [78, 4, 1, "", "description_dict"], [78, 4, 1, "", "descriptions"], [78, 2, 1, "", "docstr"], [78, 4, 1, "", "dtype_dict"], [78, 4, 1, "", "dtypes"], [78, 4, 1, "", "label_dict"], [78, 4, 1, "", "labels"], [78, 4, 1, "", "names"], [78, 4, 1, "", "nodefaults"]], "pycbc.waveform.plugin": [[78, 3, 1, "", "add_custom_waveform"], [78, 3, 1, "", "add_end_frequency_estimator"], [78, 3, 1, "", "add_length_estimator"], [78, 3, 1, "", "retrieve_waveform_plugins"]], "pycbc.waveform.premerger": [[78, 3, 1, "", "premerger_taylorf2"]], "pycbc.waveform.ringdown": [[78, 3, 1, "", "Kerr_factor"], [78, 3, 1, "", "fd_damped_sinusoid"], [78, 3, 1, "", "fd_output_vector"], [78, 3, 1, "", "format_lmns"], [78, 3, 1, "", "get_fd_from_final_mass_spin"], [78, 3, 1, "", "get_fd_from_freqtau"], [78, 3, 1, "", "get_td_from_final_mass_spin"], [78, 3, 1, "", "get_td_from_freqtau"], [78, 3, 1, "", "lm_amps_phases"], [78, 3, 1, "", "lm_arbitrary_harmonics"], [78, 3, 1, "", "lm_deltaf"], [78, 3, 1, "", "lm_deltat"], [78, 3, 1, "", "lm_ffinal"], [78, 3, 1, "", "lm_freqs_taus"], [78, 3, 1, "", "lm_tfinal"], [78, 3, 1, "", "multimode_base"], [78, 3, 1, "", "parse_mode"], [78, 3, 1, "", "props"], [78, 3, 1, "", "qnm_freq_decay"], [78, 3, 1, "", "qnm_time_decay"], [78, 3, 1, "", "spher_harms"], [78, 3, 1, "", "td_damped_sinusoid"], [78, 3, 1, "", "td_output_vector"]], "pycbc.waveform.sinegauss": [[78, 3, 1, "", "cached_arange"], [78, 3, 1, "", "fd_sine_gaussian"]], "pycbc.waveform.spa_tmplt": [[78, 3, 1, "", "findchirp_chirptime"], [78, 3, 1, "", "spa_amplitude_factor"], [78, 3, 1, "", "spa_distance"], [78, 3, 1, "", "spa_length_in_time"], [78, 3, 1, "", "spa_tmplt"], [78, 3, 1, "", "spa_tmplt_end"], [78, 3, 1, "", "spa_tmplt_engine"], [78, 3, 1, "", "spa_tmplt_norm"], [78, 3, 1, "", "spa_tmplt_precondition"]], "pycbc.waveform.spa_tmplt_cpu": [[78, 3, 1, "", "cbrt_lookup"], [78, 3, 1, "", "get_cbrt"], [78, 3, 1, "", "get_log"], [78, 3, 1, "", "logv_lookup"], [78, 3, 1, "", "spa_tmplt_engine"], [78, 3, 1, "", "spa_tmplt_inline_sequence"]], "pycbc.waveform.spa_tmplt_cupy": [[78, 3, 1, "", "spa_tmplt_engine"]], "pycbc.waveform.supernovae": [[78, 3, 1, "", "get_corecollapse_bounce"]], "pycbc.waveform.utils": [[78, 3, 1, "", "amplitude_from_frequencyseries"], [78, 3, 1, "", "amplitude_from_polarizations"], [78, 3, 1, "", "apply_fd_time_shift"], [78, 3, 1, "", "apply_fseries_time_shift"], [78, 3, 1, "", "ceilpow2"], [78, 3, 1, "", "coalign_waveforms"], [78, 3, 1, "", "fd_taper"], [78, 3, 1, "", "fd_to_td"], [78, 3, 1, "", "frequency_from_polarizations"], [78, 3, 1, "", "phase_from_frequencyseries"], [78, 3, 1, "", "phase_from_polarizations"], [78, 3, 1, "", "td_taper"], [78, 3, 1, "", "time_from_frequencyseries"]], "pycbc.waveform.utils_cpu": [[78, 3, 1, "", "apply_fseries_time_shift"], [78, 3, 1, "", "fstimeshift"], [78, 3, 1, "", "fstimeshift32"]], "pycbc.waveform.utils_cupy": [[78, 3, 1, "", "apply_fseries_time_shift"], [78, 3, 1, "", "fstimeshift"]], "pycbc.waveform.waveform": [[78, 6, 1, "", "FailedWaveformError"], [78, 6, 1, "", "NoWaveformError"], [78, 3, 1, "", "fd_approximants"], [78, 3, 1, "", "filter_approximants"], [78, 3, 1, "", "get_fd_det_waveform"], [78, 3, 1, "", "get_fd_det_waveform_sequence"], [78, 3, 1, "", "get_fd_waveform"], [78, 3, 1, "", "get_fd_waveform_from_td"], [78, 3, 1, "", "get_fd_waveform_sequence"], [78, 3, 1, "", "get_sgburst_waveform"], [78, 3, 1, "", "get_td_det_waveform_from_fd_det"], [78, 3, 1, "", "get_td_waveform"], [78, 3, 1, "", "get_td_waveform_from_fd"], [78, 3, 1, "", "get_template_amplitude_norm"], [78, 3, 1, "", "get_two_pol_waveform_filter"], [78, 3, 1, "", "get_waveform_end_frequency"], [78, 3, 1, "", "get_waveform_filter"], [78, 3, 1, "", "get_waveform_filter_length_in_time"], [78, 3, 1, "", "get_waveform_filter_norm"], [78, 3, 1, "", "print_fd_approximants"], [78, 3, 1, "", "print_sgburst_approximants"], [78, 3, 1, "", "print_td_approximants"], [78, 3, 1, "", "sgburst_approximants"], [78, 3, 1, "", "td_approximants"], [78, 3, 1, "", "td_waveform_to_fd_waveform"], [78, 3, 1, "", "waveform_norm_exists"]], "pycbc.waveform.waveform_modes": [[78, 3, 1, "", "default_modes"], [78, 3, 1, "", "fd_waveform_mode_approximants"], [78, 3, 1, "", "get_fd_waveform_modes"], [78, 3, 1, "", "get_glm"], [78, 3, 1, "", "get_imrphenomxh_modes"], [78, 3, 1, "", "get_lalsimulation_approximant"], [78, 3, 1, "", "get_lalsimulation_modes"], [78, 3, 1, "", "get_nrhybsur_modes"], [78, 3, 1, "", "get_nrsur_modes"], [78, 3, 1, "", "get_td_waveform_modes"], [78, 3, 1, "", "sum_modes"], [78, 3, 1, "", "td_waveform_mode_approximants"]], "pycbc.workflow": [[79, 0, 0, "-", "coincidence"], [79, 0, 0, "-", "configparser_test"], [79, 0, 0, "-", "configuration"], [79, 0, 0, "-", "core"], [79, 0, 0, "-", "datafind"], [79, 0, 0, "-", "dq"], [79, 0, 0, "-", "grb_utils"], [79, 0, 0, "-", "inference_followups"], [79, 0, 0, "-", "injection"], [79, 0, 0, "-", "jobsetup"], [79, 0, 0, "-", "matched_filter"], [79, 0, 0, "-", "minifollowups"], [79, 0, 0, "-", "pegasus_sites"], [79, 0, 0, "-", "pegasus_workflow"], [79, 0, 0, "-", "plotting"], [79, 0, 0, "-", "psd"], [79, 0, 0, "-", "psdfiles"], [79, 0, 0, "-", "segment"], [79, 0, 0, "-", "splittable"], [79, 0, 0, "-", "tmpltbank"], [79, 0, 0, "-", "versioning"]], "pycbc.workflow.coincidence": [[79, 1, 1, "", "CensorForeground"], [79, 1, 1, "", "MergeExecutable"], [79, 1, 1, "", "PyCBCAddStatmap"], [79, 1, 1, "", "PyCBCBank2HDFExecutable"], [79, 1, 1, "", "PyCBCCombineStatmap"], [79, 1, 1, "", "PyCBCDistributeBackgroundBins"], [79, 1, 1, "", "PyCBCExcludeZerolag"], [79, 1, 1, "", "PyCBCFindCoincExecutable"], [79, 1, 1, "", "PyCBCFindSnglsExecutable"], [79, 1, 1, "", "PyCBCFitByTemplateExecutable"], [79, 1, 1, "", "PyCBCFitOverParamExecutable"], [79, 1, 1, "", "PyCBCHDFInjFindExecutable"], [79, 1, 1, "", "PyCBCSnglsStatMapExecutable"], [79, 1, 1, "", "PyCBCSnglsStatMapInjExecutable"], [79, 1, 1, "", "PyCBCStatMapExecutable"], [79, 1, 1, "", "PyCBCStatMapInjExecutable"], [79, 1, 1, "", "PyCBCTrig2HDFExecutable"], [79, 3, 1, "", "convert_bank_to_hdf"], [79, 3, 1, "", "convert_trig_to_hdf"], [79, 3, 1, "", "find_injections_in_hdf_coinc"], [79, 3, 1, "", "get_ordered_ifo_list"], [79, 3, 1, "", "make_foreground_censored_veto"], [79, 3, 1, "", "merge_single_detector_hdf_files"], [79, 3, 1, "", "rerank_coinc_followup"], [79, 3, 1, "", "select_files_by_ifo_combination"], [79, 3, 1, "", "setup_combine_statmap"], [79, 3, 1, "", "setup_exclude_zerolag"], [79, 3, 1, "", "setup_interval_coinc"], [79, 3, 1, "", "setup_interval_coinc_inj"], [79, 3, 1, "", "setup_sngls"], [79, 3, 1, "", "setup_sngls_inj"], [79, 3, 1, "", "setup_sngls_statmap"], [79, 3, 1, "", "setup_sngls_statmap_inj"], [79, 3, 1, "", "setup_statmap"], [79, 3, 1, "", "setup_statmap_inj"], [79, 3, 1, "", "setup_trigger_fitting"]], "pycbc.workflow.coincidence.CensorForeground": [[79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.MergeExecutable": [[79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCAddStatmap": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCCombineStatmap": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCExcludeZerolag": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCFindCoincExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCFindSnglsExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "file_input_options"]], "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCSnglsStatMapExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCSnglsStatMapInjExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCStatMapExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.configparser_test": [[79, 3, 1, "", "add_options_to_section"], [79, 3, 1, "", "check_duplicate_options"], [79, 3, 1, "", "interpolate_string"], [79, 3, 1, "", "parse_workflow_ini_file"], [79, 3, 1, "", "perform_extended_interpolation"], [79, 3, 1, "", "read_ini_file"], [79, 3, 1, "", "sanity_check_subsections"], [79, 3, 1, "", "split_multi_sections"]], "pycbc.workflow.configuration": [[79, 1, 1, "", "WorkflowConfigParser"], [79, 3, 1, "", "add_workflow_command_line_group"], [79, 3, 1, "", "hash_compare"], [79, 3, 1, "", "resolve_url"], [79, 3, 1, "", "resolve_url_http"]], "pycbc.workflow.configuration.WorkflowConfigParser": [[79, 2, 1, "", "get_cli_option"], [79, 2, 1, "", "interpolate_exe"], [79, 2, 1, "", "perform_exe_expansion"], [79, 2, 1, "", "resolve_file_url"], [79, 2, 1, "", "resolve_urls"], [79, 2, 1, "", "section_to_cli"]], "pycbc.workflow.core": [[79, 6, 1, "", "CalledProcessErrorMod"], [79, 1, 1, "", "Executable"], [79, 1, 1, "", "File"], [79, 1, 1, "", "FileList"], [79, 1, 1, "", "Node"], [79, 1, 1, "", "SegFile"], [79, 1, 1, "", "Workflow"], [79, 3, 1, "", "add_workflow_settings_cli"], [79, 3, 1, "", "configparser_value_to_file"], [79, 3, 1, "", "get_full_analysis_chunk"], [79, 3, 1, "", "get_random_label"], [79, 3, 1, "", "make_analysis_dir"], [79, 3, 1, "", "make_external_call"], [79, 3, 1, "", "resolve_td_option"], [79, 3, 1, "", "resolve_url_to_file"]], "pycbc.workflow.core.Executable": [[79, 5, 1, "", "ALL_TRIGGERS"], [79, 5, 1, "", "DO_NOT_KEEP"], [79, 5, 1, "", "FINAL_RESULT"], [79, 5, 1, "", "INTERMEDIATE_PRODUCT"], [79, 5, 1, "", "KEEP_BUT_RAISE_WARNING"], [79, 5, 1, "", "MERGED_TRIGGERS"], [79, 2, 1, "", "add_ini_profile"], [79, 2, 1, "", "add_opt"], [79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "file_input_options"], [79, 2, 1, "", "get_opt"], [79, 2, 1, "", "get_transformation"], [79, 2, 1, "", "has_opt"], [79, 4, 1, "", "ifo"], [79, 5, 1, "", "time_dependent_options"], [79, 2, 1, "", "update_current_retention_level"], [79, 2, 1, "", "update_current_tags"], [79, 2, 1, "", "update_output_directory"]], "pycbc.workflow.core.File": [[79, 2, 1, "", "add_metadata"], [79, 4, 1, "", "cache_entry"], [79, 2, 1, "", "from_path"], [79, 4, 1, "", "ifo"], [79, 4, 1, "", "segment"]], "pycbc.workflow.core.FileList": [[79, 2, 1, "", "categorize_by_attr"], [79, 2, 1, "", "convert_to_lal_cache"], [79, 2, 1, "", "dump"], [79, 5, 1, "", "entry_class"], [79, 2, 1, "", "find_all_output_in_range"], [79, 2, 1, "", "find_output"], [79, 2, 1, "", "find_output_at_time"], [79, 2, 1, "", "find_output_in_range"], [79, 2, 1, "", "find_output_with_ifo"], [79, 2, 1, "", "find_output_with_tag"], [79, 2, 1, "", "find_output_without_tag"], [79, 2, 1, "", "find_outputs_in_range"], [79, 2, 1, "", "get_times_covered_by_files"], [79, 2, 1, "", "load"], [79, 2, 1, "", "to_file_object"]], "pycbc.workflow.core.Node": [[79, 2, 1, "", "add_multiifo_input_list_opt"], [79, 2, 1, "", "add_multiifo_output_list_opt"], [79, 2, 1, "", "get_command_line"], [79, 2, 1, "", "new_multiifo_output_list_opt"], [79, 2, 1, "", "new_output_file_opt"], [79, 4, 1, "", "output_file"], [79, 4, 1, "", "output_files"], [79, 2, 1, "", "resolve_td_options"]], "pycbc.workflow.core.SegFile": [[79, 2, 1, "", "from_multi_segment_list"], [79, 2, 1, "", "from_segment_list"], [79, 2, 1, "", "from_segment_list_dict"], [79, 2, 1, "", "from_segment_xml"], [79, 2, 1, "", "parse_segdict_key"], [79, 2, 1, "", "remove_short_sci_segs"], [79, 2, 1, "", "return_union_seglist"], [79, 2, 1, "", "to_segment_xml"]], "pycbc.workflow.core.Workflow": [[79, 4, 1, "", "exec_sites_str"], [79, 2, 1, "", "execute_node"], [79, 2, 1, "", "get_ifo_combinations"], [79, 4, 1, "", "output_map"], [79, 2, 1, "", "save"], [79, 2, 1, "", "save_config"], [79, 4, 1, "", "sites"], [79, 4, 1, "", "staging_site"], [79, 4, 1, "", "staging_site_str"]], "pycbc.workflow.datafind": [[79, 3, 1, "", "convert_cachelist_to_filelist"], [79, 3, 1, "", "datafind_keep_unique_backups"], [79, 3, 1, "", "get_missing_segs_from_frame_file_cache"], [79, 3, 1, "", "get_science_segs_from_datafind_outs"], [79, 3, 1, "", "get_segment_summary_times"], [79, 3, 1, "", "log_datafind_command"], [79, 3, 1, "", "run_datafind_instance"], [79, 3, 1, "", "setup_datafind_from_pregenerated_lcf_files"], [79, 3, 1, "", "setup_datafind_runtime_cache_multi_calls_perifo"], [79, 3, 1, "", "setup_datafind_runtime_cache_single_call_perifo"], [79, 3, 1, "", "setup_datafind_runtime_frames_multi_calls_perifo"], [79, 3, 1, "", "setup_datafind_runtime_frames_single_call_perifo"], [79, 3, 1, "", "setup_datafind_workflow"]], "pycbc.workflow.dq": [[79, 1, 1, "", "PyCBCBinTemplatesDQExecutable"], [79, 1, 1, "", "PyCBCBinTriggerRatesDQExecutable"], [79, 3, 1, "", "setup_dq_reranking"]], "pycbc.workflow.dq.PyCBCBinTemplatesDQExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.dq.PyCBCBinTriggerRatesDQExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.grb_utils": [[79, 1, 1, "", "PycbcGrbInjFinderExecutable"], [79, 1, 1, "", "PycbcGrbTrigClusterExecutable"], [79, 1, 1, "", "PycbcGrbTrigCombinerExecutable"], [79, 3, 1, "", "build_segment_filelist"], [79, 3, 1, "", "fermi_core_tail_model"], [79, 3, 1, "", "generate_tc_prior"], [79, 3, 1, "", "get_sky_grid_scale"], [79, 3, 1, "", "make_gating_node"], [79, 3, 1, "", "make_pygrb_info_table"], [79, 3, 1, "", "make_pygrb_injs_tables"], [79, 3, 1, "", "make_pygrb_plot"], [79, 3, 1, "", "make_skygrid_node"], [79, 3, 1, "", "set_grb_start_end"], [79, 3, 1, "", "setup_pygrb_minifollowups"], [79, 3, 1, "", "setup_pygrb_pp_workflow"], [79, 3, 1, "", "setup_pygrb_results_workflow"]], "pycbc.workflow.grb_utils.PycbcGrbInjFinderExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.grb_utils.PycbcGrbTrigClusterExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.grb_utils.PycbcGrbTrigCombinerExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.inference_followups": [[79, 3, 1, "", "create_fits_file"], [79, 3, 1, "", "create_posterior_files"], [79, 3, 1, "", "get_diagnostic_plots"], [79, 3, 1, "", "get_plot_group"], [79, 3, 1, "", "make_diagnostic_plots"], [79, 3, 1, "", "make_inference_acceptance_rate_plot"], [79, 3, 1, "", "make_inference_dynesty_run_plot"], [79, 3, 1, "", "make_inference_dynesty_trace_plot"], [79, 3, 1, "", "make_inference_inj_recovery_plot"], [79, 3, 1, "", "make_inference_plot"], [79, 3, 1, "", "make_inference_plot_mcmc_history"], [79, 3, 1, "", "make_inference_posterior_plot"], [79, 3, 1, "", "make_inference_pp_plot"], [79, 3, 1, "", "make_inference_pp_table"], [79, 3, 1, "", "make_inference_prior_plot"], [79, 3, 1, "", "make_inference_samples_plot"], [79, 3, 1, "", "make_inference_skymap"], [79, 3, 1, "", "make_inference_summary_table"], [79, 3, 1, "", "make_posterior_workflow"]], "pycbc.workflow.injection": [[79, 1, 1, "", "PyCBCMergeHDFExecutable"], [79, 1, 1, "", "PyCBCOptimalSNRExecutable"], [79, 3, 1, "", "compute_inj_optimal_snr"], [79, 3, 1, "", "cut_distant_injections"], [79, 3, 1, "", "inj_to_hdf"], [79, 3, 1, "", "setup_injection_workflow"], [79, 3, 1, "", "veto_injections"]], "pycbc.workflow.injection.PyCBCMergeHDFExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.injection.PyCBCOptimalSNRExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.jobsetup": [[79, 1, 1, "", "JobSegmenter"], [79, 1, 1, "", "LalappsInspinjExecutable"], [79, 1, 1, "", "LigolwAddExecutable"], [79, 1, 1, "", "PyCBCInspiralExecutable"], [79, 1, 1, "", "PyCBCMultiInspiralExecutable"], [79, 1, 1, "", "PyCBCTmpltbankExecutable"], [79, 1, 1, "", "PycbcConditionStrainExecutable"], [79, 1, 1, "", "PycbcCreateInjectionsExecutable"], [79, 1, 1, "", "PycbcHDFSplitInjExecutable"], [79, 1, 1, "", "PycbcInferenceExecutable"], [79, 1, 1, "", "PycbcSplitBankExecutable"], [79, 1, 1, "", "PycbcSplitBankXmlExecutable"], [79, 1, 1, "", "PycbcSplitInspinjExecutable"], [79, 3, 1, "", "identify_needed_data"], [79, 3, 1, "", "int_gps_time_to_str"], [79, 3, 1, "", "multi_ifo_coherent_job_setup"], [79, 3, 1, "", "select_generic_executable"], [79, 3, 1, "", "select_matchedfilter_class"], [79, 3, 1, "", "select_tmpltbank_class"], [79, 3, 1, "", "sngl_ifo_job_setup"]], "pycbc.workflow.jobsetup.JobSegmenter": [[79, 2, 1, "", "get_data_times_for_job"], [79, 2, 1, "", "get_valid_times_for_job"], [79, 2, 1, "", "pick_tile_size"]], "pycbc.workflow.jobsetup.LalappsInspinjExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "extension"]], "pycbc.workflow.jobsetup.LigolwAddExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.jobsetup.PyCBCInspiralExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 2, 1, "", "get_valid_times"], [79, 5, 1, "", "time_dependent_options"], [79, 2, 1, "", "zero_pad_data_extend"]], "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "file_input_options"], [79, 2, 1, "", "get_valid_times"]], "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable": [[79, 2, 1, "", "create_nodata_node"], [79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 2, 1, "", "get_valid_times"]], "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "extension"]], "pycbc.workflow.jobsetup.PycbcHDFSplitInjExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.jobsetup.PycbcInferenceExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.jobsetup.PycbcSplitBankExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"], [79, 5, 1, "", "extension"]], "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable": [[79, 5, 1, "", "extension"]], "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.matched_filter": [[79, 3, 1, "", "setup_matchedfltr_dax_generated"], [79, 3, 1, "", "setup_matchedfltr_dax_generated_multi"], [79, 3, 1, "", "setup_matchedfltr_workflow"]], "pycbc.workflow.minifollowups": [[79, 1, 1, "", "PlotQScanExecutable"], [79, 1, 1, "", "SingleTemplateExecutable"], [79, 1, 1, "", "SingleTimeFreqExecutable"], [79, 3, 1, "", "get_single_template_params"], [79, 3, 1, "", "grouper"], [79, 3, 1, "", "make_coinc_info"], [79, 3, 1, "", "make_inj_info"], [79, 3, 1, "", "make_plot_waveform_plot"], [79, 3, 1, "", "make_qscan_plot"], [79, 3, 1, "", "make_single_template_files"], [79, 3, 1, "", "make_single_template_plots"], [79, 3, 1, "", "make_singles_timefreq"], [79, 3, 1, "", "make_skipped_html"], [79, 3, 1, "", "make_sngl_ifo"], [79, 3, 1, "", "make_trigger_timeseries"], [79, 3, 1, "", "make_upload_files"], [79, 3, 1, "", "setup_foreground_minifollowups"], [79, 3, 1, "", "setup_injection_minifollowups"], [79, 3, 1, "", "setup_single_det_minifollowups"], [79, 3, 1, "", "setup_upload_prep_minifollowups"]], "pycbc.workflow.minifollowups.PlotQScanExecutable": [[79, 5, 1, "", "time_dependent_options"]], "pycbc.workflow.minifollowups.SingleTemplateExecutable": [[79, 5, 1, "", "time_dependent_options"]], "pycbc.workflow.minifollowups.SingleTimeFreqExecutable": [[79, 5, 1, "", "time_dependent_options"]], "pycbc.workflow.pegasus_sites": [[79, 3, 1, "", "add_condorpool_copy_site"], [79, 3, 1, "", "add_condorpool_shared_site"], [79, 3, 1, "", "add_condorpool_symlink_site"], [79, 3, 1, "", "add_ini_site_profile"], [79, 3, 1, "", "add_local_site"], [79, 3, 1, "", "add_osg_site"], [79, 3, 1, "", "add_site"], [79, 3, 1, "", "add_site_pegasus_profile"], [79, 3, 1, "", "make_catalog"]], "pycbc.workflow.pegasus_workflow": [[79, 1, 1, "", "Executable"], [79, 1, 1, "", "File"], [79, 1, 1, "", "Node"], [79, 1, 1, "", "ProfileShortcuts"], [79, 1, 1, "", "SubWorkflow"], [79, 1, 1, "", "Transformation"], [79, 1, 1, "", "Workflow"]], "pycbc.workflow.pegasus_workflow.Executable": [[79, 2, 1, "", "add_profile"], [79, 2, 1, "", "create_transformation"], [79, 5, 1, "", "id"]], "pycbc.workflow.pegasus_workflow.File": [[79, 2, 1, "", "add_pfn"], [79, 4, 1, "", "dax_repr"], [79, 2, 1, "", "from_path"], [79, 2, 1, "", "has_pfn"], [79, 2, 1, "", "insert_into_dax"], [79, 2, 1, "", "output_map_str"]], "pycbc.workflow.pegasus_workflow.Node": [[79, 2, 1, "", "add_arg"], [79, 2, 1, "", "add_input"], [79, 2, 1, "", "add_input_arg"], [79, 2, 1, "", "add_input_list_opt"], [79, 2, 1, "", "add_input_opt"], [79, 2, 1, "", "add_list_opt"], [79, 2, 1, "", "add_opt"], [79, 2, 1, "", "add_output"], [79, 2, 1, "", "add_output_arg"], [79, 2, 1, "", "add_output_list_opt"], [79, 2, 1, "", "add_output_opt"], [79, 2, 1, "", "add_profile"], [79, 2, 1, "", "add_raw_arg"], [79, 2, 1, "", "new_output_file_opt"]], "pycbc.workflow.pegasus_workflow.ProfileShortcuts": [[79, 2, 1, "", "set_category"], [79, 2, 1, "", "set_execution_site"], [79, 2, 1, "", "set_memory"], [79, 2, 1, "", "set_num_cpus"], [79, 2, 1, "", "set_num_retries"], [79, 2, 1, "", "set_priority"], [79, 2, 1, "", "set_storage"], [79, 2, 1, "", "set_universe"]], "pycbc.workflow.pegasus_workflow.SubWorkflow": [[79, 2, 1, "", "add_into_workflow"], [79, 2, 1, "", "add_planner_arg"], [79, 2, 1, "", "set_subworkflow_properties"]], "pycbc.workflow.pegasus_workflow.Transformation": [[79, 2, 1, "", "is_same_as"]], "pycbc.workflow.pegasus_workflow.Workflow": [[79, 2, 1, "", "add_container"], [79, 2, 1, "", "add_explicit_dependancy"], [79, 2, 1, "", "add_node"], [79, 2, 1, "", "add_subworkflow_dependancy"], [79, 2, 1, "", "add_transformation"], [79, 2, 1, "", "add_workflow"], [79, 2, 1, "", "plan_and_submit"], [79, 2, 1, "", "save"], [79, 2, 1, "", "traverse_workflow_io"]], "pycbc.workflow.plotting": [[79, 1, 1, "", "PlotExecutable"], [79, 3, 1, "", "excludestr"], [79, 3, 1, "", "make_bank_compression_plots"], [79, 3, 1, "", "make_binned_hist"], [79, 3, 1, "", "make_coinc_snrchi_plot"], [79, 3, 1, "", "make_dq_flag_trigger_rate_plot"], [79, 3, 1, "", "make_dq_segment_table"], [79, 3, 1, "", "make_farstat_plot"], [79, 3, 1, "", "make_foreground_table"], [79, 3, 1, "", "make_foundmissed_plot"], [79, 3, 1, "", "make_gating_plot"], [79, 3, 1, "", "make_ifar_plot"], [79, 3, 1, "", "make_inj_table"], [79, 3, 1, "", "make_range_plot"], [79, 3, 1, "", "make_results_web_page"], [79, 3, 1, "", "make_seg_plot"], [79, 3, 1, "", "make_seg_table"], [79, 3, 1, "", "make_segments_plot"], [79, 3, 1, "", "make_sensitivity_plot"], [79, 3, 1, "", "make_single_hist"], [79, 3, 1, "", "make_singles_plot"], [79, 3, 1, "", "make_snrchi_plot"], [79, 3, 1, "", "make_snrifar_plot"], [79, 3, 1, "", "make_snrratehist_plot"], [79, 3, 1, "", "make_spectrum_plot"], [79, 3, 1, "", "make_template_bin_table"], [79, 3, 1, "", "make_template_plot"], [79, 3, 1, "", "make_throughput_plot"], [79, 3, 1, "", "make_veto_table"], [79, 3, 1, "", "requirestr"]], "pycbc.workflow.plotting.PlotExecutable": [[79, 2, 1, "", "create_node"], [79, 5, 1, "", "current_retention_level"]], "pycbc.workflow.psd": [[79, 3, 1, "", "make_average_psd"], [79, 3, 1, "", "make_psd_file"], [79, 3, 1, "", "merge_psds"], [79, 3, 1, "", "setup_psd_calculate"]], "pycbc.workflow.psdfiles": [[79, 3, 1, "", "setup_psd_pregenerated"], [79, 3, 1, "", "setup_psd_workflow"]], "pycbc.workflow.segment": [[79, 3, 1, "", "generate_triggered_segment"], [79, 3, 1, "", "get_flag_segments_file"], [79, 3, 1, "", "get_segments_file"], [79, 3, 1, "", "get_triggered_coherent_segment"], [79, 3, 1, "", "save_veto_definer"]], "pycbc.workflow.splittable": [[79, 3, 1, "", "select_splitfilejob_instance"], [79, 3, 1, "", "setup_splittable_dax_generated"], [79, 3, 1, "", "setup_splittable_workflow"]], "pycbc.workflow.tmpltbank": [[79, 3, 1, "", "make_combine_split_banks"], [79, 3, 1, "", "make_compress_split_banks"], [79, 3, 1, "", "setup_tmpltbank_dax_generated"], [79, 3, 1, "", "setup_tmpltbank_pregenerated"], [79, 3, 1, "", "setup_tmpltbank_without_frames"], [79, 3, 1, "", "setup_tmpltbank_workflow"]], "pycbc.workflow.versioning": [[79, 1, 1, "", "VersioningExecutable"], [79, 3, 1, "", "make_versioning_page"]], "pycbc.workflow.versioning.VersioningExecutable": [[79, 5, 1, "", "current_retention_level"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "terms": {"": [1, 8, 12, 13, 14, 17, 18, 19, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 41, 43, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "0": [1, 8, 10, 12, 14, 15, 17, 18, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 87, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102], "00": [52, 64, 97], "000": [10, 30, 96, 97], "000000": 84, "000000000000000000000393": 73, "0000133514404297": 67, "000025987625122": 67, "0001": [35, 36, 56, 75], "0002": 94, "0002814531326294": 67, "0005437135696411": 67, "0007": 71, "00099667": 52, "001": [38, 40, 52, 56, 72, 79, 97], "002": 57, "0020891427993774": 67, "002444164314882327": 15, "003": [57, 78], "005": [34, 59, 91], "00531888": 67, "0053188800811768": 67, "007": 27, "0074082612991333": 67, "00993347": 52, "00boot": 47, "00j": 64, "01": [12, 35, 36, 52, 63, 65, 75, 84, 92, 102], "010": 56, "010012846152267725": 15, "0143394470214844": 67, "0146": [38, 40], "014733669725760679": 15, "01_segment_data": 97, "02": 78, "02138216202": 15, "022002": 84, "02357": 57, "024002": 84, "024003": 84, "024004": 84, "024010": 84, "024033": 84, "02444": 59, "025": 56, "0264": 72, "02644834101635671": 15, "02717v3": 71, "027287979933397113": 15, "02732205": 67, "0273220539093018": 67, "03": [38, 75], "03006": 79, "035": 57, "035010": 72, "04": 28, "0405045": 23, "041": 46, "043002": 52, "043003": 72, "04724": 57, "05": [10, 17, 59, 84, 87, 99], "050": 97, "0504961": 67, "0504961013793945": 67, "0509116": 72, "0512160": 52, "05238": 64, "0578444004058838": 67, "0594885173533086": 15, "06": 97, "0617574453799996": 15, "063021": 72, "064021": 72, "07": 52, "07013": 78, "0704": 52, "07053": 71, "0706": 52, "0709": 52, "07494": 59, "07887": 71, "0801": 52, "0804": 71, "0810": 52, "081501": [52, 69], "083": 73, "084017": 84, "084041": [52, 84], "084053": [52, 69], "084056769170001": 15, "0854": 78, "08792": 64, "08974": 77, "09": 96, "09181": 59, "0943951023931953": 15, "095": 59, "09950042": 52, "0_": 78, "0_i": 64, "0hz": 28, "0j": [87, 88], "0pn": [8, 30, 78], "0x10e546710": 78, "0x1110c1450": 78, "0x1110c1510": 78, "0x115f37690": 78, "0x116637350": 78, "0x116637a50": 78, "0x51614d0": 78, "0x5161550": 78, "0x7f050d07a520": 84, "0x7f050d07a5c0": 84, "0x7f6f91837380": [84, 102], "0x7f6f91837420": [84, 102], "0x7f71f2e5e8e0": 84, "0x7f71f2e5e980": 84, "1": [8, 10, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "10": [10, 14, 15, 17, 28, 31, 32, 33, 34, 35, 38, 39, 40, 44, 52, 56, 57, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 78, 79, 80, 83, 84, 87, 88, 91, 92, 94, 95, 96, 97, 98, 102], "100": [10, 15, 17, 21, 30, 31, 32, 35, 37, 38, 39, 40, 44, 52, 56, 57, 59, 64, 67, 71, 72, 75, 78, 79, 84, 87, 88, 94, 95, 97, 98], "1000": [10, 21, 23, 28, 30, 32, 37, 39, 40, 51, 52, 56, 57, 63, 64, 65, 73, 78, 84, 91, 93, 96, 97], "10000": [10, 17, 28, 34, 39, 40, 56, 57, 64, 65, 71, 84, 97], "100000": [14, 17, 52, 65, 84, 97], "1000000": [17, 64, 67, 79, 84], "10000000": 14, "100000000": [15, 52], "1000000000": [10, 15, 21, 52, 84, 100], "1000001000": 21, "1000010000": 10, "1000250000": 10, "1000hz": 84, "1000th": 97, "100gb": 30, "100hz": 59, "100th": 30, "101": 64, "1012": 57, "1015522": [35, 36], "1019335": 86, "102": 72, "102004": 84, "10231435": 67, "1023143529891968": 67, "1024": [10, 21, 27, 34, 38, 51, 84], "104": 64, "104014": 84, "1048576": [57, 94, 102], "1049587200": 25, "105": 34, "10653": [84, 102], "1066800": 97, "107": 72, "10821041362": 15, "1088": 72, "109": 59, "109058546060346": 56, "1091": [35, 36], "10gb": 97, "10mpc": 96, "10x": 78, "11": [52, 57, 72, 79, 83, 84], "110": 12, "1100": 92, "1101767270538954": 78, "1103": [52, 72], "1107": 78, "111": [15, 17, 52], "11106491": 67, "111064910888672": 67, "1116700672": 10, "1117400416": 67, "11203200": 84, "1123858817": 98, "1124380361": 28, "1124381661": 28, "1124382409": 28, "1125217722": 98, "1125614344": 99, "1126051217": [14, 84], "1126257415": [33, 37], "1126259200": 96, "1126259446": 27, "1126259462": [27, 32, 33, 34, 37, 55, 96], "1126259600": 96, "1126368017": 28, "1126859462": 34, "1130371217": 28, "1130754617": 86, "1137254417": 84, "114": 72, "11607": 67, "11608": 67, "11609": 67, "1169107218": 97, "116912": 97, "1169120586": 97, "1186741861": 96, "1187007040": [38, 40], "1187008482": [38, 40], "1187008882": [38, 40], "1187008892": [38, 40], "1192529720": 87, "11999": 44, "12": [30, 32, 35, 44, 57, 67, 72, 76, 84, 94, 97], "120": [91, 97], "1200": 27, "12000": 44, "1208": 57, "122": 56, "122003": 84, "1230": 56, "1234": [80, 97], "123434": 21, "1238782700": 12, "1239082262": 12, "1239168612": 12, "1239198206": 12, "1239917954": 12, "124007": [52, 84], "1240164426": 12, "1240215503": 12, "1240327333": 12, "1240944862": 12, "1241719652": 12, "1241816086": 12, "1241852074": 12, "1242107479": 12, "1242315362": 12, "1242442818": 80, "1242442882": 80, "1242442967": 12, "1242459857": 12, "1242984073": 12, "1243533585": 12, "1245035079": 12, "1245955943": 12, "1246048404": 12, "1246487219": 12, "1246527224": 12, "1246663515": 12, "1247608532": 12, "1247616534": 12, "1248242632": 12, "1248331528": 12, "1248617394": 12, "1248834439": 12, "1249852257": 12, "125": 15, "1251009263": 12, "1251010527": 12, "1252064527": 12, "1252150105": 12, "1252627040": 12, "1253326744": 12, "1253755327": 12, "1253885759": 12, "127": [18, 23, 50, 51], "128": [51, 70, 84, 99, 102], "128124": 57, "12deg": 76, "12h": 98, "13": [52, 56, 72, 84], "1302": 52, "1333": 94, "133920": 35, "134217728": 59, "1361": 72, "1366472": 67, "1382": 94, "14": [21, 36, 52, 56, 83, 97], "1403": 71, "1410": 57, "1469802543574181": [35, 36], "15": [10, 12, 17, 21, 27, 30, 32, 33, 34, 35, 37, 38, 40, 52, 69, 71, 72, 74, 80, 84, 86, 91, 94, 96, 98, 102], "150": [27, 35, 36, 39, 59], "1500": [27, 96], "150000": [10, 97], "1508": 57, "150906b": 99, "150914": 56, "1538": 57, "155": [93, 97], "15572853": [35, 36], "159": 99, "16": [23, 25, 28, 32, 38, 40, 47, 50, 51, 52, 57, 72, 80, 84, 94, 97, 98, 102], "160": [15, 63], "1603": 59, "1606": 71, "16174992": 76, "1630208": 10, "16384": [10, 21, 25, 28, 40, 70, 80, 84, 102], "16384hz": 28, "1662": 97, "16khz_r1_strain": [33, 80, 96], "17": [52, 57, 84, 91, 97], "1706": 71, "1709": [59, 77], "17116780435": 15, "1712": 57, "173205080": 72, "1758257150650024": 67, "177": 64, "17758": [35, 36], "178": 69, "18": [10, 30, 32, 34, 52, 57], "180": [15, 44], "1800": 34, "1806": 64, "1808": 78, "1819299673": 15, "18333805213": 15, "184027": 84, "1840585887": 15, "1876": 38, "1897234": 33, "18t09": 52, "19": [54, 63, 72, 94, 97], "1909": 79, "1915": 84, "195011": 84, "1964": 52, "19650987609144363": 52, "1972": 69, "1972apj": 69, "19866933": 67, "1988": 59, "1991": 84, "1995": 84, "1996": 84, "1998": 84, "1999": 56, "1d": [17, 41, 53, 56, 61, 62, 73, 79], "1e": [35, 36, 51, 56, 59, 72, 73, 78], "1e10": 15, "1e6": 40, "1f": 73, "1gpc": 96, "1hz": 59, "1mpc": 24, "1pn": [8, 30, 75, 78, 84, 102], "1rad": 76, "1st": 75, "2": [8, 10, 12, 14, 15, 17, 21, 22, 23, 24, 27, 28, 30, 31, 33, 34, 35, 36, 37, 44, 46, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 87, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102], "20": [12, 15, 27, 30, 32, 33, 34, 35, 36, 37, 44, 52, 56, 57, 63, 64, 65, 67, 72, 74, 78, 83, 86, 87, 88, 94, 96, 97], "200": [12, 17, 30, 32, 35, 39, 40, 56, 74, 84, 91, 96, 97], "2000": [32, 34, 37, 39, 44, 51, 84, 92, 94, 96, 102], "20000": [15, 84], "2000000": 84, "20000000": 84, "2000000000": 79, "20000000000": 84, "2000m": 99, "2000th": 97, "2006": 84, "2007": 84, "2008": [59, 84], "2009": [56, 84], "2010": 84, "2011": [57, 71], "2012": [52, 84], "2013": [52, 69, 84], "2014": [57, 71, 84, 89], "2015": [10, 46, 84, 86, 96], "2016": 84, "2017": [57, 71], "2018": [52, 57, 64, 69, 84], "2019": [57, 79], "2021": 59, "2022": 52, "2048": [23, 28, 32, 33, 34, 37, 38, 40, 50, 51, 56, 59, 60, 64, 72, 78, 80, 84, 94, 96, 98, 101, 102], "2076": 38, "20853775679": 15, "209": 64, "20gb": [30, 97], "20hz": 96, "21": [27, 52, 57, 69, 78], "2105": 64, "211": 78, "2124452590942383": 67, "2164380550384521": 67, "21875915": 52, "22": [42, 52, 64, 73, 78, 87], "220": 78, "221": [17, 78], "22117684945999996": 15, "222": [17, 78], "223": [17, 78], "224": [17, 73], "22558110042980073": [35, 36], "23": [34, 37, 38, 54, 64, 73, 78, 84, 87], "23176801": 100, "2336490154266357": 67, "2351435286500487e": 73, "237": 34, "239": 99, "24": [35, 44, 52, 64, 73, 75, 97], "2453839778900146": 67, "25": [10, 21, 23, 27, 28, 32, 38, 52, 56, 57, 64, 65, 72, 74, 76, 84, 92, 99, 102], "250": [27, 57, 79], "2500000000": 72, "256": [10, 28, 32, 33, 34, 37, 66, 84, 96, 97, 98, 99, 102], "258000": 97, "25hz": 10, "26": [57, 64, 78], "26735978": 36, "26735979": 35, "267840": 35, "27": 52, "270": 73, "2700310560051804e": 73, "2734504596198182": [35, 36], "274": 78, "274406909942627": 67, "27440691": 67, "2744225048415756": 36, "274911478": [35, 36], "275929308696054": [35, 36], "28": [28, 56, 69], "282": 64, "283": 64, "29": [15, 64, 78, 79], "294212757995254": 56, "2954373": 67, "2_1": 52, "2_2": 52, "2_r": 23, "2a": 36, "2d": [31, 57, 59, 61, 64, 75, 76, 84], "2f": 64, "2h": [52, 69, 75, 84, 102], "2nd": 75, "2pi": [56, 63, 64, 87], "2pn": [8, 30, 52, 75, 78, 84, 102], "2\u03c0": [56, 75], "3": [8, 10, 12, 17, 27, 30, 38, 39, 40, 45, 46, 51, 52, 53, 55, 56, 57, 58, 60, 62, 64, 65, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "30": [10, 15, 21, 23, 28, 37, 38, 40, 47, 50, 51, 56, 64, 67, 74, 76, 78, 83, 84, 87, 92, 93, 94, 96, 97, 102], "300": [27, 38, 93, 97], "3000": [27, 75, 97], "30000": 97, "3000000000": 72, "3000th": 97, "3033": 84, "3058132": 94, "30hz": 10, "31": [40, 91, 97], "31536000": [35, 36], "317": 78, "32": [17, 27, 32, 40, 50, 53, 56, 78, 94, 96], "324": 52, "3271947": 67, "32768": [40, 64], "33": [22, 57, 72, 78, 87], "330": 78, "331": 78, "3339": 52, "33554196": 67, "3355419635772705": 67, "34": [56, 87], "3423167673900001": 15, "3444421505800004": 15, "347b": 69, "3491": 57, "35": [27, 34, 37, 64], "355": 64, "36": [56, 69, 72], "36220145743631": 56, "367941273442": [35, 36], "36905807298613247": [35, 36], "37": [32, 64, 78], "371169090270996": 67, "3732": 52, "3757": [38, 40], "3777589082278725": 56, "38": [64, 78], "3819": 84, "3839": 52, "3847": 57, "3854852615415981": 15, "39": [52, 56, 72], "396441015": 15, "3d": [17, 61, 84], "3e": 72, "3g": 64, "3pn": [8, 30, 52, 75, 78, 84, 102], "3rd": [17, 75], "3x3": 54, "3yr": 71, "4": [10, 12, 14, 17, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 56, 57, 64, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 87, 92, 94, 96, 97, 98, 100, 102], "40": [10, 15, 27, 28, 52, 65, 67, 72, 84, 87, 91, 94, 97, 102], "400": [15, 79], "4000": 55, "40000": [15, 28], "4003200": 28, "4008": 71, "401864755325733": [35, 36], "4072519540786743": 67, "40808407": [38, 40], "40909262775014904": 54, "4096": [10, 15, 21, 23, 28, 33, 37, 50, 51, 53, 64, 72, 78, 84, 87, 88, 94, 96, 97, 98, 99, 102], "40g": 96, "41": 72, "413": 96, "41557185": 67, "42": [32, 34, 38, 52, 63, 72], "420": 32, "42111800": 97, "42825": 40, "4297v2": 52, "43": [33, 37, 64, 72, 78], "430": 34, "431698299": [35, 36, 54], "43536359469": 15, "4357": 57, "4375183": 52, "4376": [35, 36], "43utc": 96, "44": 32, "4431083771985165": [35, 36], "4437": 52, "44615914": [38, 40], "4499": 52, "45": [27, 32, 37, 51, 87], "45utc": 96, "46": 15, "4617927074432373": 67, "47": 56, "47942554": 67, "4798221": [35, 36], "4799624": [35, 36], "48": [51, 92, 97], "480": 72, "4800021": [35, 36], "4801821": [35, 36], "48595679": 52, "4939": 57, "49594465315212": 56, "4999": 44, "4e": 35, "4f": 87, "4g": 96, "4khz_r1_strain": 37, "5": [8, 10, 12, 15, 17, 21, 23, 27, 28, 30, 32, 35, 36, 37, 38, 40, 45, 46, 52, 56, 57, 59, 61, 62, 64, 65, 67, 71, 72, 73, 74, 75, 76, 78, 79, 84, 87, 91, 92, 94, 97, 99, 102], "50": [10, 17, 30, 37, 40, 51, 56, 59, 64, 73, 74, 84, 87, 88, 96, 97], "500": [34, 37, 39, 57, 64, 78, 79, 84], "5000": [30, 31, 39, 40, 61, 75, 84], "50000": [17, 65, 84], "500000": 17, "5000000": 84, "500000000": 84, "503": 56, "50th": [31, 35, 36, 40, 73], "51": 56, "512": [12, 32, 60, 72, 94, 97], "52": 64, "52073522": 52, "524288": 94, "5264": 99, "53": 52, "53079879206": 15, "531953033719454": 56, "533": 96, "5334231350600002": 15, "5336v3": 52, "5477": 84, "5497787143782138": 15, "54987973": 52, "554": 52, "5573418078": 15, "56": 72, "57": 73, "5707963267948966": 56, "58": 72, "5830872929516078": 15, "58430937078": 15, "59": 72, "5913706849599998": 15, "5963790054099999": 15, "5970175301911231": [35, 36], "597755394865021": [35, 36], "5999": 44, "59999999999999998": 52, "5e": [52, 72], "5e3": 96, "5e9": 35, "5gpc": 96, "5pn": [8, 30, 52, 75, 78, 84, 97, 102], "6": [10, 12, 14, 17, 32, 33, 34, 37, 46, 48, 52, 56, 57, 64, 67, 69, 71, 72, 73, 75, 78, 79, 83, 84, 87, 88, 92, 93, 94, 96, 97], "60": [17, 25, 38, 40, 54, 56, 84, 91, 97, 99], "6000": [44, 61], "60000": 93, "6019821166992188": 67, "603": 99, "6042": 57, "604800": 28, "6150710582733154": 67, "61507106": 67, "62008869": 52, "6226733602199997": 15, "6340370178222656": 67, "6355068497000002": 15, "6382": 72, "64": [22, 28, 76, 78, 80, 94, 97, 98], "65": [57, 78, 87], "650": 94, "66": 71, "6610": 34, "6633165143": [35, 36], "67": [64, 87], "67488706": 67, "6748870611190796": 67, "6749": 84, "6801": 52, "69": [94, 102], "693924104": 36, "696": 56, "7": [10, 12, 15, 18, 35, 45, 46, 48, 52, 56, 65, 67, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 86, 87, 88, 94, 95, 96, 97], "70": [10, 75, 84, 92, 102], "70012743": 97, "703772": [35, 36], "7059873069668027": 15, "70997595": 52, "70hz": [84, 102], "7120943348136864": 15, "7173138856887817": 67, "71731389": 67, "718281828459045": 61, "72": 79, "7245316936": [35, 36], "7299645671": 15, "73": 57, "7349": 94, "7365189": [35, 36, 54], "74": [91, 97], "7497853": 36, "75": [32, 84], "75688773": 72, "76": [64, 78], "7615118398400004": 15, "7627046325699999": 15, "7629930799000002": 15, "77": 64, "781969": 36, "79": 97, "79156499342": 15, "796849": [35, 36], "8": [1, 12, 23, 27, 28, 30, 32, 33, 34, 37, 38, 40, 52, 56, 57, 59, 63, 64, 67, 69, 72, 73, 75, 76, 78, 79, 81, 84, 94, 96, 97, 98, 99, 100, 102], "80": [32, 56, 58, 63, 96], "8000": [15, 91], "81070543755": 15, "8107952638300001": 15, "815901601": 79, "815902001": 79, "8192": [21, 40], "82": 34, "83": 97, "8336880207061768": 67, "835397": 64, "837": 93, "848": 84, "85": [40, 72], "8505810499191284": 67, "85058105": 67, "86": [52, 72], "860166": [35, 36], "8628770664093453": 64, "86400": [28, 93, 97, 102], "87": [52, 69], "8757405131": 64, "8888": 18, "89": [91, 97], "8e": 72, "8th": 99, "9": [12, 14, 52, 61, 67, 71, 72, 79, 84, 87, 91, 97], "90": [15, 53, 79, 84, 97], "900000000": 84, "900000024": [84, 102], "900000033": [84, 102], "900002081": [84, 102], "900010000": 84, "902958103587057e": 74, "90885758394699": 56, "90th": [31, 35, 36, 40, 73], "91": 52, "9118498275199999": 15, "918": 34, "92": 64, "92401774": 52, "9278372067613837e": 73, "928": 73, "928800": 67, "93": 73, "930493015": 97, "937473702": 92, "9381": 72, "93tukey_fft_algorithm": 58, "94": [15, 78], "95": [10, 73, 84], "9534": 87, "961585543": [93, 94, 101, 102], "961585551": [101, 102], "961587599": 102, "961590836": 94, "961591486": 94, "961591534": 94, "961592867": 94, "961592884": 94, "961671943": [93, 102], "961671944": 101, "965": 84, "968556757": 94, "968995968": 60, "97": [10, 75, 84, 102], "970012743": 97, "970270743": 97, "971612833": 94, "971613852": 94, "971614817": 94, "971614881": 94, "97717521": 52, "978241": 96, "98": [52, 69, 79, 84], "983124": 95, "9861846887695471": 15, "989": 84, "9895": 10, "9899": [84, 92], "99": [10, 32, 78, 84, 96], "996": 56, "999": 52, "9999985694885254": 67, "99999857": 67, "999999523162842": 67, "99999999": 52, "9apn7x": 97, "9e": 35, "9e9": 96, "A": [1, 8, 9, 10, 13, 14, 15, 17, 22, 28, 29, 30, 34, 36, 41, 42, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102], "AT": 63, "And": [34, 56, 84], "As": [10, 22, 28, 30, 32, 41, 43, 46, 52, 55, 56, 57, 61, 62, 78, 79, 84, 90, 92, 95, 96, 99, 100, 101, 102], "At": [30, 75, 79, 97, 100], "Be": [11, 79, 84, 90, 97, 100], "But": [72, 76, 84], "By": [8, 15, 22, 30, 31, 36, 37, 38, 40, 43, 44, 52, 54, 56, 57, 60, 63, 64, 65, 67, 74, 76, 78, 79, 87, 88, 94, 95, 102], "For": [10, 15, 19, 22, 28, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 52, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102], "IF": [22, 93], "IN": [59, 93, 94, 102], "If": [1, 10, 11, 13, 19, 22, 23, 25, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "In": [10, 11, 17, 19, 22, 28, 30, 32, 34, 35, 36, 38, 40, 41, 42, 43, 44, 47, 48, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 84, 85, 88, 92, 93, 94, 95, 96, 97, 98, 100, 101], "It": [10, 18, 22, 28, 29, 30, 31, 32, 36, 37, 38, 40, 42, 43, 44, 52, 57, 58, 59, 61, 62, 63, 64, 65, 67, 72, 75, 76, 78, 79, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "Its": [24, 77, 84, 90, 97], "NO": 92, "NOT": [58, 79, 93, 94, 102], "No": [12, 15, 30, 52, 58, 59, 64, 71, 72, 75, 77, 78, 84, 87, 91, 94, 96, 97, 101, 102], "Not": [24, 30, 52, 61, 66, 67, 71, 84, 95], "OF": 92, "OR": [52, 72], "Of": [93, 94, 102], "On": [84, 91, 97], "One": [18, 30, 51, 60, 65, 67, 79, 84, 92, 97, 99], "Or": [20, 22, 36, 66, 76, 100], "Such": 92, "THE": [75, 93, 94, 102], "THERE": 92, "THESE": [93, 94, 102], "TO": [92, 96], "That": [10, 21, 41, 43, 65, 76, 79, 96, 97, 100], "The": [1, 8, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99], "Then": [28, 35, 45, 47, 52, 59, 61, 67, 72, 74, 79, 81, 84, 97], "There": [10, 14, 21, 28, 30, 39, 42, 44, 52, 57, 65, 66, 67, 79, 84, 88, 90, 91, 92, 97, 99, 100, 102], "These": [1, 11, 14, 15, 19, 21, 22, 24, 25, 28, 29, 30, 31, 32, 40, 41, 43, 46, 47, 52, 56, 58, 62, 64, 65, 66, 67, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "To": [10, 11, 13, 15, 18, 22, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 45, 47, 52, 56, 57, 59, 62, 64, 65, 67, 68, 73, 76, 78, 79, 81, 83, 84, 86, 88, 91, 92, 95, 96, 97, 99, 100], "Will": [52, 65, 73, 74, 75, 76, 78, 79, 84, 102], "With": [32, 42, 64, 67, 84, 92, 96, 102], "_": [34, 52, 58, 61, 63, 64, 73, 78], "_1": 52, "_2": 52, "__": [34, 64], "__call__": 56, "__data": 64, "__init__": [41, 43, 56, 75, 79, 84, 102], "__model": [34, 64], "__orig_endelementn": 67, "__orig_startcolumn": 67, "__orig_startstream": 67, "_analysis_seg": 64, "_analysis_tim": 97, "_basecorrel": 59, "_basefft": 58, "_baseifft": 58, "_basethresholdclust": 57, "_bound": 52, "_build": 45, "_c": 56, "_cdq": 56, "_chain": 65, "_delta_f": 22, "_delta_t": 22, "_download": 27, "_fieldarraywithdefault": 67, "_fval": 78, "_gh": 11, "_gwosc_4khz_r1": 37, "_h1": 28, "_hdfinjectionset": 66, "_htild": 78, "_i": 64, "_import_system_wisdom": 94, "_label": 61, "_loglikelihood": 64, "_loglr": 64, "_lognl": 64, "_losc_cln_4_v1": [38, 40], "_mean": 56, "_n": 64, "_noprior": 64, "_nowaveform_handl": 64, "_nowaveform_return": 64, "_outermost_": 67, "_output": [84, 97, 99], "_plot_movi": 44, "_plot_posterior": 44, "_psd": 36, "_psd_segment": 64, "_result": 86, "_tdi_v2": 36, "_time": 64, "_update_sampler_histori": 62, "_var": 56, "_virtualfield": 67, "a0": [49, 52, 64, 74], "a1": [15, 64, 71], "a2": 71, "a3": [49, 52, 71], "a_": [74, 78], "a__b__lognl": 64, "a__data": 34, "a_b__foo": 34, "a_i": 64, "a_psd": 36, "a_pu0": 74, "a_tdi_v2": 36, "a_tst0": 74, "aa8f50": 57, "ab": [23, 27, 57, 59, 64, 73, 76, 77, 78, 79], "ab1101": 72, "ab577e4e5dad14e46fce511cffdb04917836ba36": 92, "abbott": 84, "abbrevi": 15, "abil": [42, 45, 52, 58, 64, 67, 78, 79, 92, 93, 97], "abitrari": 56, "abl": [10, 28, 30, 41, 42, 43, 46, 51, 84, 86, 88, 90, 96, 99, 100], "about": [14, 15, 22, 30, 31, 36, 38, 40, 41, 52, 53, 55, 56, 59, 60, 62, 64, 67, 71, 72, 73, 75, 78, 79, 84, 85, 87, 88, 90, 94, 97, 99, 100, 101, 102], "abov": [10, 11, 18, 28, 30, 32, 34, 41, 43, 45, 47, 52, 55, 56, 57, 59, 61, 64, 66, 67, 72, 73, 75, 78, 79, 81, 83, 84, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 102], "abrupt": [75, 78], "abs_arg_max": [52, 76], "abs_arg_max_complex": [52, 76], "abs_max_loc": [52, 76], "absenc": 84, "absmax": 66, "absolut": [57, 74, 75, 76, 83, 97], "absspacedet": 55, "abstract": [19, 41, 43, 61, 62, 64, 65, 74, 78, 79, 84], "absvalu": 57, "abv": 15, "ac": 57, "acc": 65, "acc_noise_level": [35, 72], "acceler": [10, 45, 46, 64, 72, 94], "accept": [10, 30, 52, 55, 56, 61, 62, 65, 67, 75, 79, 84, 87, 96], "accept_ratio": 65, "acceptance_fract": 62, "acceptance_r": 79, "acceptance_ratio": 62, "access": [15, 16, 22, 24, 25, 28, 29, 30, 45, 51, 52, 57, 65, 67, 76, 78, 79, 85, 88, 90, 92, 94, 97, 100], "accessor": 65, "accid": [11, 67], "accommod": 43, "accomod": 92, "accompani": [19, 84], "accomplish": [30, 56, 64], "accord": [10, 21, 52, 57, 71, 76, 83, 93, 94, 100, 101, 102], "accordingli": [33, 62, 74, 90, 92], "account": [1, 10, 11, 15, 21, 30, 32, 40, 42, 45, 47, 55, 56, 57, 59, 71, 74, 75, 76, 84, 95, 96, 97, 98, 99], "accounting_group": [84, 95, 96, 97], "accounting_tag": 98, "accross": 78, "accumul": [32, 41, 58, 59, 96], "accur": [10, 15, 17, 38, 56, 59, 78, 84], "accuraci": [56, 59, 75], "acf": [43, 59, 62, 65], "acheiv": 92, "achi_list": 77, "achiev": [59, 67, 72], "achiv": 71, "acl": [30, 32, 43, 59, 61, 62, 65], "acl_from_raw_acl": [61, 65], "acomplish": 97, "acquir": [30, 32, 65, 96], "across": [17, 30, 32, 41, 43, 52, 56, 57, 62, 64, 84, 92], "act": [10, 30, 32, 52, 60, 61, 62, 64, 65, 79, 90, 91], "action": [58, 61, 62, 73, 76, 79, 92], "activ": [14, 45, 46, 47, 52, 57, 60, 67, 73, 75, 79, 84, 91, 92, 100, 102], "active_combin": 57, "actual": [10, 21, 34, 37, 52, 57, 58, 59, 65, 66, 67, 75, 76, 78, 79, 84, 90, 92, 94, 96, 97], "actuat": [30, 74], "ad": [1, 13, 30, 32, 33, 37, 41, 43, 46, 52, 56, 57, 60, 61, 62, 64, 66, 67, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 97, 99, 101, 102], "adap": 65, "adapt": [39, 52, 61, 63, 65, 67], "adaptation_decai": 63, "adaptation_dur": 63, "adaptation_lag": [61, 65], "adaptation_tim": [61, 65], "adaptive_angular": 63, "adaptive_angular_propos": 63, "adaptive_bounded_discret": 63, "adaptive_bounded_norm": 63, "adaptive_bounded_propos": 63, "adaptive_norm": 63, "adaptive_normal_discret": 63, "adaptive_propos": 63, "adaptiveangular": 63, "adaptiveangularpropos": 63, "adaptiveboundeddiscret": 63, "adaptiveboundednorm": 63, "adaptiveboundedpropos": 63, "adaptivenorm": 63, "adaptivenormaldiscret": 63, "adaptivepropos": 63, "adaptivesupport": 63, "add": [1, 11, 15, 18, 21, 24, 30, 32, 35, 42, 45, 47, 48, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "add_approximant_arg": [52, 78], "add_arg": [52, 79, 89], "add_argu": 61, "add_background": [52, 71], "add_bank": [52, 71], "add_common_pycbc_opt": [49, 52], "add_condorpool_copy_sit": [52, 79, 89], "add_condorpool_shared_sit": [52, 79, 89], "add_condorpool_symlink_sit": [52, 79, 89], "add_contain": [52, 79, 89], "add_custom_waveform": [52, 78, 87, 88], "add_density_option_group": [52, 61], "add_detector_on_earth": [15, 52, 55], "add_end_frequency_estim": [52, 78], "add_explicit_depend": [52, 79, 89], "add_field": [52, 67], "add_funct": [52, 67], "add_gate_option_group": [52, 74], "add_hard_count": [52, 74], "add_ini_profil": [52, 79, 89], "add_ini_site_profil": [52, 79, 89], "add_inject": [52, 71], "add_injsamples_map_opt": [52, 61, 62], "add_input": [52, 79, 89], "add_input_arg": [52, 79, 89], "add_input_list_opt": [52, 79, 89], "add_input_opt": [52, 79, 89], "add_into": [52, 76], "add_into_workflow": [52, 79, 89], "add_length_estim": [52, 78], "add_list_opt": [52, 79, 89], "add_live_significance_duration_bin_opt": [52, 68], "add_live_significance_trigger_pruning_opt": [52, 68], "add_live_trigger_selection_opt": [52, 67], "add_local_sit": [52, 79, 89], "add_metadata": [52, 79, 89], "add_method": [52, 67], "add_multiifo_input_list_opt": [52, 79, 89], "add_multiifo_output_list_opt": [52, 79, 89], "add_nod": [52, 79, 89], "add_opt": [52, 79, 89], "add_options_to_sect": [52, 76, 79, 89], "add_osg_sit": [52, 79, 89], "add_output": [52, 79, 89], "add_output_arg": [52, 79, 89], "add_output_list_opt": [52, 79, 89], "add_output_opt": [52, 79, 89], "add_pfn": [52, 79, 89], "add_planner_arg": [52, 79, 89], "add_plot_posterior_option_group": [52, 61], "add_point_by_chi_coord": [52, 75, 84], "add_point_by_mass": [52, 75, 84], "add_profil": [52, 79, 89], "add_properti": [52, 67], "add_raw_arg": [52, 79, 89], "add_results_option_group": [61, 62], "add_scatter_option_group": [52, 61], "add_singl": [52, 57], "add_sit": [52, 79, 89], "add_site_pegasus_profil": [52, 79, 89], "add_style_opt_to_pars": [52, 73], "add_subplot": [17, 52], "add_subworkflow_depend": [52, 79, 89], "add_template_ev": [52, 57], "add_template_events_to_network": [52, 57], "add_template_network_ev": [52, 57], "add_template_param": [52, 57], "add_tmpltbank_from_hdf_fil": [52, 75, 84], "add_tmpltbank_from_xml_t": [52, 75, 84], "add_to_workflow": 79, "add_transform": [52, 79, 89], "add_virtualfield": [52, 67], "add_workflow": [52, 79, 89], "add_workflow_command_line_group": [52, 76, 79, 89, 92], "add_workflow_settings_cli": [52, 79, 89], "add_zerolag": [52, 71], "addattr": [52, 67], "adddress": 18, "addiot": 64, "addit": [10, 13, 14, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 52, 56, 57, 59, 61, 64, 66, 67, 73, 74, 75, 76, 78, 79, 84, 85, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "addition": [13, 67, 78, 79, 84, 97], "additional_field": 67, "additional_opt": [52, 56], "address": [18, 58], "adequ": 96, "adjac": 72, "adjust": [32, 33, 37, 45, 71, 73, 74, 79, 96], "adjust_strain": [52, 74], "admin": [95, 96], "administr": [47, 48, 97], "admit": [32, 96], "adopt": [30, 52], "adsab": 69, "advanc": [13, 23, 32, 36, 52, 54, 57, 60, 61, 65, 74, 78, 84, 86, 99, 100], "advance_tim": [52, 57], "advantag": [45, 67, 84], "advbnsoptimizedsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advdesignsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advearlyhighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advearlylowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advers": 14, "advertis": 88, "advis": 84, "advlatehighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advlatelowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advmidhighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advmidlowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "advo3lowt1800545": [4, 30, 52, 72, 84, 94, 102], "advo4intermediatet1800545": [4, 30, 52, 72, 84, 94, 102], "advo4t1800545": [4, 30, 52, 72, 84, 94, 102], "advvirgo": [4, 30, 52, 72, 84, 94, 102], "aei": [95, 96, 97], "affect": [14, 15, 32, 33, 37, 58, 59, 67, 74, 78, 83, 97], "affin": 94, "aforement": 79, "after": [1, 22, 30, 31, 32, 33, 35, 36, 37, 38, 40, 47, 52, 56, 59, 60, 64, 65, 66, 67, 71, 73, 75, 78, 79, 84, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "afterward": [32, 79], "ag": 52, "again": [44, 48, 58, 64, 74, 79, 95, 97, 98, 99], "against": [52, 57, 58, 59, 77, 79, 84, 90, 94, 102], "agre": 76, "ahnitz": [10, 21, 97], "ahop": [79, 89, 90, 92, 93, 97, 100, 101, 102], "ahopefil": 79, "aid": [24, 27, 56, 64, 87], "aim": [17, 57, 75, 79, 94, 101], "ajith": 84, "al": [52, 56, 57, 59, 84], "alarm": [57, 71], "albert": 97, "alex": [10, 21, 58, 66, 88, 91], "algorithm": [23, 29, 30, 57, 59, 61, 65, 67, 84], "alia": [52, 62, 65, 67, 79], "alias": [52, 67], "align": [10, 13, 21, 49, 52, 58, 59, 68, 71, 75, 78], "align_total_spin": [7, 30, 52, 99], "aligned_mass_spin_to_cartesian_spin": [7, 30, 52], "aligned_spin": 10, "alignedmassspintocartesianspin": [7, 30, 49, 52], "alignment_interv": 67, "alignment_threshold": 67, "aligntotalspin": [7, 30, 49, 52], "aligo": [34, 84, 87, 97], "aligo140mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligo175mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligoadvo3lowt1800545": [4, 30, 52, 72, 84, 94, 102], "aligoadvo4intermediatet1800545": [4, 30, 52, 72, 84, 94, 102], "aligoadvo4t1800545": [4, 30, 52, 72, 80, 84, 94, 102], "aligoaligo140mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligoaligo175mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligoaligodesignsensitivityt1800044": [4, 30, 32, 34, 52, 72, 84, 94, 102], "aligoaligoo3lowt1800545": [4, 30, 52, 72, 84, 94, 102], "aligoaplusdesignsensitivityt1800042": [4, 30, 52, 72, 84, 94, 102], "aligobhbh20deg": [4, 30, 52, 72, 84, 94, 102], "aligobhbh20deggwinc": [4, 30, 52, 72, 84, 94, 102], "aligobnsoptimizedsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligodesignsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligodesignsensitivityt1800044": [4, 30, 52, 72, 84, 94, 102], "aligoearlyhighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligoearlylowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligohighfrequ": [4, 30, 52, 72, 84, 94, 102], "aligohighfrequencygwinc": [4, 30, 52, 72, 84, 94, 102], "aligokagra128mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligokagra25mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligokagra80mpct1800545": [4, 30, 52, 72, 84, 94, 102], "aligolatehighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligolatelowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligomidhighsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligomidlowsensitivityp1200087": [4, 30, 52, 72, 84, 94, 102], "aligonosrmhighpow": [4, 30, 52, 72, 84, 94, 102], "aligonosrmlowpow": [4, 30, 52, 72, 84, 94, 102], "aligonosrmlowpowergwinc": [4, 30, 52, 72, 84, 94, 102], "aligonsnsopt": [4, 30, 52, 72, 84, 94, 102], "aligonsnsoptgwinc": [4, 30, 52, 72, 84, 94, 102], "aligoo3lowt1800545": [4, 30, 52, 72, 84, 94, 102], "aligoquantumbhbh20deg": [4, 30, 52, 72, 84, 94, 102], "aligoquantumhighfrequ": [4, 30, 52, 72, 84, 94, 102], "aligoquantumnosrmhighpow": [4, 30, 52, 72, 84, 94, 102], "aligoquantumnosrmlowpow": [4, 30, 52, 72, 84, 94, 102], "aligoquantumnsnsopt": [4, 30, 52, 72, 84, 94, 102], "aligoquantumzerodethighpow": [4, 30, 52, 72, 84, 94, 102], "aligoquantumzerodetlowpow": [4, 30, 52, 72, 84, 94, 102], "aligotherm": [4, 30, 52, 72, 84, 94, 102], "aligozerodethighpow": [4, 21, 23, 30, 50, 51, 52, 64, 72, 84, 87, 94, 98, 102], "aligozerodethighpowergwinc": [4, 30, 52, 72, 84, 94, 102], "aligozerodetlowpow": [4, 30, 51, 52, 72, 84, 94, 102], "aligozerodetlowpowergwinc": [4, 30, 52, 72, 84, 94, 102], "all": [8, 10, 11, 13, 15, 17, 18, 19, 21, 24, 25, 28, 30, 32, 34, 35, 36, 41, 42, 43, 44, 47, 48, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "all_c": 52, "all_fil": [84, 92, 97, 99], "all_o1_c02_estim": 84, "all_output_fil": 79, "all_single_ifo_tim": 98, "all_tim": 79, "all_trigg": [52, 79, 84, 89, 92, 96, 97], "allen": [23, 57, 77, 97], "allmap": [49, 52], "alloc": [59, 78, 97], "allow": [1, 8, 10, 15, 18, 22, 24, 28, 30, 34, 42, 44, 52, 56, 57, 60, 63, 64, 65, 67, 69, 72, 74, 75, 76, 78, 79, 84, 89, 90, 92, 94, 97, 102], "allow_no_valu": 76, "allow_overlap": 79, "allow_zero_pad": 74, "allowed_area": 57, "allski": 67, "alltim": [52, 71], "almost": [71, 76, 97], "almost_equal_elem": [52, 76], "almost_equal_norm": [52, 76], "alog": 73, "alon": [65, 91, 92], "along": [10, 15, 21, 25, 30, 32, 44, 52, 59, 61, 62, 64, 65, 67, 76, 78, 79, 95, 96], "alpha": [44, 52, 54, 56, 57, 61, 64, 71, 83], "alpha_below_thresh": [83, 97], "alpha_i": 64, "alphabet": 55, "alphai": 57, "alphamax": 57, "alreadi": [11, 22, 29, 47, 48, 52, 57, 59, 61, 62, 64, 66, 67, 72, 75, 76, 78, 79, 84, 88, 92, 93, 102], "also": [10, 12, 15, 17, 18, 21, 22, 23, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 102], "alter": [83, 84], "altern": [25, 28, 30, 47, 64, 67, 78, 84, 92], "although": [10, 32, 64, 84, 96, 97, 100], "altitud": 55, "altogeth": 100, "alwai": [24, 52, 57, 59, 60, 62, 63, 67, 75, 78, 81, 84, 87, 90, 97, 100, 102], "am": 61, "among": [8, 30, 42, 78, 79], "amount": [30, 32, 57, 59, 60, 62, 66, 74, 76, 79, 84, 94, 97, 102], "amp": [74, 78, 87], "amp210": 78, "amp220": 78, "amp330": 78, "amp_factor": 78, "ampc": 78, "amplitud": [8, 10, 28, 30, 32, 33, 37, 52, 54, 55, 57, 59, 66, 72, 74, 75, 78, 83, 85], "amplitude_from_frequencyseri": [52, 78], "amplitude_from_polar": [52, 78, 87], "amplitude_median_nod": 74, "amplitude_ord": [8, 30, 78], "amplitude_sigma_nod": 74, "amplmn": 78, "an": [1, 10, 13, 15, 17, 19, 21, 22, 24, 25, 27, 28, 30, 32, 35, 39, 41, 42, 43, 44, 45, 47, 48, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "anali": 96, "analog": [28, 67], "analys": [22, 30, 72, 77, 79, 83, 84, 89, 90, 92, 94, 99, 100, 101, 102], "analyse_slic": 59, "analysi": [1, 9, 13, 16, 22, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 45, 52, 59, 64, 65, 71, 72, 73, 74, 77, 79, 84, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "analysis_block": 57, "analysis_chunk": 57, "analysis_er8": 99, "analysis_readi": [28, 97, 98, 99, 100], "analysis_seg": 79, "analysis_segment_fil": 79, "analysis_segment_nam": 79, "analysis_tim": 79, "analyt": [1, 3, 4, 17, 30, 32, 39, 40, 49, 52, 56, 61, 69, 70, 77, 84, 85, 94, 102], "analytical_csd_lisa_tdi_xi": [52, 72, 84], "analytical_psd_lisa_tdi_a": [4, 30, 35, 52, 72, 84, 94, 102], "analytical_psd_lisa_tdi_ae_confus": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_lisa_tdi_t": [4, 30, 35, 52, 72, 84, 94, 102], "analytical_psd_lisa_tdi_xyz": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_taiji_confusion_nois": [52, 72, 84], "analytical_psd_taiji_tdi_a": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_taiji_tdi_ae_confus": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_taiji_tdi_t": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_taiji_tdi_xyz": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_tianqin_confusion_nois": [52, 72, 84], "analytical_psd_tianqin_tdi_a": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_tianqin_tdi_ae_confus": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_tianqin_tdi_t": [4, 30, 52, 72, 84, 94, 102], "analytical_psd_tianqin_tdi_xyz": [4, 30, 52, 72, 84, 94, 102], "analytical_spac": [4, 30, 49, 52, 84], "analyz": [1, 30, 32, 34, 39, 41, 57, 64, 67, 73, 74, 77, 79, 94, 95, 96, 98, 99], "analyzable_nam": 79, "analyzable_seg_fil": 79, "analyze_flag": 74, "analyzed_detector": [64, 96], "analyzed_nam": 79, "and_mask": [52, 67], "angl": [8, 17, 30, 32, 34, 40, 42, 52, 54, 55, 56, 57, 64, 67, 69, 72, 74, 76, 78, 96], "angle_as_radian": [52, 76], "angluar": 56, "angular": [0, 8, 30, 49, 52, 54, 59, 61, 69, 78, 79], "ani": [1, 10, 11, 12, 13, 17, 19, 24, 29, 30, 34, 36, 37, 40, 41, 42, 43, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101], "anitz": 57, "anlaysi": [1, 30], "anlysi": 91, "annot": 67, "announc": 53, "anomali": [8, 30, 78], "anoth": [10, 11, 17, 28, 41, 52, 62, 64, 66, 67, 76, 79, 92, 97], "answer": 67, "ant": 15, "antenna": [55, 57, 64, 72, 73, 75, 78, 85], "antenna_pattern": [15, 52, 55], "anti": 10, "anyon": [77, 84], "anyth": [57, 58, 66, 73, 84, 95, 96, 97], "anytim": 28, "anywai": [59, 99], "ap": 52, "apart": [17, 34, 39], "api": [30, 41, 58, 59, 64, 67, 79, 85], "apj": 56, "apjl": 84, "appar": 34, "apparoxim": 64, "appear": [45, 52, 56, 57, 79, 81, 84, 90, 92, 97, 100], "append": [52, 62, 64, 65, 67, 76, 79, 84, 97, 99, 100], "append_zero": [52, 76], "appendix": [52, 57, 71, 72], "appli": [1, 10, 15, 21, 30, 32, 33, 37, 41, 43, 52, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 90, 92, 94, 95, 96, 97, 100, 102], "applic": [22, 29, 35, 67, 76, 84, 90, 102], "apply_boundary_condit": [52, 56], "apply_calibr": [52, 74], "apply_condit": [49, 52, 56], "apply_cut": 57, "apply_cycl": [49, 52], "apply_far_limit": [52, 57], "apply_fd_time_shift": [52, 78], "apply_fseries_time_shift": [52, 78], "apply_gates_to_fd": [52, 74], "apply_gates_to_td": [52, 74], "apply_mask": [52, 67], "apply_significance_limit": [52, 71], "apply_template_cut": [52, 57], "apply_template_fit_cut": [52, 57], "apply_transform": [49, 52], "apply_trigger_cut": [52, 57], "apply_vetoes_to_found_inj": [52, 73], "appopri": 64, "appreci": 95, "approach": [52, 83, 90], "appropri": [13, 19, 33, 36, 45, 46, 47, 52, 57, 58, 62, 64, 69, 72, 73, 75, 78, 79, 80, 81, 84, 90, 95, 96, 97, 100, 101], "approv": 88, "approx": [52, 72, 77, 102], "approxim": [8, 10, 12, 15, 20, 21, 23, 24, 27, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 52, 55, 56, 57, 64, 66, 67, 68, 71, 75, 76, 77, 78, 79, 83, 84, 87, 94, 96, 97, 98, 99, 102], "approximant_arg": 78, "approximant_nam": 88, "approximant_str": 78, "apprx": [78, 94], "apprxstr": 78, "apx": [66, 87], "ar": [1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "arang": [15, 67, 87, 88], "arbitrari": [0, 15, 30, 40, 49, 52, 57, 64, 66, 67, 75, 78, 79, 88], "arbitrarili": [34, 57], "arcca": 99, "arcco": 10, "arch": 79, "archictectur": 20, "architectur": [52, 55], "archiv": [29, 52], "area": [52, 57], "aren": [96, 97], "arg": [1, 30, 31, 35, 36, 37, 38, 40, 44, 52, 55, 56, 57, 58, 61, 62, 64, 65, 67, 68, 71, 73, 74, 77, 78, 79, 84, 87, 88, 94, 96, 102], "arg_tupl": 77, "argmax": [28, 49, 52, 57, 64], "argmin": [49, 52], "argpars": [52, 57, 61, 62, 64, 71, 73, 75, 76, 79, 92], "argument": [1, 10, 15, 18, 21, 25, 30, 31, 32, 33, 37, 38, 39, 40, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 102], "argument_group": 57, "argumentdefaultshelpformatt": 75, "argumentpars": [52, 57, 61, 62, 64, 71, 73, 74, 75, 76, 78, 79, 92], "argur": 96, "argv": 68, "aris": [64, 74, 80], "arithmet": 61, "arithmetic_mean_estim": [52, 61], "arm": [15, 55, 72], "arm_length": [55, 72], "around": [1, 27, 30, 32, 40, 52, 53, 54, 56, 57, 59, 60, 64, 66, 67, 68, 74, 75, 76, 78, 79, 84, 85, 90, 96, 97], "arr": [57, 67, 73], "arrai": [22, 23, 37, 41, 49, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "arrang": 41, "array_class": 62, "array_cpu": [49, 52], "array_cupi": [49, 52], "array_lik": 71, "array_mins": 57, "arriv": [34, 52, 54, 55], "arrival_tim": [52, 55], "arrlen": 59, "arrrai": 65, "artefact": 72, "articl": 69, "arxiv": [23, 52, 57, 59, 64, 71, 72, 77, 78, 79], "ascend": [8, 30, 52, 75, 78], "ascens": [8, 30, 52, 55, 56, 75, 78, 87], "ascii": [1, 10, 21, 30, 52, 62, 65, 72, 76, 84, 94, 97, 102], "asctim": 52, "asd": [1, 10, 30, 72, 73, 79, 84, 94, 96, 102], "asd_fil": [72, 84, 94, 102], "asdict": [52, 78], "asid": 58, "ask": [13, 52, 84, 93, 94, 99, 101, 102], "aslist": [52, 78], "assembl": 42, "assertionerror": [64, 79], "assess": [75, 79, 93, 94], "assign": [57, 61, 64, 67, 75, 78, 84, 96, 102], "assign_dq_r": [52, 57], "assign_fit": [52, 57], "assign_kd": [52, 57], "assign_template_bin": [52, 57], "associ": [29, 52, 56, 57, 59, 61, 62, 64, 67, 72, 76, 79, 84, 88, 90, 91, 94, 96, 97, 100, 102], "associate_psds_to_multi_ifo_seg": [52, 72, 84], "associate_psds_to_seg": [52, 72, 84], "associate_psds_to_single_ifo_seg": [52, 72, 84], "assubarrai": 67, "assum": [11, 15, 28, 32, 33, 34, 35, 37, 42, 46, 47, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 84, 91, 92, 95, 96, 97, 102], "assumpt": [34, 55, 59, 60, 84], "astro": 71, "astro_redshift": [52, 71], "astronomi": 88, "astrophys": [29, 71], "astropi": [15, 52, 54, 67, 76], "astyp": [52, 76], "at_frequ": [52, 76], "at_runtim": [90, 92, 93, 97, 99], "at_runtime_multiple_cach": 90, "at_runtime_multiple_fram": 90, "at_runtime_single_cach": [90, 99], "at_runtime_single_fram": [90, 92, 97, 98], "at_tim": [52, 76], "atadaptiveangular": 63, "atadaptiveboundednorm": 63, "atadaptivenorm": 63, "atadaptivepropos": 63, "atla": [10, 33, 95, 96, 97], "atm": 52, "atom": 62, "atrribut": 92, "attach": [73, 78, 97], "attemp": 62, "attempt": [30, 34, 52, 57, 58, 60, 62, 64, 73, 74, 79, 90, 92, 94, 97, 102], "attempt_adv": [52, 60], "atten": [94, 102], "attenu": [59, 76, 94, 102], "attr": [30, 62, 64, 65, 66, 67, 73, 78, 79, 96], "attrbut": 62, "attribut": [30, 41, 43, 52, 56, 57, 58, 61, 62, 64, 65, 66, 67, 72, 74, 76, 78, 79, 83, 92, 94, 97], "attributeerror": [52, 64, 67], "attrnam": 67, "atwhich": 94, "au": 55, "audienc": 88, "audio": [27, 76], "augmented_rv_continu": [52, 71], "authent": 97, "author": [81, 86, 88], "author_email": 88, "auto": [24, 61, 77, 94], "auto_burn_in": 61, "auto_download": 15, "autochi": 94, "autochi_number_point": 94, "autochi_strid": 94, "autochisq": [24, 49, 52, 94], "autochisq_from_precomput": [52, 77], "autochisquar": 77, "autocorrel": [30, 32, 43, 44, 49, 52, 62, 65, 77], "autocorrl": 65, "autocovari": 59, "autog": [1, 30, 79, 84, 94, 102], "autogating_clust": 74, "autogating_dur": 74, "autogating_pad": 74, "autogating_psd_segment_length": 74, "autogating_psd_strid": 74, "autogating_tap": 74, "autogating_threshold": 74, "autogating_width": 74, "automat": [10, 19, 21, 42, 64, 74, 76, 79, 80, 84, 88, 92, 93, 94, 95, 96, 100, 102], "autoparamlabel": 62, "autorcorrel": 65, "avail": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 28, 29, 30, 31, 41, 43, 45, 46, 47, 48, 51, 52, 53, 55, 57, 58, 60, 61, 64, 66, 67, 72, 73, 78, 79, 80, 84, 87, 90, 92, 94, 97, 98, 99, 101, 102], "available_model": [61, 64], "available_test": [52, 61], "avali": 13, "averag": [1, 30, 32, 52, 55, 57, 62, 65, 71, 72, 74, 84, 94, 98, 99, 102], "average_psd": [84, 98], "average_tim": 71, "average_time_between_sign": [52, 71], "averaged_fplus_sq_approxim": [52, 72, 84], "averaged_lisa_fplus_sq_numer": [52, 72, 84], "averaged_response_lisa_tdi": [52, 72, 84], "averaged_response_taiji_tdi": [52, 72, 84], "averaged_response_tianqin_tdi": [52, 72, 84], "averaged_tianqin_fplus_sq_numer": [52, 72, 84], "avg_bin": 74, "avg_inner_product": [52, 74], "avg_method": 72, "avhe2010": 97, "avoid": [1, 28, 30, 41, 42, 43, 67, 74, 75, 78, 79, 83, 84, 92, 94, 96, 102], "awai": [75, 84, 96], "await": 76, "awar": [41, 43, 84, 97], "awgstream": 28, "awk": 97, "ax": [12, 17, 52, 73, 75], "ax0": 17, "ax1": 17, "ax2": 17, "ax3": 17, "ax4": 17, "ax5": 17, "ax6": 17, "axi": [8, 17, 30, 44, 52, 59, 67, 73, 78, 97], "axial": 54, "axis_dict": 73, "axis_max_valu": [52, 73], "axis_min_valu": [52, 73], "axvspan": 14, "azimuth": [17, 32, 34, 52, 54, 55, 56, 67, 78, 96], "azimuthal_": 17, "azimuthal_angl": [52, 56], "azimuthal_bound": [17, 56], "azimuthal_cyclic_domain": 56, "b": [34, 52, 56, 59, 64, 67, 71, 72, 74, 76, 81, 84], "b0": 64, "b1": [15, 64, 81], "b__data": 34, "b_i": 64, "babak": 84, "back": [11, 15, 52, 56, 58, 62, 65, 74, 80, 81, 84, 92, 94, 97, 102], "back_stat": 57, "backend": [35, 55, 58, 76, 85, 94], "backend_cpu": [49, 52], "backend_cupi": [49, 52], "backend_list": 58, "backend_mkl": [49, 52], "backend_support": [22, 49, 52], "background": [57, 71, 79, 89, 97, 100], "background_bin": [57, 79], "background_bin_from_str": [52, 57], "background_fil": 79, "background_statist": 57, "background_tim": [52, 57], "backgroundeventr": [52, 71], "backout_last": [52, 57], "backport": 92, "backslash": 76, "backup": [30, 62, 65, 79, 90], "backup_fil": 62, "backup_out": [79, 90], "backward": 58, "bad": [59, 64, 86, 100], "balanc": [22, 84], "balasubramanian": 84, "ball": 65, "band": [28, 59, 76, 78], "bandlimited_interpol": [52, 72, 84], "bandpass": [1, 30, 72, 84, 94, 102], "bandwidth": [56, 59, 76], "bank": [9, 24, 28, 29, 47, 49, 52, 57, 59, 66, 67, 71, 73, 75, 77, 79, 91, 92, 94, 97, 98, 99, 101], "bank2hdf": [67, 91, 97], "bank_bins_from_cli": [52, 57], "bank_chisq": [24, 49, 52], "bank_chisq_dof": [24, 77], "bank_chisq_dof_templ": 24, "bank_chisq_from_filt": [52, 77], "bank_chisq_templ": 24, "bank_convers": [49, 52, 84], "bank_data": [71, 79], "bank_fil": [67, 71, 73, 77, 79, 94, 99, 102], "bank_filt": 77, "bank_fupper_step": 84, "bank_id": 79, "bank_norm": 77, "bank_output_util": [49, 52, 84], "bank_path": 73, "bank_snr": 77, "bank_structur": 84, "bank_veto_bank_fil": 94, "bankf": 71, "bankfil": 57, "bankhdf": 67, "banksim": [10, 21, 84], "bankvetobank": 79, "bar": [34, 43, 52, 56, 61, 67, 73, 79, 92, 97], "barak": 64, "bardeen": 69, "barycent": 54, "baryon": [52, 69], "base": [5, 8, 13, 23, 25, 30, 41, 43, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 88, 89, 92, 93, 97, 99], "base_cub": [52, 61], "base_data": [52, 61], "base_hdf": [2, 41, 52, 61], "base_mcmc": [2, 5, 41, 43, 52, 61], "base_model": [64, 72], "base_multitemp": [2, 5, 41, 43, 52, 61], "base_nest_fil": 62, "base_nested_sampl": [2, 41, 52, 61], "base_sampl": [2, 41, 52, 61], "base_shap": [61, 65], "baseburnintest": [52, 61], "basecbcgener": [52, 78], "basedatamodel": [61, 64], "basedir": 92, "basefdomaindetframegener": [52, 78], "basegatedgaussian": [61, 64], "basegaussiannois": [61, 64], "basegener": [52, 78], "baseinfer": 62, "baseinferencefil": [2, 41, 61, 62, 64, 65], "basemcmc": [5, 43, 61, 65], "basemodel": [34, 61, 64, 65], "basenestedsamplerfil": [2, 41, 61, 62], "basepropos": 63, "basesampl": [5, 43, 61, 65], "basesamplerfil": [2, 41, 61, 62], "basetransform": [49, 52], "bash": [18, 35], "bash_profil": 48, "basi": [42, 52, 54, 56, 78], "basic": [10, 21, 28, 30, 32, 39, 52, 61, 67, 73, 75, 76, 78, 79, 80, 84, 91, 96, 98], "basic_pegasu": 90, "batch": 59, "batch_correlate_execut": [52, 59], "batshit": 84, "bay": 64, "bayesian": [30, 34, 64, 65], "bayestar": [59, 79], "bbh": [10, 30, 33, 37, 71, 84, 96], "bbh_inject": 95, "bbh_template_bank": 84, "bbhx": 36, "bbhx_phenomd": [35, 36], "bchisq": [57, 77], "bchisq_dof": 77, "beacus": 97, "becaus": [10, 32, 35, 42, 43, 56, 59, 61, 63, 64, 65, 66, 84, 95, 96, 97, 100], "becom": [22, 78, 79, 84, 92, 100, 101], "been": [10, 21, 33, 37, 43, 45, 48, 56, 57, 59, 61, 62, 64, 65, 66, 67, 72, 75, 76, 78, 79, 84, 86, 88, 90, 92, 93, 94, 96, 97, 100, 102], "befor": [1, 22, 30, 32, 33, 36, 37, 40, 46, 47, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 72, 74, 75, 76, 78, 79, 80, 84, 86, 92, 94, 95, 96, 97, 99, 101, 102], "beforecalcul": 94, "began": 62, "begin": [10, 28, 32, 33, 37, 44, 52, 56, 59, 60, 61, 62, 64, 65, 73, 74, 76, 78, 84, 94, 97], "behavior": [30, 52, 58, 78, 83, 97], "behaviour": [8, 30, 52, 76, 78, 79, 90], "behind": [35, 36, 54], "behvior": 62, "being": [10, 30, 52, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 76, 77, 78, 79, 84, 88, 90, 92, 93, 94, 97, 98, 100, 101, 102], "believ": 10, "belong": [34, 52, 57, 64, 71, 79, 100], "below": [10, 13, 14, 16, 17, 21, 23, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 56, 57, 59, 60, 65, 67, 72, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "benchmark": [57, 83], "benchmark_logr": 83, "benefit": 84, "benjamin": 84, "berger": [52, 69], "berti": 52, "bessel": 64, "best": [10, 41, 57, 96, 97], "bestmass": 75, "bestnr": 73, "bestxi": 75, "beta": [52, 55, 59, 61, 62, 65, 76, 78], "beta_": 78, "betas_from_config": [61, 65], "betewen": 52, "better": [10, 52, 55, 65, 71, 78, 84, 96, 101], "better_pol": [35, 36], "between": [1, 8, 10, 17, 18, 28, 30, 34, 42, 43, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102], "betwen": 52, "beus": 94, "bewar": 76, "beyond": [60, 64, 78], "bfbmtughw8i": 75, "bg": 71, "bg_file": 79, "bg_file_list": 79, "bg_n_louder": 57, "bg_rate": 71, "bh": [10, 52, 67, 69, 75, 84, 92, 102], "bh_spin_mag": 69, "bh_spin_pol": 69, "bia": 72, "bibtex": 13, "big": 97, "bilbi": 65, "bilinearli": 59, "billion": 61, "bin": [10, 17, 18, 19, 21, 24, 28, 31, 32, 33, 35, 36, 45, 46, 47, 48, 49, 52, 57, 61, 64, 65, 68, 71, 73, 74, 75, 77, 78, 79, 84, 91, 92, 94, 97, 101], "bin_dict": 57, "bin_hi": 71, "bin_lo": 71, "bin_num": 52, "bin_num2": 52, "bin_param": 71, "bin_range_check": 75, "bin_siz": 74, "bin_spac": 75, "bin_typ": 52, "bin_util": 49, "bin_weight": 65, "binari": [8, 17, 28, 29, 30, 32, 34, 35, 36, 52, 53, 55, 57, 67, 71, 78, 84, 86, 89, 96, 97, 99, 102], "bind": 73, "binind": 57, "binless": 91, "binnedarrai": [49, 52], "binnedratio": [49, 52], "bins_idx": 57, "bit": [25, 60, 61, 65, 79, 100], "bkg": 97, "bklisco": [84, 102], "bkup": 30, "black": [13, 32, 34, 35, 36, 52, 73, 78, 84, 96], "blank": [84, 97, 99], "blen": 77, "blob": [52, 56, 65, 71], "blob_data_to_dict": [61, 65], "block": [19, 43, 52, 61, 64, 70, 74, 84, 100], "blocksiz": [60, 74], "blog": 97, "blue": [14, 17, 96], "blur": [1, 30], "bn": [10, 12, 71, 84, 96], "bns_nonspin_30hz_earlyaligo": 97, "bns_spin": 97, "bnsinject": [79, 94], "bnslininj": 97, "bodi": [52, 75, 84], "boiler": 79, "bond": 65, "bookkeep": 64, "bool": [52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 76, 78, 79], "boolarg": 78, "boolargs_from_apprxstr": [52, 78], "boolean": [52, 56, 57, 58, 59, 60, 61, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 94, 102], "boolen": 67, "boost": 83, "bootstrap": [39, 65], "born": [54, 72], "both": [28, 30, 32, 34, 42, 43, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 67, 73, 75, 76, 77, 78, 79, 90, 92, 94, 96, 97, 99, 100, 102], "bother": 64, "bottom": [92, 97], "bounc": 78, "bound": [17, 32, 34, 39, 40, 49, 52, 59, 61, 63, 64, 65, 68, 69, 72, 73, 84, 96, 102], "boundari": [17, 40, 49, 56, 59, 63, 71, 78, 79, 84, 91], "boundary_arg_nam": 63, "bounded_discret": 63, "bounded_from_config": [52, 56], "bounded_norm": [52, 61], "boundeddiscret": 63, "boundeddist": [52, 56], "boundednorm": 63, "bounds_requir": 56, "box": [34, 81, 86, 97], "branch": [11, 18, 45, 47, 81, 97], "branson": 86, "brchisq": 57, "brchisq_threshold": 57, "break": [43, 75, 76, 79, 99], "breakdown": [84, 99], "breaker": 57, "breath": 55, "bri": 89, "brigg": 56, "broad": 37, "broadcast": [49, 52], "broadcastpool": [49, 52], "broken": [71, 94, 97, 98, 101], "brown": [59, 73, 84], "browser": [18, 29, 97], "bruce": [24, 77, 97], "brute": [42, 64], "brute_force_method": [49, 52, 84], "brute_lisa_sky_modes_margin": [3, 30, 42, 64], "brute_marg": [3, 30, 52, 61], "brute_parallel_gaussian_margin": [3, 30, 64], "brutelisaskymodesmargin": [3, 30, 61, 64], "bruteparallelgaussianmargin": [3, 30, 61, 64], "bstat": 57, "btype": 56, "btype_": 52, "btype_max": 52, "btype_min": 52, "buffer": [10, 57, 59, 60, 62, 66, 74, 78, 79, 94, 99], "buffer_incr": 57, "buffer_index": 57, "buffer_length": 78, "buffer_seg": 79, "bug": [45, 76, 97], "build": [16, 19, 29, 60, 64, 67, 81, 84, 92, 97, 98], "build_doc": 45, "build_gh_pag": 11, "build_segment_filelist": [52, 79, 89], "built": [11, 15, 19, 42, 51, 56, 72, 78, 79], "builtin": 52, "bulk": 84, "bunch": [57, 84], "bundl": 25, "buonanno": 52, "burn": [10, 30, 32, 38, 39, 44, 61, 62, 65, 96], "burn_in": [30, 32, 38, 39, 49, 52, 65, 96], "burn_in_class": [61, 65], "burn_in_idx": 61, "burn_in_index": [52, 61, 62], "burn_in_iter": [30, 61, 62], "burn_in_test": 61, "burst": [1, 29, 30, 66, 78, 84, 94, 99, 102], "bursti": 78, "buscicchio": 52, "butterworth": 59, "button": [73, 99], "buttonfactori": 73, "buttonid": 73, "bwtween": 52, "bypass": 97, "bypass_stag": 79, "byte": [30, 62, 67, 76, 79], "bytes_": 62, "c": [12, 15, 18, 28, 30, 34, 48, 52, 56, 67, 74, 75, 77, 79, 92, 93, 94, 102], "c0": [67, 74], "c0_size": 57, "c1": 15, "c1_size": 57, "c2": 15, "c2_size": 57, "c2c_correlate_ifft": [52, 58], "c2c_half_correlate_ifft": [52, 58], "c2r": 74, "c4": 15, "c__data": 34, "c__foo": 34, "cach": [1, 28, 30, 52, 57, 60, 64, 74, 78, 79, 84, 90, 94, 97, 99, 102], "cache_entri": [52, 79, 89], "cache_fil": [79, 84, 97, 99], "cache_overlap": [52, 77], "cache_segment_snr": [52, 77], "cached_arang": [52, 78], "cached_chisq_bin": [52, 77], "cached_mem": 78, "cacheentri": 79, "cachefil": [79, 90], "cal_err": 73, "calc": 71, "calc_area": [49, 52], "calc_filt_psd_vari": [52, 72, 84], "calc_moment": [49, 52, 84], "calc_point_dist": [52, 75, 84], "calc_point_dist_vari": [52, 75, 84], "calc_point_distance_vari": [52, 75, 84], "calc_prob": [49, 52], "calcual": 15, "calcul": [1, 9, 21, 23, 28, 29, 30, 32, 36, 38, 40, 42, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 97, 100, 102], "calculate_acf": [52, 59], "calculate_acl": [52, 59], "calculate_antenna_pattern": [52, 75, 84], "calculate_chisq_bin": [52, 77], "calculate_ethinca_metric_comp": [52, 75, 84], "calculate_hihj": [61, 64], "calculate_ifar": [52, 57], "calculate_logevid": [61, 65], "calculate_metr": [52, 75, 84], "calculate_metric_comp": [52, 75, 84], "calculate_mo": [52, 75, 84], "calculate_psd": 98, "calculate_time_delai": [52, 75, 84], "calib_": 30, "calib_strain": [28, 97, 98, 99, 100], "calibr": [49, 52, 64, 71, 73, 94, 99, 102], "calibration_fil": 74, "calibration_file_path": 74, "calibration_lin": [52, 74], "call": [10, 11, 15, 22, 28, 30, 31, 34, 36, 37, 38, 40, 43, 44, 47, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 84, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102], "call_global_loglikelihood": [61, 65], "call_global_logprior": [61, 65], "call_likelihood": [61, 65], "call_model": [61, 64, 65], "call_reconstruct": [61, 65], "callabl": [56, 64, 71], "callback": [58, 65, 94], "callback_func": [52, 68], "calledprocesserrormod": [52, 79, 89], "caller": 59, "callmodel": [61, 64, 65], "callstat": 64, "caltech": [28, 79, 90, 92, 93, 94, 97, 100, 101, 102], "calucl": 61, "can": [1, 10, 11, 12, 13, 15, 17, 18, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "cancel": [64, 83], "candid": [52, 57, 59, 67, 100], "candidateforgracedb": [52, 67], "cannot": [11, 41, 52, 57, 59, 64, 65, 67, 76, 78, 79, 84, 97, 101], "canon": 24, "cant": 76, "canton": 59, "cap": 30, "capabl": [32, 33, 42, 67, 75, 79, 88, 90, 94, 100, 101, 102], "capano": 84, "capbl": 88, "caption": 79, "captur": 52, "cardiff": 57, "cardoso": 52, "care": [11, 22, 59, 67, 78, 79, 80, 84, 97, 100], "carefulli": 78, "caretsian": 52, "carlo": [42, 52, 61, 64, 65, 73, 84], "carri": [52, 57, 59, 61, 65, 67, 75, 92], "cartesian": [17, 32, 52, 54, 55, 56, 64, 75, 84, 96], "cartesian_spin_1_to_spherical_spin_1": [7, 30, 52], "cartesian_spin_2_to_spherical_spin_2": [7, 30, 52], "cartesian_spin_to_aligned_mass_spin": [7, 30, 52], "cartesian_spin_to_chi_p": [7, 30, 52], "cartesian_spin_to_precession_mass_spin": [7, 30, 52], "cartesian_to_spher": [7, 30, 52, 54], "cartesian_to_spherical_azimuth": [52, 54], "cartesian_to_spherical_polar": [52, 54], "cartesian_to_spherical_rho": [52, 54], "cartesianspin1tosphericalspin1": [7, 30, 49, 52], "cartesianspin2tosphericalspin2": [7, 30, 49, 52], "cartesianspintoalignedmassspin": [7, 30, 49, 52], "cartesianspintochip": [7, 30, 49, 52], "cartesianspintoprecessionmassspin": [7, 30, 49, 52], "cartesiantospher": [7, 30, 49, 52], "case": [17, 22, 28, 30, 32, 38, 40, 42, 47, 52, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "cast": [64, 65, 67, 78], "cast_to_dtyp": 67, "cat": [67, 97, 99], "cat_1": 100, "cat_2": 100, "cat_3": 100, "cat_h": 100, "catalog": [27, 49, 52, 79, 85], "catch": [52, 64, 68, 90, 92], "catch_waveform_error": [61, 64], "categor": 79, "categori": [52, 79, 92, 97, 99, 100], "categorize_by_attr": [52, 79, 89], "catesian": 52, "caus": [10, 30, 32, 33, 52, 59, 62, 64, 67, 72, 79, 80, 83, 84, 90, 94, 95, 96, 97, 100], "caviti": 74, "cbar_label": 73, "cbc": [1, 9, 10, 14, 28, 29, 30, 32, 52, 56, 66, 67, 71, 72, 78, 79, 84, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102], "cbc_cat2": 14, "cbc_cat2_veto": 14, "cbc_hw_inj": 14, "cbc_paramet": 78, "cbc_veto_definer_cleaned_c02_o2_1164556817": 100, "cbchdfinjectionset": [52, 66], "cbcnote": 84, "cbiwer": 97, "cbrt_lookup": [52, 78], "cbuffer": 57, "cc": 74, "ccorrf_parallel": [52, 59], "ccorrf_simd": [52, 59], "cd": [11, 45, 47, 95, 96, 97, 99], "cdf": [52, 56, 57], "cdfinv": [52, 56], "cdll": 52, "cdtype": 77, "ce": 18, "ceil": [59, 62, 78], "ceilpow2": [52, 78], "celesti": 75, "cell": 73, "censored_nam": 79, "censorforeground": [52, 79, 89], "center": [32, 33, 34, 55, 56, 59, 60, 66, 74, 75, 79], "centr": [49, 52, 78], "central": [52, 59, 74, 75, 76, 78], "central_frequ": 78, "centraltim": [1, 30], "cern": 47, "certain": [8, 17, 30, 47, 51, 56, 71, 83, 92, 97], "certainli": 84, "certif": 90, "chain": [30, 32, 39, 41, 43, 52, 61, 62, 65, 79, 84, 96], "challeng": 36, "chanc": 94, "chang": [10, 11, 22, 24, 31, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 46, 47, 52, 56, 57, 58, 59, 60, 62, 64, 67, 71, 72, 73, 74, 75, 76, 78, 81, 84, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102], "channel": [1, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 55, 60, 66, 72, 74, 76, 78, 79, 80, 84, 92, 94, 96, 97, 98, 99, 100, 102], "channel_nam": [28, 60, 74, 76, 79, 84, 94, 102], "charact": [55, 73, 76, 92], "chart": 99, "chase": 75, "check": [10, 11, 17, 30, 31, 32, 48, 51, 52, 53, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 73, 74, 75, 76, 78, 79, 81, 84, 89, 90, 92, 94, 96, 97, 98, 99, 100], "check_align": [52, 76], "check_bin_exist": [52, 75, 84], "check_duplicate_opt": [52, 76, 79, 89], "check_ethinca_against_bank_param": [52, 75, 84], "check_existing_opt": 79, "check_expired_trigg": [52, 57], "check_for_cartesian_spin": [61, 64], "check_for_nan": [61, 64], "check_for_valid_tim": 64, "check_hist_param": [52, 61], "check_if_finish": [61, 65], "check_integr": [60, 61, 62], "check_low_lat": [52, 57], "check_nsampl": [62, 65], "check_psd_dist": [52, 74], "check_same_len_precis": [52, 76], "check_significance_opt": [52, 57], "check_snr_optimizer_opt": [52, 68], "check_stat": 59, "check_statu": [52, 58], "check_template_param_bin_data": [52, 71], "check_update_cut": [52, 57], "check_update_fil": [52, 57], "check_valid": [52, 60], "check_validtim": [61, 64], "checkbank": [52, 67], "checkout": [11, 47, 81], "checkpoint": [32, 39, 41, 43, 61, 62, 65, 79, 94, 95, 96], "checkpoint_callback": [61, 65], "checkpoint_exit_cod": 94, "checkpoint_exit_maxtim": 94, "checkpoint_fil": 62, "checkpoint_from_config": [61, 65], "checkpoint_histori": 62, "checkpoint_interv": [43, 61, 65, 94], "checkpoint_sign": [61, 65], "checkpoint_time_interv": [34, 40, 65], "checkpoint_valid": 62, "checkpointin": 65, "checksum": [60, 79], "cherri": 81, "chi": [13, 23, 52, 57, 64, 67, 69, 75, 77, 84, 94], "chi1": [52, 75], "chi1_bin": 75, "chi2": [52, 75], "chi2_bin": 75, "chi_": 56, "chi_1": 75, "chi_2": 75, "chi_a": [49, 52, 56], "chi_coord": 75, "chi_eff": [12, 49, 52, 56, 67, 78, 95, 96], "chi_eff_from_spher": [49, 52, 95, 96], "chi_i": 75, "chi_j": 75, "chi_p": [49, 52, 56, 95, 96], "chi_p_from_spher": [49, 52, 95, 96], "chi_p_from_xi1_xi2": [49, 52], "chi_perp_from_mass1_mass2_xi2": [49, 52], "chi_perp_from_spinx_spini": [49, 52], "child": 79, "child_workflow": 79, "children": 78, "chip_chieff": 96, "chiptocartesianspin": [49, 52], "chirp": [12, 17, 28, 30, 35, 36, 38, 52, 56, 66, 67, 71, 75, 78, 83, 84, 88, 94, 96, 101, 102], "chirp_dist": [30, 49, 52, 97], "chirp_distance_to_dist": [7, 30, 52], "chirp_mass": 83, "chirp_time_window": 66, "chirp_volume_montecarlo": [49, 52], "chirpdistancetodist": [7, 30, 49, 52], "chirpdistmchirp": 97, "chirpdistmchirp_stat": 97, "chirpmass": 75, "chirpmassjumpfac": 75, "chisq": [24, 28, 49, 52, 57, 67, 85, 94, 97], "chisq_accum_bin": [52, 77], "chisq_accum_bin_cython": [52, 77], "chisq_accum_bin_numpi": [52, 77], "chisq_bin": [59, 77, 94], "chisq_choic": 67, "chisq_cpu": [49, 52], "chisq_cupi": [49, 52], "chisq_delta": 94, "chisq_dof": [24, 57, 77], "chisq_dof_templ": 24, "chisq_loc": 77, "chisq_snr_threshold": 94, "chisq_templ": 24, "chisq_threshold": [52, 57, 94], "chisquar": 77, "choic": [1, 8, 10, 21, 30, 45, 52, 57, 58, 61, 67, 69, 71, 72, 76, 78, 84, 90, 93, 94, 101, 102], "choos": [1, 8, 10, 17, 30, 32, 36, 38, 40, 51, 52, 57, 58, 61, 64, 67, 71, 72, 78, 79, 84, 85, 87, 90, 93, 94, 96, 97, 101, 102], "choose_pool": [49, 52], "choosebyschemedict": [49, 52], "choosen": [10, 21], "chose": [47, 52, 97], "chosen": [8, 30, 52, 64, 69, 70, 72, 75, 76, 78, 79, 84], "chrome": 27, "chunk": [71, 72, 73, 74, 79, 92, 94, 97, 102], "chunk_siz": [79, 92], "chunksiz": [52, 67], "cindex": 57, "circular": [52, 54, 57, 69, 76, 78], "circularli": [76, 78], "circumst": 60, "cit": [45, 79, 90], "citat": 13, "ckpt_signal_from_config": [61, 65], "cl": [52, 56, 63, 64, 99], "clariti": 79, "class": [0, 3, 6, 7, 15, 19, 30, 43, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 84, 85, 90, 92, 93, 94, 96, 100, 101, 102], "class_api": [49, 52], "classifi": [52, 88], "classmethod": [52, 56, 57, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79], "clean": [11, 45, 75, 97], "clean_cuda": [49, 52], "clean_data": [52, 74], "cleanli": 52, "cleanup": [31, 44, 87], "clear": [52, 65, 76, 78, 84, 92], "clear_cach": [52, 78], "clear_sampl": [61, 65], "clearer": 55, "clearli": [30, 92], "cli": [52, 57, 58, 61, 68, 72, 74, 79, 92], "cli_arg": [68, 75], "cli_pars": 75, "click": [36, 43, 73, 81, 97, 99], "clicklink": [52, 73], "client": 86, "clifford": 84, "clock": [84, 97], "clockwis": 15, "clone": [11, 45, 47], "close": [28, 32, 42, 52, 56, 59, 67, 75, 76, 79, 84, 97], "close_pool": [49, 52], "closed_box": 79, "closedbound": [49, 52], "closer": 52, "closest": [13, 72, 75, 79, 84, 102], "cluster": [1, 10, 21, 28, 29, 30, 32, 33, 47, 52, 57, 59, 67, 73, 74, 79, 84, 90, 94, 95, 96, 97, 99, 102], "cluster_coinc": [52, 57], "cluster_coincs_multiifo": [52, 57], "cluster_funct": 59, "cluster_num_live_point": 39, "cluster_over_tim": [52, 57], "cluster_reduc": [52, 57], "cluster_template_ev": [52, 57], "cluster_template_events_single_ifo": [52, 57], "cluster_template_network_ev": [52, 57], "cluster_window": [67, 74, 94], "clustered_fil": 79, "clustered_kd": 73, "cmap": [17, 73, 96], "cmd": [61, 62, 73, 79], "cmdfile": 79, "cmdlist": 79, "cname": 67, "co": [17, 36, 52, 64, 67, 69, 78], "coa_phas": [8, 24, 30, 32, 35, 36, 37, 40, 42, 44, 57, 67, 78, 87, 96], "coa_phase_sampl": 64, "coa_phase_templ": 24, "coales": [8, 30, 78], "coalesc": [8, 29, 30, 32, 34, 37, 38, 40, 52, 55, 59, 64, 71, 78, 79, 84, 89, 96, 97, 99], "coalescence_r": [52, 71], "coalescence_rate_interp": 71, "coalescencetime_lisa": 36, "coalign_waveform": [52, 78], "coars": [66, 72, 84, 94], "coarsematch": 94, "coarsematch_deltaf": 66, "coarsematch_fmax": 66, "coarser": 64, "coasles": 32, "code": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 30, 32, 41, 43, 45, 50, 51, 52, 57, 58, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "codomain": 52, "coeff": [23, 57, 59, 76], "coeff_0": 56, "coeff_1": 56, "coeffici": [23, 52, 56, 57, 59, 75, 76, 78, 83], "coher": [28, 49, 52, 73, 75, 79, 94, 99, 100], "coherent_inject": 99, "coherent_seg": 73, "coherent_snr": [52, 57], "coinc": [49, 52, 67, 71, 79, 83, 91, 97], "coinc_ev": 86, "coinc_fil": [67, 73, 79], "coinc_idx": 57, "coinc_ifo": 67, "coinc_inspir": 86, "coinc_lim_for_thresh": [52, 57], "coinc_rat": [49, 52], "coinc_result": [57, 67], "coinc_snr": 57, "coinc_stat": 57, "coinc_threshold": 59, "coinc_tim": [59, 68, 71], "coinc_timeseries_plot": [52, 73], "coinc_trigg": 57, "coinc_typ": 71, "coinc_window": [57, 59], "coinc_window_pad": 57, "coincbuffer_expireel": [52, 57], "coincbuffer_numgreat": [52, 57], "coincexpirebuff": [52, 57], "coincid": [49, 52, 57, 59, 68, 73, 75, 83, 84, 92, 93, 94, 97, 98, 102], "coincident_snr": [52, 57], "cointain": 79, "cokela": [52, 84], "col": [67, 73], "col_nam": 67, "col_typ": 67, "coldest": [41, 65], "collabor": [41, 45], "collaps": [56, 59, 78], "collect": [43, 56, 57, 61, 62, 71, 79, 82, 89, 97], "collin": [52, 66], "colon": 76, "color": [1, 14, 30, 31, 32, 35, 36, 38, 40, 49, 50, 51, 52, 70, 79, 84, 94, 96, 102], "colorbar": [17, 73], "colored_nois": [52, 70, 84], "colormap": [73, 96], "colour": [61, 70], "colum": 67, "column": [28, 51, 52, 56, 57, 58, 67, 72, 73, 74, 76, 78, 84, 97, 102], "column_index": 56, "column_typ": 57, "columnlist": 67, "columnnam": 67, "columns_from_file_list": [52, 73], "columns_max": 73, "com": [11, 45, 56, 65, 67, 75, 76, 84, 88, 92, 97, 99], "combact": 96, "combin": [28, 30, 32, 44, 52, 57, 59, 60, 61, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 83, 84, 92, 95, 96, 97, 98, 99, 100], "combination_noise_logr": [52, 57], "combination_noise_r": [52, 57], "combine_and_copi": [52, 67], "combine_layout": [61, 64], "combine_result": [52, 59], "combined_cat_2_veto_seg": 97, "combo": 57, "combo_kei": 57, "come": [30, 67, 86, 97, 99, 100], "comet": 97, "comma": [55, 64, 97, 100], "command": [10, 11, 18, 19, 21, 22, 30, 44, 45, 46, 47, 48, 52, 56, 57, 58, 61, 62, 64, 66, 68, 74, 75, 76, 79, 80, 89, 90, 93, 94, 95, 96, 97, 99, 101, 102], "command_argu": 68, "commensur": 77, "comment": [57, 61, 62, 67, 84, 91, 92, 96], "comment_prefix": 76, "commit": [11, 81], "common": [14, 30, 34, 41, 43, 45, 52, 56, 62, 64, 65, 73, 75, 76, 77, 78, 79, 80, 84, 92, 94, 97, 99, 101, 102], "common_kind": [52, 76], "commonli": [42, 67, 97], "commonmcmcmetadataio": [2, 41, 61, 62], "commonmcmcmetadatio": 62, "commonmultitemperedmetadataio": [2, 41, 61, 62], "commonnestedmetadataio": [2, 41, 61, 62], "commun": [18, 29, 36, 64], "comov": [17, 52, 95, 96], "comoving_dist": 52, "comoving_volum": [17, 95, 96], "comp": 75, "compact": [29, 41, 52, 53, 69, 89, 97, 99], "companion": 45, "compar": [10, 21, 30, 41, 42, 57, 59, 61, 65, 67, 76, 77, 79, 83, 87, 90, 92, 94, 102], "compare_kd": [61, 65], "comparison": [9, 17, 72, 76, 84, 91], "compat": [18, 59, 64, 67, 88, 94, 102], "compatibli": 73, "compens": 23, "compil": [52, 58], "compilervar": 45, "complain": 97, "complet": [32, 42, 57, 72, 76, 78, 79, 84, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "complex": [22, 24, 27, 57, 58, 59, 64, 74, 76, 77, 78, 84, 100], "complex128": [22, 76], "complex64": [22, 57, 58, 76], "complex_list": 74, "complex_median": [52, 74], "complex_same_precision_a": [52, 76], "complic": [22, 56], "compon": [8, 10, 28, 30, 32, 37, 47, 52, 56, 57, 59, 64, 67, 68, 71, 75, 78, 79, 84, 102], "componentmass": [10, 21, 93, 97], "componentwis": 63, "compos": 75, "composit": 72, "compound": 75, "comprehens": 100, "compress": [49, 52, 94, 102], "compress_waveform": [52, 78], "compressed_waveform": 78, "compressedwaveform": [52, 78], "compression_factor": 78, "compris": [99, 100], "comput": [1, 8, 18, 22, 30, 31, 32, 33, 36, 43, 45, 47, 51, 52, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 93, 94, 96, 97, 100, 102], "computation": 32, "compute_acf": [43, 61, 65], "compute_acl": [43, 61, 65], "compute_effici": [49, 52], "compute_followup_snr_seri": [52, 59], "compute_inj_optimal_snr": [52, 79, 89, 93], "compute_jacobian": [49, 52], "compute_lower_limit": [49, 52], "compute_max_snr_over_sky_loc_stat": [52, 59], "compute_max_snr_over_sky_loc_stat_no_phas": [52, 59], "compute_minus_network_snr": [52, 68], "compute_minus_network_snr_pso": [52, 68], "compute_network_snr_cor": [52, 68], "compute_pdf": [52, 61], "compute_search_efficiency_in_bin": [49, 52], "compute_search_volume_in_bin": [49, 52], "compute_u_val_for_sky_loc_stat": [52, 59], "compute_u_val_for_sky_loc_stat_no_phas": [52, 59], "compute_upper_limit": [49, 52], "compute_volume_vs_mass": [49, 52], "concaten": 67, "concentr": 56, "concern": [75, 84, 97], "concert": 42, "conclus": 65, "concret": 80, "concurr": 64, "cond": [78, 94], "conda": [29, 45], "condit": [1, 30, 41, 52, 56, 64, 65, 74, 76, 78, 84, 92, 94], "condition_strain_nod": 79, "condition_strain_out": 79, "conditioned_x": 52, "condor": [10, 21, 84, 96, 97, 98, 99], "condor_submit": [97, 99], "condordagmannod": 79, "condorpool_copi": 79, "condorpool_shar": 79, "condorpool_symlink": 79, "cone": 52, "conerverg": 61, "conf": [10, 15, 21, 90], "confid": [10, 33, 37, 52, 57, 71, 73, 96], "confidence_interval_min_width": [49, 52], "config": [15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 49, 52, 55, 56, 62, 63, 64, 65, 67, 73, 74, 79, 84, 86, 87, 95, 96, 97, 98, 99], "config_fil": [55, 62, 79], "config_file_1": 99, "config_file_2": 99, "config_group": [61, 62], "config_pars": [62, 79], "config_path": [17, 56, 73], "configfil": [76, 79, 84, 92, 97, 99], "configpars": [56, 62, 64, 65, 73, 76, 78, 79, 90, 92, 93, 94, 100, 101, 102], "configparser_test": [49, 52, 76, 89], "configparser_value_to_fil": [52, 79, 89], "configparset": 79, "configr": 97, "configuart": 90, "configur": [29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 47, 49, 52, 55, 56, 61, 62, 64, 65, 66, 73, 74, 76, 84, 89], "conflict": 84, "confus": [43, 72, 78, 79, 92, 100], "confusion_fit_lisa": [52, 72, 84], "confusion_fit_taiji": [52, 72, 84], "confusion_fit_tianqin": [52, 72, 84], "confvar": 52, "conj": [52, 76], "conjug": 76, "conjunct": 94, "connect": [15, 18, 28, 67, 97], "consecut": [1, 30, 72, 76, 84, 94, 102], "consequ": [32, 41, 43], "consid": [1, 29, 30, 32, 52, 57, 58, 59, 60, 61, 62, 67, 72, 74, 75, 77, 78, 79, 84, 92, 94, 97, 99, 102], "consist": [17, 22, 24, 52, 56, 57, 59, 61, 64, 72, 74, 75, 76, 84, 89, 94, 96], "consolidate_ev": [52, 57], "const": [56, 76], "constant": [1, 30, 42, 52, 55, 56, 59, 64, 70, 74, 76, 78, 84, 93, 94, 101, 102], "constitu": 64, "constrain": [30, 56, 64], "constraint": [34, 40, 49, 52, 64, 65], "constraint_arg": [30, 34, 56], "constraint_sect": [56, 64], "construct": [10, 24, 56, 59, 62, 64, 65, 73, 74, 75, 79, 84, 89, 92, 93, 94, 97, 100, 101, 102], "construct_kd": [52, 73], "construct_tri": [52, 73], "constructor": [52, 59, 65, 73, 79, 93], "consult": 97, "cont": 73, "cont_chisq": 24, "cont_chisq_dof": 24, "cont_chisq_dof_templ": 24, "cont_chisq_templ": 24, "conta": 60, "contact": [19, 21, 47, 48, 84, 86, 90, 91, 97], "contain": [1, 10, 11, 18, 19, 21, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "container_wflow": 79, "containign": 71, "contains_condit": [49, 52], "contamin": 59, "content": [11, 22, 27, 49, 84, 89], "contenthandl": 67, "context": [52, 57, 58, 87], "contigu": [52, 78], "contin": 64, "continu": [30, 36, 37, 38, 40, 41, 46, 47, 48, 56, 59, 64, 70, 79, 81], "contour": [31, 35, 36, 40, 52, 61, 73, 96, 97], "contour_color": 73, "contour_linestyl": 73, "contour_percentil": 73, "contour_plott": [52, 73], "contracted_dvdc": [52, 71], "contrast": 59, "contribut": [29, 42, 43, 79], "contributor": 86, "control": [11, 52, 56, 68, 84, 91, 94, 97, 98, 99, 101, 102], "control_valu": 68, "conveni": [10, 22, 24, 30, 52, 62, 64, 65, 67, 75, 76, 78, 79], "convent": [30, 52, 58, 64, 78, 84, 87, 88], "converg": [30, 32, 43, 61, 65, 68, 84, 96], "convers": [17, 30, 36, 49, 56, 57, 64, 75, 76], "conversion_opt": 75, "convert": [17, 23, 30, 32, 49, 52, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 90, 91, 92, 93, 96], "convert_bank_to_hdf": [52, 79, 89], "convert_cachelist_to_filelist": [52, 79, 89, 90], "convert_inputstr": [52, 57], "convert_to_lal_cach": [52, 79, 89], "convert_to_process_params_dict": [52, 76], "convert_to_sngl_inspiral_t": [52, 75, 84], "convert_trig_to_hdf": [52, 79, 89], "convex": 56, "convienc": 76, "convolut": [32, 71, 72, 76], "convolution_tran": 71, "convolv": [72, 76], "convserv": 78, "coolei": 58, "coord": [8, 30, 52], "coord_util": [49, 52, 84], "coordin": [8, 15, 17, 30, 32, 35, 36, 49, 52, 55, 56, 65, 69, 75, 84, 96, 99], "copi": [10, 11, 19, 21, 25, 30, 33, 34, 45, 47, 49, 52, 61, 62, 64, 66, 67, 74, 76, 78, 79, 84, 90, 92, 93, 95, 97], "copit": 76, "copy_info": [61, 62], "copy_metadata": [61, 62], "copy_opts_for_single_ifo": [52, 76], "copy_output": 74, "copy_prior": 65, "copy_sampl": [61, 62], "copy_to_cwd": [79, 92], "core": [29, 31, 32, 33, 49, 52, 56, 64, 65, 71, 73, 78, 84, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102], "core_frac": 79, "core_sigma": 79, "corner": [56, 79, 80, 95, 96], "corr": 77, "corr_cross": 77, "corr_out": 59, "corr_plu": 77, "corr_sn": 77, "correct": [8, 10, 15, 22, 28, 30, 33, 42, 45, 48, 52, 57, 61, 64, 65, 67, 71, 74, 75, 78, 81, 84, 97, 102], "correction_typ": 74, "correctli": [27, 48, 55, 56, 64, 76, 78, 79, 92], "correl": [52, 58, 59, 77, 84], "correlate_numpi": [52, 59], "correlate_parallel": [52, 59], "correlate_simd": [52, 59], "correspond": [10, 21, 24, 25, 30, 32, 36, 43, 47, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 90, 92, 93, 94, 95, 96, 97, 99, 100, 102], "corrupt": [1, 27, 28, 30, 32, 59, 76, 80, 84, 94, 97, 102], "corrupt_tim": 74, "cos_angl": [0, 30, 37, 40, 56], "cosangl": [0, 30, 52, 56], "cosin": 56, "cosmic": 15, "cosmicexplorerp1600143": [4, 30, 52, 72, 84, 94, 102], "cosmicexplorerpessimisticp1600143": [4, 30, 52, 72, 84, 94, 102], "cosmicexplorerwidebandp1600143": [4, 30, 52, 72, 84, 94, 102], "cosmolog": 52, "cosmologi": [30, 49, 71, 96], "cosmological_quantity_from_redshift": [49, 52], "cost": [22, 59, 75, 84, 94, 97], "costheta_0": 56, "costheta_1": 56, "could": [38, 40, 52, 57, 64, 67, 74, 79, 84, 90, 92, 93, 94, 96, 97, 99, 100], "count": [57, 62, 71, 73, 75, 76, 83], "count_n_loud": [52, 57], "count_posterior": [52, 71], "countdown": 74, "coupl": [30, 37, 57, 74], "cours": 84, "cov": [63, 64], "covari": [64, 75], "cover": [10, 17, 52, 72, 75, 79, 84, 90, 94, 102], "coverag": [10, 52, 56, 79, 84], "cp": [52, 56, 61, 62, 63, 64, 65, 73, 74, 76, 79, 90, 93, 100, 102], "cpfile": 79, "cpnest": [2, 5, 6, 30, 41, 43, 62, 65], "cpnest_fil": [2, 41], "cpnestfil": [2, 41], "cpnestsampl": [5, 6, 30, 43], "cpu": [28, 52, 76, 78, 94, 97, 98], "cpu_affin": 94, "cpu_affinity_from_env": 94, "cpucorrel": [52, 59], "cpuonli": [49, 52], "cpuschem": [49, 52], "cputhresholdclust": [52, 57], "crappi": 75, "crash": 97, "creat": [1, 16, 17, 18, 22, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 78, 79, 84, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "create_axes_grid": [52, 73], "create_data_pars": [61, 64], "create_density_plot": [52, 73], "create_descriptor": [52, 58], "create_fits_fil": [52, 79, 89, 96], "create_full_filt": [52, 72, 84], "create_inj_workflow": 95, "create_inject": 95, "create_job": [79, 101], "create_marginalized_hist": [52, 73], "create_memory_and_engine_for_class_based_fft": [52, 74], "create_miss": 62, "create_multidim_plot": [52, 73], "create_new_output_fil": [61, 65], "create_nod": [52, 79, 89, 93, 101], "create_nodata_nod": [52, 79, 89], "create_posterior_fil": [52, 79, 89], "create_process_t": [52, 67], "create_transform": [52, 79, 89], "create_waveform_gener": [61, 64], "create_workflow": 96, "creation": [52, 57, 64], "credenti": [47, 97], "credibl": 52, "credible_interv": 71, "credit": 13, "criteria": [43, 57, 65], "criterion": 65, "critic": 92, "crop": [52, 76], "cross": [42, 55, 57, 64, 72, 73, 75, 78, 99], "crossterm": 64, "csd": 72, "css": 73, "cstring": 71, "ct": 71, "ctime": 71, "ctstring": 71, "ctx": 52, "cty": 71, "ctype": [52, 71], "cube": [52, 56, 57, 65, 83], "cubemodel": [61, 65], "cubic": [52, 74], "cubic_splin": 74, "cubicsplin": [52, 74], "cuda": [22, 52, 87, 94], "cuda_root": 46, "cuda_visible_devic": 52, "cudaschem": [49, 52], "cudathresholdclust": [52, 57], "cufft": 58, "cum_back_num": 57, "cum_fit": [52, 57], "cumsum": [52, 76], "cumul": [56, 57, 59, 60, 76, 77, 79, 91, 97, 100], "cumulative_cat_12h_veto_seg": 97, "cumulative_index": 74, "cupi": [12, 15, 52, 58, 76, 78, 84, 87, 94, 97, 99, 101, 102], "cupycorrel": [52, 59], "cupyfft": [49, 52], "cupylinearinterpol": [52, 78], "cupyschem": [49, 52], "curent": 62, "curl": [36, 37, 38, 40], "curr_ex": [79, 101], "curr_exe_class": 79, "curr_exe_job": 79, "curr_idx": 79, "curr_pfn": 79, "curr_sect": [79, 101], "curr_seg": 79, "current": [10, 18, 19, 22, 24, 25, 30, 32, 33, 35, 41, 43, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 84, 87, 90, 92, 93, 94, 97, 98, 100, 101, 102], "current_l": 52, "current_m": 52, "current_param": [52, 61, 64, 78], "current_prefix": [49, 52], "current_retention_level": [52, 79, 89, 92, 93], "current_seg": 79, "current_stat": [61, 64], "currenttim": 97, "currseg": 79, "curv": [10, 32, 52, 71, 72], "custom": [7, 19, 30, 32, 34, 35, 36, 40, 46, 52, 55, 56, 62, 63, 64, 78, 85, 96, 99], "custom_function_nam": 56, "custom_function_name2": 56, "custom_mod": 56, "custom_multi": [7, 30, 52], "customtransform": [7, 30, 49, 52], "customtransformmultioutput": [7, 30, 49, 52], "cut": [49, 52, 73, 74, 78, 84, 94, 97, 99, 100, 102], "cut_dict": 57, "cut_distant_inject": [52, 79, 89, 93], "cut_events_via_indic": [52, 57], "cut_events_via_mask": [52, 57], "cut_funct": 57, "cut_thresh": 57, "cut_threshold": 57, "cutoff": [1, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 52, 64, 66, 70, 72, 75, 76, 77, 78, 83, 84, 94, 96, 97, 98, 101, 102], "cvfm": 79, "cvmf": [29, 45, 47, 81, 97], "cycl": [42, 61, 84], "cycle0": 84, "cycle1": 84, "cycle10": 84, "cycle11": 84, "cycle12": 84, "cycle13": 84, "cycle14": 84, "cycle15": 84, "cycle16": 84, "cycle2": 84, "cycle3": 84, "cycle4": 84, "cycle5": 84, "cycle6": 84, "cycle7": 84, "cycle8": 84, "cycle9": 84, "cyclic": [49, 52, 56, 63, 76, 78], "cyclic_domain": 56, "cyclic_time_shift": [52, 76], "cycliclli": 76, "cython": 57, "d": [10, 15, 20, 21, 28, 30, 42, 44, 48, 52, 56, 57, 59, 61, 64, 67, 73, 74, 75, 93, 97], "d0": 74, "d06231daa8edf28c4760106599f86c8d8659cc3": 98, "d44": 84, "d52": 84, "d53": 84, "d60": 84, "d76": 84, "d80": 84, "d81": 84, "d86": 84, "d87": 84, "d88": 84, "d89": 84, "d93": 84, "d935ee9146074b1d3f26c5f0acfd120": 48, "d_dist": 71, "d_i": 64, "d_l": 67, "d_max": 52, "d_min": 52, "daemon": 97, "dag": [9, 10, 79, 84, 90], "dagman": [79, 90, 97], "dai": [28, 64, 73, 97], "dal": 59, "dalpha1": [8, 30, 78], "dalpha2": [8, 30, 78], "dalpha3": [8, 30, 78], "dalpha4": [8, 30, 78], "dalpha5": [8, 30, 78], "dame": 52, "damp": [52, 56, 78], "damping_tim": [56, 78], "dash": 76, "dat": 10, "data": [1, 9, 13, 16, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 84, 85, 90, 92, 93, 94, 95, 96, 98, 100, 102], "data1": 74, "data2": 74, "data_config": [32, 33], "data_er8a": 99, "data_er8b": 99, "data_from_cli": [61, 64], "data_group": [61, 62], "data_length": 79, "data_opts_from_config": [61, 64], "data_quality_channel": 74, "data_quality_flag": 74, "data_read": [57, 59], "data_read_nam": 79, "data_s6": 97, "data_sect": 64, "data_seg": 79, "data_tag": 73, "data_trim": 72, "data_util": [52, 61], "databas": [89, 90, 92, 97, 98, 99, 100], "databs": 28, "databuff": [52, 60, 74], "datafind": [1, 30, 49, 52, 60, 84, 89, 92, 94, 97, 98, 99, 100, 101, 102], "datafind_fil": 79, "datafind_filelist": [79, 90], "datafind_keep_unique_backup": [52, 79, 89, 90], "datafind_out": [79, 94, 102], "datafindcach": [79, 90], "datafindcache_list": [79, 90], "datafindout": [79, 90], "datafromfil": [52, 67], "datagroup": 56, "datalength": 79, "dataparam": 76, "dataset": [36, 41, 56, 57, 62, 67, 73, 76, 78], "datatyp": [52, 59, 64, 65, 67], "date": 24, "date_directori": 67, "date_directory_format": 67, "datefmt": 52, "dawn": [93, 102], "dax": [79, 84, 95, 96, 97, 98, 99], "dax3": 79, "dax_fil": [84, 97, 99], "dax_file_directori": 84, "dax_file_nam": 79, "dax_output": 79, "dax_repr": [52, 79, 89], "day_str": 68, "db": 97, "db20ca71e65b54c0b073fd3d84d5f43fd822779": 100, "dbeta": 78, "dbeta1": [8, 30, 78], "dbeta2": [8, 30, 78], "dbeta220": 78, "dbeta3": [8, 30, 78], "dbin": 52, "dbrown": 97, "dc": 59, "dcc": [38, 40, 71, 74], "dchi0": [8, 30, 78], "dchi1": [8, 30, 78], "dchi2": [8, 30, 78], "dchi3": [8, 30, 78], "dchi4": [8, 30, 78], "dchi5": [8, 30, 78], "dchi5l": [8, 30, 78], "dchi6": [8, 30, 78], "dchi6l": [8, 30, 78], "dchi7": [8, 30, 78], "dchirp": 10, "dctionari": 64, "deactiv": [46, 47, 48, 73], "deal": [67, 68, 75, 90, 97], "debug": [1, 30, 52, 74, 75, 79, 84, 90, 94, 95, 96, 101, 102], "dec": [8, 15, 28, 30, 32, 34, 37, 38, 40, 42, 44, 52, 55, 56, 57, 64, 67, 73, 75, 78, 84, 95, 96, 99], "dec_fac": 57, "dec_ref": 34, "decai": [52, 63, 71, 78], "decid": [58, 79, 84, 92, 94, 97, 100, 102], "decim": [57, 59, 73, 79, 91, 97], "decimation_factor": 67, "decis": [84, 92], "declar": 79, "declin": [8, 15, 30, 52, 55, 56, 75, 78, 87], "decod": 62, "decomp_ccode_doubl": [52, 78], "decomp_ccode_float": [52, 78], "decomp_scratch": 78, "decompos": 87, "decomposit": 58, "decompress": [52, 78, 94], "decompress_cpu": [49, 52], "decompress_cpu_cython": [49, 52], "decompress_cupi": [49, 52], "decomps": 78, "decor": [64, 67], "decreas": [32, 57, 96], "decrement": 52, "deector": 57, "deep": 29, "deepcopi": [76, 79], "deepcopyableconfigpars": [52, 76], "def": [36, 56, 67, 87, 88], "default": [1, 8, 10, 15, 22, 30, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 90, 92, 93, 94, 96, 97, 99, 102], "default_cosmologi": [52, 71], "default_delta_bh_spin": [52, 75, 84], "default_delta_ns_mass": [52, 75, 84], "default_dict": [52, 78], "default_field": [78, 94], "default_kwd": 65, "default_latitude_geo": 52, "default_latitude_lisa": 52, "default_latitude_ssb": 52, "default_level": 52, "default_longitude_geo": 52, "default_longitude_lisa": 52, "default_longitude_ssb": 52, "default_mod": [52, 78], "default_ns_eo": [52, 75, 84], "default_nsbh_boundary_mass": [52, 75, 84], "default_null_valu": [52, 67], "default_params_nam": [49, 52], "default_polarization_geo": 52, "default_polarization_lisa": 52, "default_polarization_ssb": 52, "default_propos": 65, "default_proposal_arg": 65, "default_props": 65, "default_ranking_statis": 57, "default_ranking_statist": 57, "default_sect": 76, "default_set": [52, 76], "default_stat": [61, 64, 65], "default_tc_geo": 52, "default_tc_lisa": 52, "default_tc_ssb": 52, "default_zero": 67, "defaultdict": 76, "defaultparam": 62, "defaultprop": 73, "defaultschem": [49, 52, 78], "defaultvalu": 76, "defaut": 62, "defin": [1, 8, 30, 32, 35, 36, 41, 43, 52, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 90, 92, 94, 95, 96, 98, 99], "definit": [24, 41, 43, 52, 56, 57, 64, 66, 67, 98, 99, 100], "deform": [8, 10, 30, 52, 78], "deg": [44, 56, 76], "degener": 78, "degeneraci": 42, "degre": [15, 35, 36, 54, 57, 73, 77, 79, 94], "del_funct": [52, 67], "del_mdet": 52, "del_z": 52, "delai": [15, 23, 40, 55, 57, 59, 71, 75, 76], "delet": [11, 30, 44, 62, 66, 79, 84, 92, 94, 97, 99], "deletetupl": [76, 79, 92], "delim": [61, 64], "delimit": [61, 62, 74, 76], "delta": [32, 44, 52, 56, 57, 63, 64, 75, 78, 84, 92, 94, 102], "delta_bh_spin": [75, 84, 102], "delta_f": [8, 22, 23, 27, 30, 50, 51, 52, 58, 59, 64, 68, 72, 74, 76, 77, 78, 84, 87, 88, 102], "delta_f_dict": 72, "delta_fc": 74, "delta_flmn": 78, "delta_lambda_tild": [49, 52], "delta_ns_mass": [75, 84, 102], "delta_phi": 52, "delta_psi": 78, "delta_qinv": 74, "delta_t": [8, 15, 22, 23, 25, 27, 30, 50, 51, 52, 58, 59, 64, 66, 70, 72, 74, 76, 78, 87, 88], "delta_taulmn": 78, "delta_tc": [32, 95, 96], "delta_x": 75, "deltaf": [75, 94], "deltam_f": [52, 59], "demand": 92, "demarg_150914": 37, "demargin": 40, "demonstr": [15, 17, 31, 37, 38, 40, 51, 87, 95], "denomin": 52, "denot": [24, 79, 90, 94, 97], "densiti": [17, 42, 44, 52, 56, 57, 59, 61, 64, 71, 72, 73, 76, 77, 79, 80, 83, 96], "density_cmap": 73, "densli": 42, "depend": [18, 30, 34, 41, 42, 45, 47, 52, 56, 59, 61, 62, 64, 65, 67, 74, 76, 78, 79, 80, 84, 86, 94, 96, 97], "deprec": [52, 90], "depth": 75, "der_data_h": 25, "deriv": [13, 30, 52, 56, 57, 59, 60, 62, 64, 67, 69, 71, 76, 78, 95, 96], "descr": 88, "describ": [10, 19, 21, 23, 28, 30, 32, 46, 47, 52, 56, 58, 64, 74, 75, 76, 78, 79, 82, 83, 84, 86, 90, 92, 93, 94, 96, 97, 100, 101, 102], "descript": [1, 8, 24, 30, 36, 52, 57, 67, 73, 75, 78, 79, 81, 83, 84, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102], "description_dict": [52, 78], "design": [10, 30, 32, 34, 37, 42, 57, 59, 67, 79, 83, 84, 89, 90, 92, 94, 100, 102], "desir": [56, 58, 59, 65, 67, 70, 71, 72, 73, 75, 76, 78, 79, 84, 89, 94, 96, 97, 102], "desired_sit": 97, "desired_xsede_sit": 97, "desktop": 18, "despatch": 71, "dest": [61, 62, 76], "destin": [68, 71, 76, 79], "det": [55, 57, 62, 64], "det_cplx_loglr": [61, 64], "det_frame_waveform": 64, "det_h1": 87, "det_l1": 87, "det_lognl": [61, 64], "det_lognorm": [61, 64], "det_optimal_snrsq": [61, 64], "det_stat": 59, "det_tc": [40, 49, 52], "det_v1": 87, "detail": [18, 19, 21, 22, 29, 30, 32, 33, 36, 37, 39, 41, 45, 52, 56, 58, 59, 62, 63, 64, 65, 66, 67, 71, 72, 73, 75, 78, 79, 80, 84, 89, 92, 94, 95, 96, 98, 100, 101, 102], "detchar": [79, 92, 98, 99, 100], "detect": [1, 13, 29, 30, 32, 53, 57, 59, 74, 78, 79, 84, 87, 88, 92, 93, 94, 96, 97, 102], "detect_loud_glitch": [52, 74], "detector": [1, 10, 12, 13, 14, 17, 25, 28, 29, 30, 32, 34, 49, 52, 54, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 89, 91, 94, 96, 97, 98, 99, 100], "detector_amp_scal": 66, "detector_gps_tim": 66, "detector_nam": [52, 55, 66, 78], "detector_phase_shift": 66, "detectors_with_valid_data": [61, 64], "deterim": 73, "determin": [10, 21, 28, 30, 32, 34, 41, 43, 47, 48, 52, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 73, 75, 76, 78, 79, 80, 83, 84, 85, 89, 90, 91, 94, 95, 96, 97, 99, 102], "determine_eigen_direct": [52, 75, 84], "detrend": [52, 76], "dev": [46, 81, 97], "dev0": 81, "develeop": 45, "develop": [10, 11, 13, 19, 24, 84, 88, 91, 92, 93, 94, 99, 101, 102], "deviat": [1, 17, 30, 34, 42, 52, 61, 71, 74, 78, 84, 94, 102], "devic": [52, 76, 94], "device_num": 52, "devis": 52, "devot": 98, "df": [59, 78, 84, 102], "df_multipl": 78, "df_parent": 79, "dfcach": [79, 90], "dfkwarg": [79, 90], "dfparent": 79, "dh": 40, "dhl": 40, "dhurandhar": 84, "diaconi": 61, "diagnost": [61, 79, 96, 97, 98], "diagon": [52, 63, 73], "diagram": 52, "dic": 67, "dickinson": 71, "dict": [52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 78, 79, 90, 100], "dict_kei": 12, "dict_to_arg": [52, 68], "dict_typ": 76, "dictarrai": [52, 67], "dictat": [28, 101], "dictionari": [41, 43, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 84, 90, 94, 100, 102], "dictoptionact": [52, 76, 84, 102], "dictwithdefaultreturn": [52, 76, 84, 102], "did": [59, 61, 62], "diff": 75, "diff_lookback_tim": [52, 71], "differ": [10, 17, 22, 25, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 46, 47, 52, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 74, 75, 78, 79, 80, 83, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102], "difficult": [84, 92], "digest_significance_opt": [52, 57], "digit": [30, 60, 74], "dim": [52, 56, 61, 84, 102], "dimens": [17, 31, 52, 56, 61, 62, 64, 65, 67, 73, 75, 76, 79, 96], "dimension": [32, 52, 56, 57, 59, 61, 64, 65, 72, 73, 75, 76], "dimensionless": [8, 30, 52, 67, 69, 71, 78], "dir": [52, 84, 97, 98, 99], "direct": [10, 15, 19, 29, 52, 55, 58, 65, 75, 77, 92, 94, 97], "direction_num": 75, "directli": [10, 15, 19, 21, 24, 28, 29, 40, 52, 57, 64, 65, 73, 75, 76, 78, 79, 84, 87, 88, 92, 93, 94, 99, 100, 101, 102], "directori": [10, 11, 18, 19, 21, 33, 37, 44, 45, 46, 47, 48, 52, 56, 67, 68, 74, 78, 79, 84, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102], "dirnam": [35, 36, 37, 38, 40], "disabl": [10, 21, 47, 60, 92, 93, 94, 97, 102], "disable_zoom": 73, "disadvantag": [84, 94], "disappear": 100, "discard": [32, 33, 37, 41, 57, 74, 100], "discard_last": [52, 57], "discont_threshold": 78, "discontinu": [59, 78], "discrep": 90, "discret": [52, 57, 59, 61, 64, 78, 84, 102], "discrimin": [13, 23], "discuss": [52, 57, 69, 77, 84, 91, 94, 95, 96, 101, 102], "disfavor": 96, "disgard": 28, "disjoint": 70, "disk": [28, 30, 47, 52, 56, 62, 65, 67, 69, 75, 79, 84, 90, 92, 97, 100, 102], "displac": 54, "displai": [73, 79, 84, 94, 97, 99, 101, 102], "disrupt": 10, "dist": [32, 35, 52, 56, 64, 71, 75, 91, 97], "dist_loc": 64, "dist_marg": 64, "dist_summari": [52, 71], "dist_weight": 64, "distanc": [8, 10, 15, 17, 21, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 44, 49, 52, 55, 57, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 84, 91, 93, 95, 96, 97], "distance_from_comoving_volum": [49, 52, 95, 96], "distance_from_r": [52, 71], "distance_ref": 36, "distance_scal": 66, "distance_std": 52, "distance_threshold": 75, "distance_to_chirp_dist": [7, 30, 52], "distance_to_redshift": [7, 30, 52], "distancesquar": 52, "distancetochirpdist": [7, 30, 49, 52], "distancetoredshift": [7, 30, 49, 52], "distant": [79, 93], "distinct": [52, 58, 84, 94, 100, 102], "distinguish": [52, 88], "distmarg": [61, 64], "distr": [10, 21, 28, 57, 93, 97], "distribut": [0, 10, 28, 30, 32, 35, 36, 38, 40, 46, 49, 52, 57, 61, 63, 64, 65, 70, 71, 73, 79, 85, 95, 97], "distribution_param": 52, "distributionfunctionfromfil": [0, 30, 52, 56], "distriubt": 56, "disttoz": 52, "diverg": 61, "divid": [1, 10, 22, 30, 32, 57, 59, 62, 74, 75, 84, 94, 102], "divis": 58, "dkl": 39, "dl": 71, "dlim": 52, "dlnz": [62, 65], "dlog_evid": 62, "dlogz": [34, 35, 36, 37, 39, 40, 61, 65, 96], "dlum_to_z": [52, 71], "dm_1dm_2": 56, "dmt": [28, 92, 97, 98, 99, 100], "dmu": 52, "do": [1, 9, 10, 11, 13, 18, 22, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "do_not_keep": [52, 79, 89], "do_pastro_calc": [52, 71], "doan": 61, "doc": [19, 32, 45, 75, 79, 90, 92, 93, 94, 97, 100, 101, 102], "docker": 81, "docstr": [19, 52, 67, 78], "document": [9, 15, 18, 29, 33, 37, 39, 43, 56, 64, 65, 67, 71, 75, 76, 78, 79, 85, 86, 90, 91, 93, 94, 95, 100, 101, 102], "documentm": [57, 77], "doe": [10, 19, 21, 42, 47, 52, 57, 58, 59, 61, 62, 63, 64, 65, 67, 73, 75, 76, 77, 78, 79, 84, 89, 90, 91, 94, 96, 97, 98, 100, 102], "doesn": [20, 35, 36, 55, 62, 73, 74, 76, 78, 79, 84, 92, 96], "dof": [24, 77, 94], "dog": 97, "doi": [13, 57], "doku": 97, "dokuwiki": 97, "domain": [32, 35, 52, 56, 59, 64, 66, 72, 74, 75, 76, 77, 78, 84, 85, 88, 94, 96, 97], "domain_arg": 78, "domin": [22, 32, 37, 42, 52, 64, 75, 83, 84, 87, 102], "don": [15, 38, 40, 52, 59, 62, 64, 65, 67, 74, 75, 76, 78, 79, 84, 90, 91, 94, 97, 100], "done": [22, 30, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 52, 56, 59, 62, 64, 65, 66, 67, 75, 78, 79, 84, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102], "dorrington": 57, "dot": [52, 76, 88], "doubl": [22, 52, 57, 58, 69, 72, 74, 76, 78, 94, 96, 97], "down": [57, 73, 76, 78, 84, 94, 97, 99], "down_flag1": [79, 100], "down_flag2": [79, 100], "download": [18, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 47, 74, 80, 92, 95, 96, 97, 98, 99], "download_fil": 67, "download_url": 88, "downsampl": [74, 80, 94], "downsample_factor": [59, 94], "downweight": 57, "dp": 52, "dphi": 78, "dphi220": 78, "dpi": 44, "dq": [1, 14, 30, 49, 57, 60, 64, 83, 89, 90, 96], "dq_dict": 57, "dq_file": 79, "dq_label": 79, "dq_pad": 74, "dq_seg_fil": 79, "dq_segment_nam": [1, 30], "dq_server": [1, 30], "dq_stat_info": 83, "dq_state": 57, "dq_valu": 57, "dqsegdb": [1, 14, 30, 52], "dqsegdb2": 52, "dqsegdb5": [28, 97], "dquad_mon1": [8, 30, 78], "dquad_mon2": [8, 30, 78], "dquadmon": 52, "dquadmon_from_lambda": [30, 49, 52], "dr": 56, "draft": 81, "drag": 73, "draw": [17, 32, 40, 52, 56, 64, 65, 71, 73, 95], "draw_flat_sampl": [52, 71], "draw_ifo": [61, 64], "draw_imf_sampl": [52, 71], "draw_lnm_sampl": [52, 71], "draw_sampl": [61, 64, 65], "draw_samples_from_bin": [61, 65], "draw_samples_from_config": [17, 52, 56], "draw_sky_tim": [61, 64], "draw_tim": [61, 64], "drawn": [17, 31, 35, 36, 40, 55, 56, 64, 65, 71, 73, 92, 95], "dref": 15, "drive": [79, 92], "driver": [46, 67], "drop": [65, 73, 84, 102], "drop_trailing_zero": [52, 73], "dsetnam": 67, "dt": [15, 71, 76, 78, 87, 88, 96], "dt0": 73, "dt1": 73, "dt_dz": 71, "dtc": 64, "dtc2": 64, "dtol": 76, "dtype": [17, 22, 52, 56, 57, 58, 59, 60, 64, 65, 67, 74, 76, 78, 79], "dtype_dict": [52, 78], "due": [10, 32, 42, 52, 55, 60, 71, 72, 76, 78, 97], "dummi": [5, 6, 30, 40, 43, 52, 61, 67], "dummysampl": [5, 6, 30, 43, 61, 65], "dump": [19, 30, 32, 52, 62, 65, 67, 79, 89, 92], "dump_pickle_to_hdf": [52, 67], "dump_stat": [52, 67], "duncan": [59, 73, 84], "duplic": [41, 43, 52, 76, 79, 84, 92, 94, 97, 99], "durat": [1, 10, 21, 24, 27, 28, 30, 32, 35, 52, 53, 57, 59, 60, 63, 68, 70, 72, 74, 75, 76, 78, 79, 80, 84, 87, 94, 96, 99, 102], "duration_bins_from_cli": [52, 68], "duration_threshold": 57, "dure": [28, 30, 34, 36, 59, 64, 65, 68, 83, 84, 92, 96, 97], "dxf": 11, "dylib": 52, "dyn": 96, "dyn_range_fac": 74, "dyn_range_factor": 72, "dynam": [10, 57, 74, 83, 84, 94, 97, 102], "dynesti": [2, 5, 6, 30, 34, 35, 36, 37, 40, 41, 43, 52, 61, 79], "dynesty_fil": [2, 41, 62], "dynestyfil": [2, 41, 61, 62], "dynestysampl": [5, 6, 30, 43, 61, 65], "dz": 71, "e": [1, 9, 15, 18, 19, 24, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 47, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 87, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102], "e0": 15, "e02dab8c": 97, "e1": [15, 64], "e1_e2__foo": 64, "e2": [15, 58, 64], "e3": 15, "e_psd": 36, "e_tdi_v2": 36, "each": [1, 10, 13, 19, 21, 22, 24, 25, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "earli": 10, "earth": [15, 35, 36, 42, 54, 55, 59, 75, 99], "earth_norm": 15, "earth_position_ssb": [52, 54], "earth_rot": 64, "earth_rotation_mod": 64, "eas": [22, 75], "easi": [22, 29, 32, 41, 67, 84], "easier": [58, 89, 92, 97, 100], "easiest": 18, "easili": [12, 64, 71, 79, 84, 90, 92, 99], "easy_instal": 48, "eccentr": [8, 30, 78], "eccentricfd": 87, "eccentricity_ord": [8, 30, 78], "eccentrictd": 87, "echo": [28, 45, 46, 47, 48, 95, 96, 97], "eclipt": 54, "eclipticlatitud": [8, 30, 35, 36, 52], "eclipticlatitude_lisa": 36, "eclipticlongitud": [8, 30, 35, 36, 52], "eclipticlongitude_lisa": 36, "edg": [28, 42, 52, 64, 68, 71, 77], "edit": [18, 47, 57, 67, 84, 86, 96, 97, 99], "editor": 97, "edu": [28, 69, 79, 84, 90, 92, 93, 94, 97, 98, 99, 100, 101, 102], "eff": [52, 56], "eff_dist": [52, 55], "eff_nsampl": 65, "effect": [1, 10, 12, 19, 30, 32, 39, 52, 55, 57, 59, 62, 65, 67, 72, 78, 84, 96, 97], "effective_dist": [52, 55], "effective_nsampl": [61, 62, 65], "effective_spin": [52, 67], "effectu": 9, "effici": [22, 39, 42, 52, 65, 74, 77, 84, 99], "effort": [29, 58], "effsnr": [52, 57], "eg": [1, 10, 28, 30, 45, 56, 62, 73, 75, 79], "eggbox": 64, "egrep": 97, "ehigh": [12, 52], "eigenvalu": 75, "eigenvector": 75, "einstein": 97, "einsteintelescopep1600143": [4, 30, 52, 72, 84, 94, 102], "either": [1, 10, 30, 39, 40, 41, 42, 45, 47, 51, 52, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 72, 73, 76, 77, 78, 79, 80, 84, 92, 93, 94, 95, 96, 97, 102], "el8": [18, 97], "element": [52, 56, 57, 62, 63, 64, 66, 67, 72, 73, 74, 75, 76, 78], "elementwis": 76, "eligomodel": [4, 30, 52, 72, 84, 94, 102], "eligoshot": [4, 30, 52, 72, 84, 94, 102], "elimin": 97, "ell": [32, 78], "ell_max": 78, "ellipsoid": 55, "elow": [12, 52], "els": [56, 59, 64, 67, 73, 76, 77, 78, 79, 87, 94], "elsewher": [57, 99], "em": [64, 84, 102], "em_bright_filt": 99, "email": [68, 81, 84], "emce": [2, 5, 6, 30, 31, 41, 43, 52, 61, 96], "emcee_fil": [2, 41, 62], "emcee_pt": [2, 5, 6, 30, 32, 33, 38, 39, 41, 43, 52, 61], "emcee_pt_fil": [2, 41, 62], "emceeensemblesampl": [5, 6, 30, 41, 43, 61, 65], "emceefil": [2, 41, 61, 62], "emceeptfil": [2, 41, 61, 62, 65], "emceeptsampl": [5, 6, 30, 43, 61, 65], "emphas": 79, "emploi": 97, "empti": [52, 56, 57, 59, 61, 67, 71, 76, 78, 79, 93, 97], "empty_lines_in_valu": 76, "en": [52, 58, 65, 87], "enabl": [10, 21, 22, 28, 37, 40, 42, 47, 52, 64, 67, 69, 73, 84, 90, 92, 94, 95, 96, 97, 101, 102], "enable_compressed_waveform": 78, "enable_plot": 65, "enable_zoom": 73, "encapsul": 79, "encas": 64, "enclos": [56, 73], "encod": [56, 57, 59, 65], "encompass": [32, 67, 78, 79], "encount": 84, "encourag": 59, "end": [1, 8, 10, 14, 21, 22, 24, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 44, 52, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 102], "end1": 57, "end2": 57, "end_frequ": [52, 78], "end_idx": 61, "end_index": [64, 65], "end_pad": [52, 100], "end_sampl": 44, "end_tim": [14, 24, 28, 52, 57, 60, 66, 67, 70, 74, 75, 76, 79, 87], "end_time_templ": 24, "endelementn": [52, 67], "endtim": [57, 79, 90], "energi": [49, 52, 59], "energy_coeffici": [49, 52], "enforc": [76, 79, 96], "engin": [43, 57, 58, 74, 88, 99], "english": 88, "enhanc": 97, "enivorn": 94, "enlarg": [39, 65], "enough": [1, 30, 32, 41, 65, 74, 76, 78, 84, 94, 96, 102], "ensembl": [61, 62, 65], "ensemble_compute_acf": [61, 65], "ensemble_compute_acl": [61, 65], "ensemble_read_raw_sampl": [61, 62], "ensemblemcmcburnintest": [52, 61, 65], "ensemblemcmcmetadataio": [2, 41, 61, 62], "ensemblemultitemperedmcmcburnintest": [52, 61, 65], "ensemblesampl": 65, "ensemblesupport": [5, 43, 61, 65], "ensur": [30, 52, 56, 57, 62, 64, 68, 70, 74, 76, 78, 79, 81, 84, 86, 91, 92, 94, 96, 97, 102], "ensure_directori": [52, 68], "ensure_hash": [52, 78], "ensure_one_opt": [52, 76], "ensure_one_opt_multi_ifo": [52, 76], "ensure_standard_filter_column": [52, 78], "enter": [47, 59, 64, 81], "enteredcurrentstatu": 97, "entir": [28, 32, 40, 78, 91, 94, 96], "entri": [19, 28, 56, 57, 67, 72, 75, 76, 79, 84, 90, 92, 96, 99, 102], "entropi": [49, 52, 65], "entry_class": [52, 79, 89], "entry_point": 88, "entrya": 75, "entur": [84, 97, 99], "enumer": 64, "env": [45, 47, 48, 94, 97], "envelop": 74, "environ": [18, 45, 46, 48, 52, 62, 64, 79, 90, 94, 96, 97, 99], "envisag": 100, "eo": [52, 69, 75, 84, 102], "eobnr": 52, "eobnrv2": [21, 28, 52, 87], "eobnrv2_rom": 87, "eobnrv2_rom_interp": 87, "eobnrv2hm": [21, 87], "eobnrv2hm_rom": 87, "eobnrv2hm_rom_interp": 87, "eobnrv2hmrd": [84, 102], "eobnrv2rd": [84, 102], "eos_index": 52, "eos_nam": 69, "eos_util": [49, 52], "ep": 64, "epoch": [52, 59, 64, 76, 78, 87, 88], "epoch_clos": [52, 76], "eprint": 57, "epsi": [2, 5, 6, 30, 41, 43, 52, 61, 63], "epsie_adaptive_from_config": [61, 63], "epsie_at_adaptive_from_config": [61, 63], "epsie_fil": [2, 41, 62], "epsie_from_config": [61, 63], "epsie_proposals_from_config": [61, 63, 65], "epsieadaptiveangular": [61, 63], "epsieadaptiveboundeddiscret": [61, 63], "epsieadaptiveboundednorm": [61, 63], "epsieadaptivenorm": [61, 63], "epsieadaptivenormaldiscret": [61, 63], "epsieangular": [61, 63], "epsieatadaptiveangular": [61, 63], "epsieatadaptiveboundednorm": [61, 63], "epsieatadaptivenorm": [61, 63], "epsieboundeddiscret": [61, 63], "epsieboundednorm": [61, 63], "epsiefil": [2, 41, 61, 62], "epsienorm": [61, 63], "epsienormaldiscret": [61, 63], "epsieptsampl": 65, "epsiesampl": [5, 6, 30, 43, 61, 65], "epsilon": [34, 35, 36, 38, 52, 54, 64], "eq": [52, 56, 57, 64, 69, 71, 72, 73], "equal": [17, 28, 30, 52, 55, 56, 57, 61, 62, 64, 67, 75, 76, 77, 78, 79, 84, 90, 97, 101, 102], "equat": [34, 52, 56, 69, 75], "equatori": 69, "equilibrium": 69, "equiv": 64, "equival": [30, 43, 56, 59, 67, 74, 76, 78, 79, 83, 84, 90, 92, 95, 97, 99], "equivel": 10, "er6": 97, "er6_gds_calib_strain": 97, "er7_harm_mean_asd": 10, "er8": [98, 99], "erd": [75, 84, 102], "erf": 56, "eric": 84, "err": [52, 64, 73, 79, 96, 97], "err_on_missing_detector": 64, "err_plu": 73, "errfil": 79, "error": [32, 33, 36, 37, 38, 40, 52, 53, 56, 57, 58, 61, 62, 64, 65, 67, 68, 71, 73, 76, 78, 79, 80, 81, 88, 92, 94, 96, 97, 99], "errorbar": 12, "especi": [89, 92], "essenti": [67, 75, 84], "estim": [1, 9, 13, 20, 29, 30, 32, 33, 34, 37, 38, 40, 42, 43, 49, 52, 56, 57, 59, 61, 62, 64, 65, 71, 73, 74, 75, 76, 78, 79, 84, 85, 91, 94, 97, 102], "estimate_mass_rang": [52, 75, 84], "estimate_nmcmc": [61, 65], "estimate_vt": [52, 71], "estimated_psd": 51, "et": [52, 56, 57, 59, 84], "eta": [38, 52, 67, 68, 69, 75, 84, 92, 102], "eta_from_mass1_mass2": [49, 52], "eta_from_q": [49, 52], "eta_from_tau0_tau3": [49, 52], "eta_mass1_to_mass2": [49, 52], "etajumpfac": 75, "etc": [10, 20, 28, 29, 38, 40, 41, 42, 47, 52, 57, 60, 65, 67, 71, 78, 79, 84, 91, 92, 94, 97, 99], "ethinca": [75, 84, 102], "ethinca_frequency_step": [84, 102], "ethinca_order_from_str": [52, 75, 84], "ethincaparam": 75, "ethincaparamet": [52, 75, 84], "eval": [52, 75, 84], "eval_pdf": [52, 71], "evalu": [30, 32, 52, 55, 56, 57, 61, 64, 65, 67, 71, 73, 77, 78, 89], "evaluate_test": [52, 61], "evec": [52, 75, 84], "evecscv": [52, 75, 84], "even": [10, 32, 34, 52, 56, 59, 61, 64, 66, 67, 76, 78, 92, 93, 96, 100], "evenli": 75, "event": [32, 34, 49, 52, 53, 59, 67, 71, 75, 79, 83, 85, 86, 94, 95, 96, 97, 100], "event1": [34, 64], "event1__data": 34, "event1__dec": 34, "event1__delta_tc": 34, "event1__mass": 64, "event1__model": [34, 64], "event1__ra": 34, "event1__tc": 34, "event1_event2__foo": 64, "event1_event2__mass": 64, "event1_inj": 34, "event1_relbin": 34, "event2": [34, 64], "event2__data": 34, "event2__ddec": 34, "event2__ddec_mean": 34, "event2__ddec_var": 34, "event2__dec": 34, "event2__delta_tc": 34, "event2__dra": 34, "event2__dra_mean": 34, "event2__dra_var": 34, "event2__model": [34, 64], "event2__ra": 34, "event2__tc": 34, "event2_inj": 34, "event2_relbin": 34, "event2dec": 34, "event_id": [67, 79], "event_loc": 57, "event_v": 57, "eventapi": [33, 37], "eventmanag": [52, 57], "eventmanagercoher": [52, 57], "eventmanagermultidet": [52, 57], "eventmanagermultidetbas": 57, "eventmgr": [49, 52], "eventmgr_cython": [49, 52], "eventr": [52, 71], "ever": 77, "everi": [28, 30, 32, 42, 44, 52, 56, 57, 59, 62, 63, 64, 65, 67, 72, 73, 75, 76, 78, 79, 84, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102], "everyth": [30, 62, 84, 92], "everytim": [95, 96], "evid": [39, 49, 52, 62, 64, 65], "evidence_toler": 65, "evolut": [52, 61, 65, 78, 85], "evolv": [31, 65], "ex": [52, 53, 57, 60, 76, 78, 79, 84, 90, 92, 93, 94, 101], "exact": [28, 32, 76, 79, 84, 91, 97], "exactli": [71, 76, 83, 97], "examin": 43, "exampl": [8, 10, 11, 12, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 35, 36, 38, 39, 41, 42, 44, 47, 48, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 73, 76, 78, 79, 80, 81, 83, 87, 88, 91, 93, 94, 97, 98, 99, 101, 102], "example_geom_aligned_bank": 84, "example_hdf_post": 91, "example_psd": 51, "exce": [30, 32, 57, 64, 65, 84, 102], "exceed": [69, 94], "except": [22, 27, 30, 34, 56, 57, 60, 62, 64, 65, 67, 68, 72, 78, 79, 84, 92, 94, 102], "excess": [1, 30, 84, 94, 102], "excis": [64, 76], "exciz": 76, "exclud": [48, 56, 62, 65, 73, 78, 79], "exclude_region": 73, "excludestr": [52, 79, 89], "exclue_region": 73, "exclus": [1, 30, 79, 84, 94, 102], "exe1": 92, "exe2": 92, "exe3": 92, "exe5": 92, "exe_class": [79, 101], "exe_nam": [79, 94, 102], "exe_tag": 79, "exec_nam": 79, "exec_sites_str": [52, 79, 89], "execut": [10, 21, 22, 28, 30, 44, 45, 47, 52, 57, 58, 64, 66, 73, 74, 75, 76, 79, 84, 88, 89, 97, 98], "executable_fil": 73, "executable_nam": [73, 92], "executables_mast": 101, "executbl": [79, 101], "execute_cached_fft": [52, 74], "execute_cached_ifft": [52, 74], "execute_nod": [52, 79, 89], "exenam": 92, "exename1": 92, "exename2": 92, "exept": [10, 58], "exercis": 84, "exhaust": 10, "exhibit": 87, "exist": [10, 21, 22, 24, 25, 28, 30, 48, 52, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 71, 73, 75, 76, 78, 79, 84, 85, 90, 91, 92, 97, 98, 99, 101], "exit": [32, 52, 62, 65, 79, 84, 94, 95, 96, 97, 99, 101, 102], "exitcod": [79, 97], "exlus": 79, "exp": [57, 64, 71, 87, 88], "exp_fac": 71, "exp_fit": [83, 97], "exp_fit_csnr": 83, "expand": [42, 52, 59, 74, 92, 97, 99], "expans": 75, "expect": [17, 29, 32, 35, 36, 52, 55, 56, 57, 61, 64, 67, 71, 73, 76, 78, 79, 80, 83, 84, 89, 90, 91, 96, 97, 100], "expected_color": 73, "expected_log_r": 57, "expected_paramet": 73, "expected_parameters_color": 73, "expected_parameters_from_cli": [52, 61], "expected_valu": 73, "expend": 58, "expens": [32, 59, 60, 63, 94], "experi": [52, 71], "experiment": 91, "expert": 97, "expfit": 57, "expfitcombinedsnr": [52, 57], "expfitstatist": [52, 57], "expicitli": 78, "expir": [57, 97], "expire_vector": [52, 57], "explain": [16, 18, 28, 45, 84, 97, 100], "explainm": 77, "explan": [30, 71], "explicit": [58, 64, 79, 84], "explicit_depend": 79, "explicitli": [15, 42, 47, 52, 57, 77, 78, 100], "exploit": 79, "explor": [15, 40, 42, 84, 97], "expon": [7, 30, 49, 52, 64, 94, 102], "exponenti": [57, 71, 83], "exponential_fit": 57, "exponential_fit_1": 57, "exponential_fitalpha": [52, 57], "export": [35, 36, 46, 47, 48, 58, 97, 99], "export_double_wisdom_to_filenam": [52, 58], "export_single_wisdom_to_filenam": [52, 58], "expos": [52, 55, 62], "express": [1, 30, 60, 84, 90, 94, 102], "extend": [40, 42, 52, 57, 58, 67, 71, 73, 79, 94, 100], "extendedinterpol": [76, 79], "extens": [42, 52, 57, 67, 73, 76, 78, 79, 89], "extent": [57, 59, 73, 79], "extern": [0, 10, 30, 39, 42, 43, 49, 52, 59, 78, 79], "external_cal": 79, "external_func_fromfil": [0, 30, 56], "external_inject": 10, "externalpython": 87, "extra": [1, 30, 35, 45, 57, 62, 65, 67, 78, 79, 84, 94, 95, 97, 102], "extra_arg": [52, 65, 68, 78], "extra_args_from_config": [61, 64], "extra_args_pars": [61, 62], "extra_attr": 75, "extra_dataset": 75, "extra_kwd": 65, "extra_str": 67, "extract": [52, 57, 62, 65, 71, 72, 73, 74, 78, 79, 96], "extract_ifo": [52, 73], "extract_posterior": [79, 95, 96], "extract_trig_properti": [52, 73], "extrapol": [51, 52, 57, 69, 72, 76], "extrem": [52, 75], "extrema": 75, "extrins": [40, 64, 96], "exttrig_fil": 79, "exttrig_seg": 99, "exucut": 79, "f": [1, 8, 10, 21, 24, 28, 30, 32, 36, 37, 38, 40, 52, 55, 56, 59, 64, 67, 71, 72, 73, 74, 75, 77, 78, 84, 87, 88, 92, 93, 94, 97, 102], "f0": [52, 56, 59, 75, 78, 84, 92, 102], "f1": [15, 59, 76], "f2": [15, 59, 76, 97], "f4": 67, "f8": [56, 67], "f_": [72, 78], "f_0": 78, "f_210": 78, "f_220": 78, "f_bklisco": [49, 52], "f_c": 74, "f_cro": 55, "f_cross": 57, "f_cutoff": 75, "f_decai": 78, "f_dist": 52, "f_end": 68, "f_erd": [49, 52], "f_final": [1, 8, 30, 35, 78, 84, 94, 102], "f_final_func": [8, 30, 78], "f_frd": [49, 52], "f_full": 64, "f_hi": 64, "f_high": 72, "f_isco": 52, "f_lightr": [49, 52], "f_lmn": 78, "f_lo": 64, "f_low": [52, 72, 75, 77, 84, 87, 102], "f_lower": [8, 15, 23, 27, 30, 32, 34, 35, 36, 37, 38, 40, 52, 57, 64, 66, 67, 78, 87, 88, 96], "f_lrd": [49, 52], "f_max": [84, 102], "f_min": 73, "f_plu": [55, 57], "f_ref": [8, 30, 32, 34, 35, 52, 78, 96], "f_schwarzisco": [49, 52], "f_seobnrv2_peak": [52, 67], "f_seobnrv4_peak": [52, 67], "f_start": 78, "f_upper": [75, 84, 102], "fabrycki": 56, "fac": 57, "facil": 10, "factor": [1, 9, 15, 30, 32, 42, 52, 55, 56, 57, 58, 59, 61, 64, 65, 66, 71, 73, 74, 75, 77, 78, 79, 83, 84, 91, 94, 96, 97, 102], "fail": [1, 30, 35, 52, 57, 62, 64, 75, 78, 79, 81, 84, 91, 94, 95, 96, 102], "fail_criterion": 73, "fail_if_not_single_fil": 79, "fail_on_error": 79, "failedwaveformerror": [52, 64, 78], "failur": [60, 67, 79, 90, 95, 96, 97, 99], "fairhurst": 57, "faith": 9, "faithsim": 21, "fake": [1, 30, 32, 34, 35, 74, 79, 80, 84, 94, 95, 102], "fake_strain": 97, "fake_strain_filter_dur": [1, 30, 84, 94, 102], "fake_strain_flow": [1, 30, 84, 94, 102], "fake_strain_from_fil": [84, 94, 102], "fake_strain_sample_r": [1, 30, 84, 94, 102], "fake_strain_se": [84, 94, 102], "fall": [51, 52, 57, 78, 79, 97], "falloff": [57, 71], "fals": [15, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 92, 94, 97, 102], "familiar": 91, "fap": [60, 79], "far": [57, 65, 71, 78, 79, 84, 92, 97], "far_limit": 57, "far_out": 57, "farr": 65, "fashion": [52, 97], "fast": [22, 52, 58, 67, 78, 97], "faster": [32, 42, 52, 64, 66, 75, 78, 84, 87], "fastest": 77, "fastest_power_chisq_at_point": [52, 77], "favor": 64, "favorit": 97, "fb": 55, "fbin": 64, "fbin_ind": 64, "fc": [15, 64, 74], "fc0": [30, 74], "fc2": 64, "fcn": [52, 67], "fcross": 55, "fd": [61, 78, 85, 88], "fd_approxim": [52, 78, 87], "fd_damped_sinusoid": [52, 78], "fd_data_from_strain_dict": [61, 64], "fd_decompress": [52, 78], "fd_output_vector": [52, 78], "fd_segment": 72, "fd_sine_gaussian": [52, 78], "fd_taper": [52, 78], "fd_to_td": [52, 78], "fd_waveform_mode_approxim": [52, 64, 78], "fdata": 27, "fdomain": 64, "fdomaincbcgener": [52, 64, 78], "fdomaincbcmodesgener": [52, 78], "fdomaindetframegener": [52, 64, 78], "fdomaindetframemodesgener": [52, 78], "fdomaindetframetwopolgener": [52, 78], "fdomaindetframetwopolnorespgener": [52, 78], "fdomaindirectdetframegener": [52, 64, 78], "fdomainfreqtauringdowngener": [52, 78], "fdomainmassspinringdowngener": [52, 78], "featur": [8, 24, 30, 34, 40, 43, 45, 46, 52, 57, 67, 76, 78, 79, 84, 92, 97, 99], "fed": [10, 21, 96, 99], "fedg": 64, "feedback": 29, "feobnrv2rd": 52, "fermi": 79, "fermi_core_tail_model": [52, 79, 89], "fermi_si": 79, "fetch": [57, 79, 97], "few": [14, 22, 32, 37, 44, 52, 57, 59, 64, 66, 67, 74, 76, 78, 79, 92, 97, 100], "fewer": [62, 64], "ff": 71, "ffmpeg": 31, "fft": [1, 23, 28, 30, 35, 49, 52, 72, 74, 77, 78, 85, 87, 94, 97], "fft_backend": 94, "fft_callback": [49, 52], "fft_class": [22, 74], "fft_group": 58, "fft_option": 58, "fft_transpos": [52, 58], "fft_transpose_fftw": [52, 58], "ffting": [78, 94], "fftw": [22, 35, 45, 47, 49, 52, 94], "fftw_input_double_wisdom_fil": 94, "fftw_input_float_wisdom_fil": 94, "fftw_measure_level": 94, "fftw_output_double_wisdom_fil": 94, "fftw_output_float_wisdom_fil": 94, "fftw_prune": [49, 52], "fftw_pruned_cython": [49, 52], "fftw_threads_backend": 94, "fftwf": 58, "fg_file": [71, 79], "fg_n_louder": 57, "fg_name": 79, "fgmc": [52, 71], "fgmc_function": [49, 52], "fgmc_laguerr": [49, 52], "fgmc_plot": [49, 52], "fhigh": [59, 84], "fi": [67, 71, 95, 96], "fiduci": [64, 78, 87, 88], "fiducial_height": 73, "fiducial_param": 64, "fiducial_width": 73, "field": [1, 30, 52, 62, 64, 65, 66, 67, 73, 78, 84, 94, 100, 102], "field_kwarg": 67, "fieldarg": 78, "fieldarrai": [30, 52, 56, 62, 64, 66, 67, 73, 78], "fieldnam": [17, 52, 56, 67, 78], "fifo": 52, "fig": [12, 17, 52, 73], "fig_kwd": 73, "figsiz": [14, 17], "figucial_param": 64, "figur": [14, 15, 17, 22, 52, 62, 65, 73, 78, 87, 88, 96], "file": [1, 9, 11, 15, 16, 19, 27, 31, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 52, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 89], "file1": 92, "file2": 92, "file3": 92, "file_column": 52, "file_exist": 79, "file_input_opt": [52, 79, 89], "file_list": 73, "file_list_fil": 73, "file_nam": [67, 76], "file_path": 56, "file_substr": 79, "file_typ": 62, "file_url": 79, "filea": [79, 92], "fileb": [79, 92], "filec": [79, 92], "filedata": [52, 67], "filehandl": [52, 78], "filelist": [52, 67, 73, 79, 89, 90, 93, 94, 101, 102], "filenam": [27, 28, 30, 51, 52, 56, 57, 58, 60, 61, 62, 65, 66, 67, 72, 73, 78, 79, 84, 90, 92, 94, 101], "filename_1": [79, 92], "filename_2": [79, 92], "fileobj_from_path": 79, "filepath": [52, 73], "files_chang": [52, 57], "filesystem": [18, 47, 60, 95, 96, 97], "filetmpltbank": 94, "filetyp": [41, 62], "filex": 92, "fill": [52, 59, 64, 73, 76, 84, 92], "fill_color": 73, "fillcolor": 73, "filled_tim": [52, 57], "fillvalu": [73, 79], "filo": 60, "filt": 72, "filter": [1, 10, 12, 21, 27, 28, 29, 30, 32, 33, 35, 37, 42, 49, 52, 64, 66, 67, 70, 71, 72, 74, 76, 77, 78, 79, 80, 84, 85, 87, 96, 97, 101, 102], "filter_approxim": [52, 78], "filter_bin_lo_hi": [52, 71], "filter_dur": 70, "filter_flow": 64, "filter_func": 67, "filter_inj_onli": 74, "filter_injections_by_mass": [49, 52], "filter_length": 78, "filter_ord": 59, "filter_psd": [52, 76], "filter_rank": 67, "filter_templ": [52, 71], "filter_threshold": 67, "filter_tmplt_mchirp": [52, 71], "filter_zpk": [52, 59], "filterbank": [52, 78], "filterbankskymax": [52, 78], "filtered_data": 59, "filtered_seri": [59, 76], "final": [1, 19, 30, 32, 34, 41, 43, 45, 52, 56, 61, 64, 65, 74, 75, 76, 78, 79, 84, 94, 97, 98, 100, 102], "final_bg_file_list": 79, "final_mass": [52, 56, 78], "final_mass_from_f0_tau": [49, 52, 56], "final_mass_from_initi": [49, 52], "final_result": [52, 79, 89, 92], "final_spin": [52, 56, 78], "final_spin_from_f0_tau": [49, 52, 56], "final_spin_from_initi": [49, 52], "finalize_ev": [52, 57], "finalize_template_ev": [52, 57], "finalz": 65, "find": [1, 19, 30, 52, 56, 57, 60, 61, 64, 67, 69, 71, 72, 74, 75, 76, 78, 79, 84, 85, 89, 90, 92, 94, 97, 98, 99, 102], "find_all_output_in_rang": [52, 79, 89], "find_closest_calculated_frequ": [52, 75, 84], "find_dq_noise_r": [52, 57], "find_dq_state_by_tim": [52, 57], "find_event_in_catalog": [52, 53], "find_fit": [52, 57], "find_indices_in_injection_interv": [52, 66], "find_injections_in_hdf_coinc": [52, 79, 89], "find_kd": [52, 57], "find_max_and_min_frequ": [52, 75, 84], "find_minimum": 75, "find_output": [52, 79, 89], "find_output_at_tim": [52, 79, 89], "find_output_in_rang": [52, 79, 89], "find_output_with_ifo": [52, 79, 89], "find_output_with_tag": [52, 79, 89], "find_output_without_tag": [52, 79, 89], "find_outputs_in_rang": [52, 79, 89], "find_point_bin": [52, 75, 84], "find_trigger_fil": [52, 67], "find_trigger_files_from_cli": [52, 67], "find_trigger_valu": [52, 72, 84], "find_variable_start_frequ": [52, 78], "find_xi_extrema_brut": [52, 75, 84], "findchirp": [13, 57, 74, 77, 94, 98], "findchirp_chirptim": [52, 78], "findchirp_cluster_over_window": [52, 57], "findchirp_cluster_over_window_cython": [52, 57], "findchirpsp": 94, "findtrig": 57, "fine": [35, 64, 78, 79, 84, 95, 96, 97, 102], "finish": [30, 32, 62, 92, 95, 96], "finit": [52, 62, 80], "fir": [59, 76, 85], "fir_zero_filt": [23, 52, 59, 76], "first": [1, 8, 17, 18, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 47, 48, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 86, 87, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102], "first_phas": [52, 58], "first_update_min_ncal": 65, "first_update_min_neff": 65, "fisher": 56, "fisher_ski": [0, 30, 56], "fisherski": [0, 30, 52, 56], "fit": [9, 39, 42, 52, 56, 57, 59, 64, 68, 69, 71, 72, 76, 78, 79, 83, 84, 96, 97], "fit_above_thresh": [52, 57], "fit_by_templ": 83, "fit_exponenti": 57, "fit_fil": 57, "fit_fn": [52, 57], "fit_funct": 57, "fit_threshold": 57, "fits_by_tid": 57, "fits_fil": 79, "fix": [10, 28, 30, 32, 38, 40, 41, 42, 43, 45, 51, 52, 55, 56, 57, 62, 64, 65, 67, 71, 79, 91, 99, 101], "fixed_ifar": 57, "fixed_ifo": 79, "fixed_sampl": [0, 30, 40, 56], "fixedsampl": [0, 30, 49, 52], "fixm": [66, 71, 79, 84, 90, 94, 101], "fl": 55, "flag": [1, 8, 10, 25, 30, 52, 55, 59, 60, 64, 68, 78, 79, 83, 84, 85, 86, 90, 92, 96, 97], "flag_1": 100, "flag_2": 100, "flag_at_tim": [52, 60], "flag_fil": 79, "flag_nam": [52, 79], "flag_names_to_bitmask": [25, 52, 60], "flag_stat": 60, "flag_str": 52, "flaki": 67, "flat": [10, 17, 52, 71, 84], "flat_un": [4, 30, 52, 72, 84, 94, 102], "flateobnrv2": 21, "flateobnrv2hm": 21, "flatf2": 21, "flatimrc": 21, "flatlambdacdm": 52, "flatseobnrv1": 21, "flatt1": 21, "flatt2": 21, "flatt3": 21, "flatt4": 21, "flatten": [15, 41, 62], "flattrd": 21, "flen": [23, 50, 51, 68, 72, 77, 87], "flexibl": [67, 84, 92, 99], "flight": [57, 91], "flip": [27, 100], "flmn": 78, "float": [17, 22, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 94], "float1": 65, "float2": 65, "float32": [22, 57, 58, 66, 67, 72, 74, 76, 77], "float64": [22, 54, 60, 61, 66, 72, 74, 76], "floor": 76, "flow": [1, 23, 30, 35, 45, 50, 51, 59, 68, 72, 75, 76, 78, 80, 84, 87, 88, 94, 102], "flower": 78, "flowsampl": 65, "flr": 55, "flush": 11, "fly": [67, 97], "fmap": 75, "fmax": [75, 78, 94], "fmax_theor": 75, "fmin": [64, 75, 78], "fmt": [12, 52, 73], "fname": [27, 60, 67, 71, 79], "fname_bank": 71, "fname_statmap": 71, "fo": [52, 94, 102], "foat": 66, "focu": 84, "fold": [64, 79], "fold1": 57, "fold2": 57, "folder": [10, 21, 60, 65, 71, 99], "follow": [10, 11, 15, 19, 21, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 52, 55, 56, 59, 61, 64, 65, 66, 67, 73, 74, 75, 79, 80, 81, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "followup": [49, 52, 59, 79], "followup_event_signific": [52, 59], "followup_info": 59, "followups_fil": 79, "follw": 97, "font": 73, "foo": [34, 43, 56, 61, 64, 67, 79, 92], "foo_mean": 56, "foo_var": 56, "foobar": 76, "fooo": 67, "forc": [31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 62, 64, 78, 87, 88, 96], "force_precision_to_match": [52, 76], "force_r": 52, "force_update_cach": [60, 74], "fore_n_loud": 57, "fore_stat": 57, "foreach": 73, "foreground": [57, 67, 71, 79, 91], "foreground_censor": 97, "foregroundev": [52, 71], "foregroundtrigg": [52, 67], "foreseen": [84, 93], "fork": [45, 47], "form": [21, 52, 57, 61, 64, 69, 79, 83, 84, 88, 97, 99, 102], "formal": [61, 69], "format": [1, 10, 15, 19, 24, 30, 36, 41, 51, 52, 53, 56, 57, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 75, 76, 78, 79, 80, 81, 84, 87, 88, 91, 92, 93, 94, 97, 100, 102], "format_attr": [61, 62], "format_descript": [52, 75, 84], "format_lmn": [52, 78], "format_opt": [52, 75, 84], "format_output": [49, 52], "format_str": 73, "format_valu": [52, 73], "formatt": 52, "formattim": [49, 52], "former": [62, 84, 95, 96], "formula": [17, 52, 75, 84, 102], "forum": 75, "forward": [18, 52, 58, 94], "foucart": [52, 69], "foucart18": [52, 69], "fouerier": 78, "found": [13, 28, 29, 32, 48, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 71, 72, 73, 75, 76, 78, 79, 84, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99], "found_after_veto": 73, "found_d": 52, "found_idx": 73, "found_inj": 73, "found_mchirp": 52, "found_missed_fil": 73, "foundmiss": 79, "four": [10, 13, 21, 32, 67, 80, 97], "fourier": [22, 58, 59, 72, 76, 78, 87], "fourier_seg": [52, 72, 74], "fourth": 59, "fp": [15, 30, 61, 62, 64, 65, 67, 78], "fp2": 64, "fp_all": 62, "fp_sq_approx": 72, "fp_sq_numer": 72, "fpath": 76, "fpeak": [87, 88], "fplu": 55, "frac": [52, 56, 59, 64, 72], "frac_remain": 39, "fraction": [17, 56, 57, 59, 62, 65, 71, 75, 78, 79, 91, 94], "frago": 71, "frame": [1, 17, 19, 27, 28, 30, 31, 33, 35, 36, 37, 38, 40, 44, 49, 52, 54, 55, 64, 65, 66, 74, 78, 79, 84, 85, 89, 90, 92, 94, 96, 97, 98, 99, 100, 102], "frame_axi": [8, 30, 78], "frame_cach": [1, 30, 84, 94, 102], "frame_fil": [1, 25, 30, 60, 79, 84, 94, 102], "frame_path": [25, 52, 60], "frame_siev": [1, 30, 84, 94, 102], "frame_src": [60, 74], "frame_step": 44, "frame_typ": [1, 28, 30, 60], "framefil": [79, 90], "framel": 47, "frametyp": [79, 90], "francesco": 84, "frang": [12, 52, 59, 76], "frank": 84, "frd": [52, 84, 102], "free": [41, 57], "freedman": 61, "freedom": [57, 77, 94], "freq": [1, 12, 30, 52, 59, 64, 72, 74, 75, 76, 78, 84, 94, 102], "freq_arr": 72, "freq_data": 72, "freq_from_final_mass_spin": [49, 52], "freq_lin": 74, "freq_resolution_for_templ": [52, 78], "freq_tau_approxim": 78, "freqfunc": 52, "freqlmn_from_other_lmn": [49, 52], "freqseri": 78, "freqstep": 75, "frequenc": [1, 8, 10, 12, 13, 15, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 51, 52, 55, 56, 59, 62, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 88, 94, 96, 97, 98, 101, 102], "frequency_cutoff_from_nam": [49, 52], "frequency_from_polar": [52, 78, 87], "frequency_list": 75, "frequency_noise_from_psd": [52, 70, 84], "frequency_to_veloc": [49, 52], "frequencyseri": [22, 49, 52, 58, 59, 62, 64, 70, 72, 73, 74, 75, 77, 78, 88], "frequencyseriesseri": 70, "frequeni": 78, "fresh": 45, "freuqenc": 88, "from": [1, 10, 11, 13, 14, 15, 18, 19, 22, 25, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 101, 102], "from_argpars": [52, 75, 84], "from_arrai": [52, 67], "from_cli": [49, 52, 57, 58, 66, 72, 74, 75, 76, 77, 84], "from_cli_multi_ifo": [52, 64, 66, 72, 74, 84], "from_cli_single_ifo": [52, 66, 72, 74, 84], "from_config": [30, 34, 43, 49, 52, 56, 61, 63, 64, 65, 74], "from_hdf": [52, 78], "from_inject": [34, 64], "from_kwarg": [52, 62, 67], "from_ligolw_t": [52, 67], "from_multi_ifo_interfac": [52, 57], "from_multi_segment_list": [52, 79, 89], "from_numpy_arrai": [52, 72, 84], "from_path": [52, 79, 89], "from_pregenerated_lcf_fil": 90, "from_record": [52, 67], "from_segment_list": [52, 79, 89], "from_segment_list_dict": [52, 79, 89], "from_segment_xml": [52, 79, 89], "from_str": [51, 52, 72, 84], "from_subnam": [61, 64], "from_txt": [51, 52, 72, 84], "from_unit_hypercub": [61, 65], "from_xml": [52, 72, 84], "fromarrai": 67, "fromfil": [0, 30, 52, 56], "fromrecord": 67, "front": [58, 81, 84, 86, 97], "frozen": 78, "frozen_location_arg": [52, 78], "frozen_param": [52, 78], "frquenci": 78, "fs0": [30, 74], "fs_page_s": 67, "fs_persist": 67, "fs_strategi": 67, "fs_threshold": 67, "fsdt": 79, "fseri": [59, 72, 78], "fstat": 57, "fstimeshift": [52, 78], "fstimeshift32": [52, 78], "ftype": 64, "fudg": 78, "fudge_length": 78, "fudge_min": 78, "fulfil": 43, "full": [16, 28, 29, 30, 37, 38, 52, 56, 58, 64, 67, 72, 75, 76, 78, 79, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100], "full_data": [79, 94, 97], "full_ethinca": 75, "full_fil": 71, "full_filt": 72, "full_matched_filter_and_clust": [52, 59], "full_matched_filter_and_cluster_fc": [52, 59], "full_matched_filter_and_cluster_symm": [52, 59], "full_matched_filter_thresh_onli": [52, 59], "fullf": 71, "fulli": [32, 79, 92, 96], "fullinj": 97, "fullnam": [61, 64], "fullseg": 79, "func": [52, 66, 71], "func1": 52, "func2": 52, "func_api": [49, 52], "funct": 75, "function": [1, 4, 8, 14, 15, 17, 19, 30, 34, 36, 39, 40, 41, 42, 43, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102], "function_nam": 88, "functionlib": [52, 67], "fundament": 52, "funtion": [52, 61], "fupper": [75, 84], "fupper1": 75, "fupper2": 75, "further": [10, 30, 41, 42, 56, 57, 64, 72, 76, 84, 101], "fuse_correl": 77, "futur": [24, 28, 52, 54, 55, 75, 79, 91, 94, 96], "fx": [55, 59], "fy": 55, "g": [9, 15, 18, 19, 24, 25, 30, 33, 41, 42, 43, 47, 52, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 71, 74, 75, 76, 78, 79, 81, 84, 87, 90, 92, 94, 96, 97, 99, 100, 101, 102], "g1": [15, 25], "g1_rds_c01_l3": 25, "g_": 78, "g_i": 64, "gain": [1, 10, 30, 42, 59, 74, 84, 94, 102], "galact": 72, "game": [5, 6, 30, 43, 52, 61], "gamesampl": [5, 6, 30, 43, 61, 65], "gamma": [29, 52, 64, 71, 75, 84, 99, 102], "gamma0": [75, 84, 102], "gammav": 75, "gantt": 99, "gap": [28, 84, 90, 92, 94, 97, 98, 99], "garaunte": 78, "garbag": 92, "gate": [1, 30, 49, 52, 64, 76, 78, 79, 80, 84, 94, 102], "gate_and_paint": [52, 74], "gate_data": [52, 74], "gate_fil": 79, "gate_indic": [61, 64], "gate_overwhitened_data": [61, 64], "gate_param": 74, "gated_gaussian_margpol": [3, 30, 64], "gated_gaussian_nois": [3, 30, 52, 61], "gatedgaussian": 64, "gatedgaussianmargpol": [3, 30, 61, 64], "gatedgaussiannois": [3, 30, 61, 64], "gatefunc": 64, "gates_from_cli": [52, 64, 74], "gatewai": [73, 79, 93, 94, 101], "gather": [64, 84, 93, 94, 96, 99, 101, 102], "gating_fil": [74, 84, 94, 102], "gating_veto_window": 67, "gaurante": 91, "gaussian": [0, 1, 17, 30, 32, 34, 35, 39, 42, 49, 51, 52, 57, 64, 66, 77, 78, 83, 84, 85, 94, 95, 96, 102], "gaussian_kd": [56, 73], "gaussian_nois": [3, 30, 32, 37, 42, 52, 61], "gaussiannois": [3, 30, 32, 42, 61, 64], "gbm": 79, "gcr": 55, "gd": [28, 97, 98, 99, 100], "gelman": 61, "gelman_rubin": [49, 52], "genener": 78, "gener": [1, 8, 9, 15, 16, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 43, 47, 49, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 79, 83, 85, 88, 90, 92, 101], "generalis": 99, "generate_anstar_3d_lattic": [52, 75, 84], "generate_asd_plot": [52, 73], "generate_hexagonal_lattic": [52, 75, 84], "generate_inject": 66, "generate_inverse_map": [52, 75, 84], "generate_map": [52, 75, 84], "generate_overlapping_psd": [52, 72, 84], "generate_short_inj_from_inj": [52, 66], "generate_snr_plot": [52, 73], "generate_tc_prior": [52, 79, 89], "generate_triggered_seg": [52, 79, 89, 100], "generate_with_delta_f_and_max_freq": [52, 78], "generator_class": 64, "geo": [4, 30, 52, 72, 84, 94, 102], "geo_to_lisa": [7, 30, 52, 54], "geo_to_ssb": [7, 30, 52, 54], "geocent": [1, 30, 57], "geocent_end_tim": 28, "geocent_tim": 73, "geocentr": [15, 28, 52, 54, 55, 57, 78], "geodet": 55, "geohf": [4, 30, 52, 72, 84, 94, 102], "geom_aligned_bank": [79, 84], "geom_nonspinbank": 79, "geometr": 65, "geotolisa": [7, 30, 49, 52], "geotossb": [7, 30, 49, 52], "get": [1, 14, 15, 28, 30, 32, 33, 37, 43, 47, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 84, 87, 90, 94, 97, 99, 100, 102], "get_active_seg": [52, 67], "get_all_subkei": [52, 67], "get_antenna_dist_factor": [52, 73], "get_area": [49, 52], "get_arrays_from_fil": [52, 56], "get_available_detector": [15, 52, 55], "get_available_lal_detector": [52, 55], "get_available_space_detector": [52, 55], "get_backend": [22, 52, 58], "get_backend_modul": [52, 58], "get_backend_nam": [22, 52, 58], "get_bank_properti": [52, 75, 84], "get_bankfile_arrai": [52, 67], "get_beta_sigma_from_aligned_spin": [49, 52], "get_bg_pdf": [52, 71], "get_cached_bin_layout": [52, 77], "get_cached_pow2": [52, 77], "get_calibration_files_o1_o2_o3": [52, 74], "get_cbrt": [52, 78], "get_chirp_param": [52, 75, 84], "get_chisq_from_file_choic": [52, 67], "get_cli_opt": [52, 79, 89, 92], "get_code_version_numb": [52, 73], "get_coinc_index": [52, 57], "get_coinc_snr": [52, 73], "get_coinc_trigg": [52, 57], "get_coincfile_arrai": [52, 67], "get_column": [52, 67], "get_command_lin": [52, 79, 89], "get_common_cbc_transform": [49, 52], "get_common_paramet": [61, 62], "get_conv_param": [52, 75, 84], "get_corecollapse_bounc": [52, 78], "get_cosmologi": [52, 71], "get_cov_param": [52, 75, 84], "get_covaried_param": [52, 75, 84], "get_ctyp": [52, 71], "get_ctypes_librari": [49, 52], "get_current_stat": [61, 64], "get_cutoff_indic": [52, 59, 64], "get_data": [52, 61, 64, 67], "get_data_times_for_job": [52, 79, 89], "get_dckernel": [52, 78], "get_decompressed_waveform": [52, 78], "get_default_kwd": [61, 65], "get_delta_f": [52, 76], "get_delta_t": [52, 76], "get_diagnostic_plot": [52, 79, 89], "get_dur": [52, 76], "get_el": 73, "get_embedded_config": [52, 73], "get_end_tim": [52, 67, 76], "get_env": 84, "get_eo": [49, 52], "get_epoch": [52, 76], "get_epsie_adaptation_set": [61, 63], "get_epsie_discrete_successive_set": [61, 63], "get_ethinca_ord": [52, 75, 84], "get_far": [52, 57], "get_fd_det_waveform": [52, 64, 78], "get_fd_det_waveform_sequ": [52, 78], "get_fd_from_final_mass_spin": [52, 78], "get_fd_from_freqtau": [52, 78], "get_fd_gener": [52, 78], "get_fd_waveform": [23, 27, 42, 52, 78, 87], "get_fd_waveform_from_td": [52, 78], "get_fd_waveform_mod": [52, 78], "get_fd_waveform_sequ": [52, 78], "get_fil": [52, 67], "get_file_hash": [52, 57], "get_file_typ": [61, 62], "get_final_freq": [49, 52], "get_flag": [52, 58], "get_flag_segments_fil": [52, 79, 89, 100], "get_fn_plan": [52, 58], "get_found_param": [52, 57], "get_freq": [49, 52], "get_freq_map_and_norm": [52, 75, 84], "get_full_analysis_chunk": [52, 79, 89], "get_gate_indic": [52, 76], "get_gate_tim": [61, 64], "get_gate_times_hmeco": [61, 64], "get_gated_data": [61, 64], "get_gated_waveform": [61, 64], "get_glm": [52, 78], "get_gracedb_search_link": [52, 73], "get_hdf_injtyp": [52, 66], "get_hist": [52, 57], "get_icrs_po": [52, 55], "get_ifo": [52, 67], "get_ifo_combin": [52, 79, 89], "get_imrphenomxh_mod": [52, 78], "get_inj_end_tim": [52, 66], "get_inj_param": [52, 57], "get_inspiral_tf": [49, 52], "get_kde_from_arrai": [52, 56], "get_lalsim_psd_list": [51, 52, 72, 84], "get_lalsimulation_approxim": [52, 78], "get_lalsimulation_mod": [52, 78], "get_libpath_from_dirlist": [49, 52], "get_library_version_info": [52, 73], "get_link": [52, 55], "get_livetim": [52, 71], "get_log": [52, 78], "get_mass_distribut": [52, 75, 84], "get_mass_spin": [52, 57], "get_max_prob_point": [52, 56], "get_measure_level": [52, 58], "get_missing_segs_from_frame_file_cach": [52, 79, 89, 90], "get_model": [61, 64], "get_moment": [52, 75, 84], "get_mu_param": [52, 75, 84], "get_n_loud": [52, 57], "get_newsnr": [52, 57], "get_newsnr_sgveto": [52, 57], "get_newsnr_sgveto_psdvar": [52, 57], "get_newsnr_sgveto_psdvar_sc": [52, 57], "get_newsnr_sgveto_psdvar_scaled_threshold": [52, 57], "get_newsnr_sgveto_psdvar_threshold": [52, 57], "get_norm": [52, 71], "get_nrhybsur_mod": [52, 78], "get_nrsur_mod": [52, 78], "get_opt": [52, 79, 89], "get_opt_tag": [52, 76], "get_optional_arg_from_config": [61, 65], "get_options_from_group": [52, 75, 84], "get_ordered_ifo_list": [52, 79, 89], "get_param": [52, 57], "get_param_boundari": [61, 63], "get_param_bounds_from_config": [52, 56], "get_param_nam": [52, 67], "get_pchisq_fn": [52, 77], "get_pchisq_fn_pow2": [52, 77], "get_physical_covaried_mass": [52, 75, 84], "get_plot_group": [52, 79, 89], "get_point_dist": [52, 75, 84], "get_point_from_bins_and_idx": [52, 75, 84], "get_posterior_sampl": [61, 65], "get_precalc_antenna_factor": [61, 64], "get_projection_matrix": [52, 57], "get_psd_model_list": [52, 72, 84], "get_pycbc_psd_list": [52, 72, 84], "get_random_label": [52, 79, 89], "get_random_mass": [52, 75, 84], "get_random_mass_point_particl": [52, 75, 84], "get_rank": [52, 67], "get_ref_v": [52, 57], "get_run": [52, 60], "get_sample_frequ": [52, 76], "get_sample_r": [52, 76], "get_sample_tim": [52, 76], "get_scale_fac": [52, 73], "get_science_seg": [79, 90], "get_science_segs_from_datafind_out": [52, 79, 89, 90], "get_segment_definer_com": [52, 57], "get_segment_summary_tim": [52, 79, 89, 90], "get_segments_fil": [52, 79, 89, 100], "get_sg_pdf": [52, 71], "get_sgburst_waveform": [52, 78], "get_signum": [52, 73], "get_single_template_param": [52, 79, 89], "get_sky_grid_scal": [52, 79, 89], "get_slic": [61, 62], "get_sngl_rank": [52, 57], "get_snglfile_array_dict": [52, 67], "get_sngls_ranking_from_trig": [52, 57], "get_snr": [52, 57, 61, 64], "get_sourc": [52, 53], "get_start_dur": [52, 71], "get_stat": 62, "get_statist": [52, 57], "get_statistic_from_opt": [52, 57], "get_subsect": [52, 76], "get_summary_page_link": [52, 73], "get_table_column": [52, 67], "get_td_det_waveform_from_fd_det": [52, 78], "get_td_from_final_mass_spin": [52, 78], "get_td_from_freqtau": [52, 78], "get_td_gener": [52, 78], "get_td_waveform": [15, 42, 52, 78, 87, 88], "get_td_waveform_from_fd": [52, 78], "get_td_waveform_mod": [52, 78], "get_templ": [52, 78], "get_template_amplitude_norm": [52, 78], "get_thin_interv": [61, 65], "get_times_covered_by_fil": [52, 79, 89], "get_tkernel": [52, 57], "get_transform": [52, 79, 89], "get_triggered_coherent_seg": [52, 79, 89, 100], "get_two_pol_waveform_filt": [52, 78], "get_valid": 79, "get_valid_tim": [52, 79, 89], "get_valid_times_for_job": [52, 79, 89], "get_values_from_inject": [61, 64], "get_vari": [61, 63], "get_waveform": [61, 64], "get_waveform_end_frequ": [52, 78], "get_waveform_filt": [52, 78], "get_waveform_filter_length_in_tim": [52, 75, 78], "get_waveform_filter_norm": [52, 78], "getattr": [61, 62], "getconf": [49, 52], "getenv": 97, "getslic": [52, 78], "getstat": [61, 64], "getstatsdict": [61, 64], "gewek": [49, 52], "gh": 11, "gibb": 87, "gibbs_phenomenon": 87, "gievn": 65, "git": [11, 18, 19, 45, 47, 52, 71, 79, 81, 92, 99, 100], "github": [16, 18, 19, 45, 47, 56, 65, 84, 88, 92, 97, 99], "give": [10, 13, 14, 15, 30, 32, 37, 38, 40, 41, 43, 52, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 72, 73, 74, 75, 76, 78, 79, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "given": [1, 8, 10, 15, 17, 24, 28, 30, 42, 43, 46, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "giveupthresh": 75, "giz": 69, "glitch": [1, 30, 72, 74, 80, 83, 84, 94, 102], "glitchgram": 73, "glob": [60, 97], "global": [63, 65, 73, 84], "glue": [57, 79, 90, 100], "gmail": 88, "gmst_accur": [52, 55], "gmst_estim": [52, 55], "gmt": 52, "gmtime": 52, "gnu": 88, "go": [1, 30, 52, 61, 64, 65, 67, 75, 79, 81, 84, 91, 92, 94, 95, 97, 99, 102], "goe": [17, 19, 52, 64, 76, 78, 79, 90], "gone": 61, "good": [32, 52, 84, 92, 94, 97, 100], "googl": [27, 75], "got": 19, "gp": [1, 10, 12, 15, 21, 24, 27, 28, 30, 52, 55, 57, 60, 64, 66, 67, 70, 71, 72, 73, 74, 76, 78, 79, 80, 84, 87, 93, 94, 99, 102], "gplv3": 88, "gps_end": 64, "gps_end_tim": [28, 64, 67, 84, 92, 94, 102], "gps_now": [49, 52], "gps_start": 64, "gps_start_tim": [28, 64, 67, 84, 92, 94, 102], "gps_time": [1, 30, 55, 74, 84, 94, 102], "gps_times_s6d_big_dog_two_week": 97, "gpsx": 60, "gpu": [10, 12, 15, 22, 46, 76, 78, 84, 87, 94, 97, 99, 101, 102], "gpu_callback_method": [59, 94], "gr": [23, 52, 72, 78], "gracedb": [9, 49, 52, 73, 79], "gracedb_serv": 67, "gracedb_tag_with_vers": [52, 67], "gradient": 57, "grai": 73, "grain": [72, 84], "graphic": 18, "grav": [69, 84], "gravit": [1, 9, 13, 22, 30, 33, 37, 38, 40, 42, 52, 55, 60, 64, 69, 71, 78, 79, 84, 85, 87, 88, 89, 92, 93, 94, 96, 99, 102], "gravitationa": 67, "grb": [9, 29, 42, 57, 71, 79], "grb_name": 99, "grb_time": 99, "grb_util": [49, 52, 89], "great": [75, 94], "greater": [10, 21, 30, 48, 52, 57, 61, 62, 72, 73, 75], "greatli": [38, 40, 84], "grep": [97, 99], "grew": 92, "grid": [15, 25, 27, 33, 42, 47, 48, 51, 64, 73, 75, 78, 79, 84, 94, 95, 96, 102], "gridftp": 97, "gridspec": 73, "ground": [13, 25, 49, 52, 54, 72], "group": [1, 10, 21, 30, 41, 52, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 73, 75, 76, 78, 79, 84, 86, 91, 92, 95, 96, 97, 98, 99, 100], "group_layout": [52, 73], "group_str": [79, 93], "grouper": [52, 73, 79, 89], "grow": [12, 30, 32], "growth": [30, 52, 78], "grp": 67, "gsiftp": [90, 97], "gsissh": 28, "gsl": 47, "guarante": [10, 41, 59], "guess": 60, "guid": [19, 72], "gw": [8, 15, 29, 30, 45, 52, 53, 54, 55, 64, 72, 75, 85, 88, 94], "gw150914": [29, 30, 32, 34, 85, 95], "gw150914_gw170814": 96, "gw150914_h1_chirp": 27, "gw150914_like": [32, 33], "gw150914data": 27, "gw170608": 60, "gw170814": 95, "gw170817": [12, 38, 40], "gw190408_181802": 12, "gw190412": 12, "gw190413_052954": 12, "gw190413_134308": 12, "gw190421_213856": 12, "gw190424_180648": 12, "gw190425": 12, "gw190426_152155": 12, "gw190503_185404": 12, "gw190512_180714": 12, "gw190513_205428": 12, "gw190514_065416": 12, "gw190517_055101": 12, "gw190519_153544": 12, "gw190521": 12, "gw190521_074359": 12, "gw190527_092055": 12, "gw190602_175927": 12, "gw190620_030421": 12, "gw190630_185205": 12, "gw190701_203306": 12, "gw190706_222641": 12, "gw190707_093326": 12, "gw190708_232457": 12, "gw190719_215514": 12, "gw190720_000836": 12, "gw190727_060333": 12, "gw190728_064510": 12, "gw190731_140936": 12, "gw190803_022701": 12, "gw190814": 12, "gw190828_063405": 12, "gw190828_065509": 12, "gw190909_114149": 12, "gw190910_112807": 12, "gw190915_235702": 12, "gw190924_021846": 12, "gw190929_012149": 12, "gw190930_133541": 12, "gw_data_find": [28, 79, 90], "gwamplitud": 78, "gwastro": [11, 41, 43, 45, 56, 84, 88], "gwdatafind": [79, 90], "gwf": [25, 27, 28, 33, 36, 37, 38, 40, 60, 66, 80, 96], "gwfrequenc": 78, "gwosc": [1, 14, 27, 30, 33, 37, 49, 52, 80, 96, 100], "gwosc_frame_json": [52, 60], "gwosc_frame_url": [52, 60], "gwphase": 78, "gwstrain": [57, 72], "gwtc": [12, 33, 37, 53], "gz": [10, 28, 48, 78, 79, 84, 94, 101], "h": [1, 27, 28, 30, 31, 33, 37, 38, 40, 44, 56, 59, 60, 62, 64, 66, 69, 74, 78, 79, 84, 90, 94, 97, 99, 101, 102], "h00": 64, "h002": 64, "h1": [1, 12, 14, 15, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 40, 52, 53, 57, 60, 64, 67, 68, 74, 76, 78, 79, 80, 83, 84, 87, 90, 92, 96, 97, 98, 99, 100, 101, 102], "h1_channel_nam": 92, "h1_cplx_loglr": 64, "h1_data": 14, "h1_er_c00_agg": 97, "h1_er_c00_l1": 60, "h1_gps_time": 66, "h1_gwosc_16khz_r1": 33, "h1_gwosc_4khz_r1": 37, "h1_gwosc_o2_16khz_r1": 96, "h1_hoft_c00": [28, 98, 99, 100], "h1_ldas_c02_l2": [60, 92], "h1_losc_16_v1": [33, 96], "h1_losc_4_v2": 27, "h1_losc_cln_4_v1": [38, 40], "h1_ninja2_g1000176_early_recolored_cach": [84, 102], "h1_optimal_snrsq": 64, "h1_rd": 28, "h1_trigger": 28, "h1frame": 96, "h1l1": [10, 67, 84, 86, 98, 99, 100], "h1l1v1": [92, 97], "h2": [15, 64, 78, 79, 90, 92], "h2_ldas_c02_l2": 92, "h5": 57, "h5add": 84, "h5file": 67, "h5l": 30, "h5py": [24, 30, 41, 57, 62, 67, 75, 78, 79], "h_": [64, 78, 79], "h_cross": 78, "h_e": 52, "h_i": 64, "h_j": 64, "h_norm": 59, "h_plu": [59, 78], "h_plus_sampl": 59, "h_quantiti": 59, "h_x": [78, 79], "ha": [10, 11, 15, 19, 21, 28, 30, 32, 33, 34, 37, 42, 43, 45, 48, 52, 56, 57, 59, 61, 62, 64, 65, 66, 67, 70, 72, 73, 75, 76, 78, 79, 80, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "had": [28, 41, 52, 95, 96], "half": [1, 30, 61, 66, 74, 76, 78, 84, 94, 102], "halfchain": [52, 61], "halfdur": [1, 30], "halfwai": [61, 73], "hand": [52, 55, 56, 73, 86], "handl": [37, 42, 43, 52, 57, 59, 61, 62, 64, 65, 69, 75, 76, 77, 78, 79, 85, 90, 92], "handle_data": [52, 73], "handle_starttag": [52, 73], "handler": [30, 52, 62, 64, 67, 78], "hanford": [14, 15, 60, 85, 99], "hang": 97, "hann": [1, 30, 35, 72, 76, 84, 94, 102], "hannov": [95, 96], "happen": [32, 34, 52, 61, 62, 64, 67, 96, 97, 98, 100], "happili": 92, "hard": [1, 30, 56, 72, 75, 76, 84, 93, 94, 96, 101, 102], "hardcod": [94, 102], "hardwar": [9, 29, 52, 74, 85, 100], "hardware_injection_summari": 97, "harmon": [52, 61, 64, 78, 98], "harmonic_mean_estim": [52, 61], "harri": [57, 84], "harvard": 69, "has_compressed_waveform": [52, 78], "has_det_respons": 78, "has_inc": 67, "has_ligo_fram": 97, "has_opt": [52, 76, 79, 89], "has_option_tag": [52, 76], "has_pfn": [52, 79, 89], "has_singular": 97, "hash": [57, 73, 78, 79, 81, 92], "hash_chunk_s": [79, 92], "hash_compar": [52, 79, 89, 92], "hash_max_chunk": [79, 92], "hasn": [64, 65], "hat": [59, 67], "hate": 66, "hautocorr": 77, "have": [11, 15, 19, 20, 22, 23, 25, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 51, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 73, 75, 76, 78, 79, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "haven": 64, "hc": [15, 23, 27, 55, 64, 66, 78, 87, 88], "hc2": 64, "hcnorm": [59, 77], "hcross": [59, 78], "hcross_norm": 59, "hcrosstild": 78, "hcsigmasq": 59, "hctild": 78, "hdf": [1, 16, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 49, 51, 52, 56, 57, 60, 61, 62, 64, 65, 66, 71, 73, 75, 76, 78, 79, 80, 84, 86, 91, 93, 94, 95, 97, 98, 102], "hdf5": [57, 67, 71, 75, 76, 78, 79, 89], "hdf_file": 79, "hdf_file_path": 73, "hdf_fp": 75, "hdf_group": [66, 79], "hdf_injtype_from_approxim": [52, 66], "hdf_store": [84, 94, 102], "hdf_store_fil": [1, 30], "hdf_trigger_merg": [91, 97], "hdfbank": 79, "hdffile": 71, "hdfile": [67, 71], "hdfinjectionset": 66, "hdfinjfind": [91, 97], "he": 84, "head": [47, 60, 73, 92, 97], "header": [34, 52, 56, 62, 63, 64, 73], "healpix": 56, "healpix_fil": 56, "healpix_ski": [0, 30, 56], "healpixski": [0, 30, 52, 56], "heapsort": 67, "hear": 27, "heard": 27, "heavier": [52, 75, 84], "heaviest": [52, 75], "height": [55, 73], "height_ratio": 73, "help": [19, 28, 29, 30, 32, 44, 62, 64, 67, 68, 73, 74, 75, 76, 78, 80, 84, 92, 94, 97, 98, 99, 101, 102], "helper": [45, 56, 57, 64, 67, 71, 73, 76, 78, 79, 92], "hemispher": 56, "henc": [42, 57, 75, 80], "here": [10, 14, 17, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 43, 46, 52, 56, 57, 58, 59, 62, 64, 65, 66, 67, 71, 72, 75, 76, 78, 79, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "hertz": [1, 30, 72, 74, 76, 84, 94, 102], "heterodyn": [36, 64], "hexagon": [75, 84, 102], "hexdigest": [79, 92], "hf": [87, 88], "hfile": [52, 67, 73, 78], "hgimri": 87, "hgroup": 67, "hh": [64, 68], "hh_total": 64, "hi": 71, "hi_mchirp": 71, "hide_onsourc": 73, "hierach": 42, "hierachicalparam": 64, "hierarch": [3, 30, 42, 52, 61, 79], "hierarchical_level": 79, "hierarchical_matched_filter_and_clust": [52, 59], "hierarchicalmodel": [3, 30, 34, 42, 61, 64], "hierarchicalparam": [61, 64], "high": [1, 10, 15, 17, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 52, 56, 57, 59, 64, 69, 71, 74, 76, 77, 78, 80, 84, 94, 96, 97, 98, 102], "high_dist": 71, "high_freq": 72, "high_freq_compon": 72, "high_freq_cutoff": 74, "high_frequency_cutoff": [59, 61, 64, 74, 76, 77, 78], "high_spin": 71, "higher": [10, 32, 37, 40, 42, 45, 52, 56, 64, 71, 75, 78, 84, 87, 97], "highest": [52, 57, 71], "highli": 10, "highmass": 10, "highpass": [1, 30, 52, 59, 64, 76, 84, 85, 94, 102], "highpass_bandwidth": 74, "highpass_fir": [27, 52, 59, 76], "highpass_frequ": 74, "highpass_reduct": 74, "highpass_waveform": 64, "highpow": 51, "hihj": 64, "himass": 71, "himass_2": 71, "hinder": [52, 69], "hint": 97, "hinterp": 78, "hire": [12, 14, 15, 17, 23, 27, 50, 51, 87, 88], "hist": [17, 61], "hist2d": 17, "hist_bin": 61, "hist_color": 73, "hist_max": 61, "hist_min": 61, "hist_overflow": [52, 73], "hist_rang": 61, "histogram": [17, 44, 61, 71, 73, 79, 83], "histori": [62, 65, 79, 100], "hit": 65, "hl": [28, 93], "hlen": 78, "hlm": 78, "hm": 87, "hme": 61, "hmeco": 64, "hoffset": 73, "hoft_c00_er8b_cbc": [98, 99], "hold": [42, 57, 58, 64, 66, 72, 75, 79, 97, 101, 102], "holdreasoncod": 97, "hole": [13, 32, 34, 35, 36, 52, 78, 84, 96], "home": [10, 18, 19, 21, 46, 48, 79, 84, 92, 93, 97, 101, 102], "homogen": 57, "hood": 23, "hope": [55, 84], "hopefulli": 84, "hopeless": 57, "horizon": [55, 71, 74], "horizon_dist": 99, "horizont": [52, 71, 73], "host": [18, 90, 97, 99], "hostnam": 97, "hotter": 41, "hour": [32, 97], "how": [10, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 31, 34, 35, 36, 42, 44, 45, 47, 51, 52, 55, 57, 58, 61, 62, 64, 72, 75, 76, 78, 79, 80, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "howev": [10, 19, 21, 22, 30, 32, 37, 41, 42, 43, 46, 52, 61, 64, 67, 74, 78, 79, 84, 87, 88, 92, 93, 94, 95, 96, 97], "hp": [15, 23, 27, 55, 64, 66, 78, 87, 88], "hp2": 64, "hpd": 52, "hpd_coverag": [49, 52], "hpd_credible_interv": [49, 52], "hpd_interv": [52, 71], "hpd_threshold": [49, 52], "hphccorr": 59, "hpiter": [61, 64], "hplu": [59, 78], "hplus_cross_corr": 77, "hplus_norm": 59, "hplustild": 78, "hpnorm": [59, 77], "hpsigmasq": 59, "hptild": 78, "hrss": 78, "hseg": 14, "hstatic_param": [61, 64], "ht": [15, 59], "ht2": 15, "htcondor": 97, "htild": [52, 58, 59, 74, 77, 78], "html": [11, 19, 33, 37, 45, 73, 79, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "html_dir": [95, 96, 99], "html_escap": [52, 73], "html_tabl": [52, 73], "htmldir": 99, "htmlparser": 73, "http": [11, 23, 27, 28, 33, 36, 37, 38, 40, 47, 48, 52, 56, 57, 58, 59, 60, 64, 65, 67, 69, 71, 74, 75, 76, 77, 78, 79, 84, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102], "huge": 92, "hull": 56, "human": 27, "hundr": 86, "hunt": 99, "hvariable_param": [61, 64], "hwinj": 28, "hwinj_cbc_simulation_id_": 28, "hwinj_fil": 28, "hwinj_summary_cat_2": 97, "hwinjcbc_": 28, "hwinjpagejob": 97, "hx": 59, "hybrid": [52, 64], "hybrid_meco_frequ": [49, 52], "hybrid_meco_veloc": [49, 52], "hybridenergi": [49, 52], "hybridmeco": [84, 102], "hyperbank_parallel_phenomd2": 10, "hypercub": [52, 65], "hypertriangl": [49, 52], "hypothesi": 57, "hypothet": 55, "hz": [1, 8, 12, 23, 30, 32, 33, 37, 50, 51, 52, 56, 57, 59, 72, 76, 78, 80, 84, 87, 88, 94, 102], "i": [1, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "i1": 15, "i7": 75, "i8": 67, "i_0": 64, "ian": 90, "icon": 73, "icr": 55, "icu": 73, "id": [24, 52, 57, 65, 66, 67, 71, 73, 75, 78, 79, 89, 94, 97], "id000020": 97, "id_from_param": [52, 78], "id_str": 67, "idea": [22, 80, 84, 86, 92], "ideal": [19, 58, 59, 76], "ident": [75, 79], "identif": 74, "identifi": [28, 30, 55, 57, 66, 71, 74, 75, 78, 79, 88, 90, 92, 93, 94, 97, 100, 102], "identify_needed_data": [52, 79, 89], "idepend": 84, "idq": 60, "idq_channel": 74, "idq_channel_nam": 60, "idq_state_channel": 74, "idq_status_channel_nam": 60, "idq_threshold": [60, 74], "idqbuff": [52, 60], "idtyp": 58, "idx": [57, 59, 67, 72, 75], "idx1": 57, "idx2": 57, "idx_dict": 57, "idx_out": 57, "ie": [1, 28, 30, 67, 75, 79, 90, 92, 94, 97, 99, 100, 102], "ier": 15, "ifar": [52, 57, 71, 79, 91, 97], "ifar_limit": 57, "ifar_opt_to_far_limit": [52, 57], "ifar_satur": 57, "ifar_str": 57, "ifdo": 94, "ifft": [22, 52, 58, 59, 74, 77, 87], "ifft_class": 22, "ifo": [1, 12, 15, 24, 27, 28, 30, 37, 38, 40, 52, 53, 55, 57, 59, 60, 62, 64, 66, 67, 68, 71, 72, 73, 74, 76, 78, 79, 83, 84, 89, 90, 92, 93, 94, 96, 97, 98, 99, 102], "ifo1": [15, 79], "ifo2": [15, 79], "ifo_color": [14, 52, 73], "ifo_id": 79, "ifo_list": 79, "ifo_nam": 74, "ifo_set": [52, 76], "ifo_str": 72, "ifo_tag": 79, "ifo_tim": 79, "ifocomb": 79, "ifonam": 100, "ifos_from_combo": [52, 71], "ifos_list": 67, "ignor": [1, 30, 32, 56, 57, 59, 61, 62, 64, 72, 77, 78, 79, 84, 90, 94, 95, 96, 99, 100, 102], "ignore_failed_waveform": [61, 64], "igwn": [29, 47, 97], "igwn_ligolw": 67, "igwn_seg": [52, 79, 90, 94, 100, 102], "ihop": [92, 94, 102], "ii": [64, 72, 78], "ij": 64, "iligomodel": [4, 10, 30, 52, 72, 84, 94, 102], "iligoseism": [4, 30, 52, 72, 84, 94, 102], "iligoshot": [4, 30, 52, 72, 84, 94, 102], "iligosrd": [4, 30, 52, 72, 84, 94, 102], "iligotherm": [4, 30, 52, 72, 84, 94, 102], "illustr": [34, 84, 96, 97], "ilwd": 67, "ilwdchar": 67, "im": 78, "imag": [18, 28, 36, 52, 73, 74, 76, 78, 87, 88, 97], "imagin": 42, "imaginari": [59, 74, 76, 78], "imap": [49, 52], "imap_unord": [49, 52], "imax": 28, "imf": 71, "imin": 78, "immedi": [62, 75, 78, 79, 84, 97, 99], "implement": [8, 13, 23, 29, 30, 42, 43, 47, 57, 58, 59, 62, 64, 65, 66, 67, 78, 79, 84, 87, 90, 91, 92, 96, 97], "impli": [64, 97], "implicit": [59, 97], "import": [12, 14, 15, 17, 22, 23, 24, 25, 27, 28, 30, 36, 39, 48, 50, 51, 52, 56, 57, 58, 59, 61, 62, 64, 65, 75, 78, 79, 84, 87, 88, 92, 93, 94, 97, 100], "import_double_wisdom_from_filenam": [52, 58], "import_opt": [49, 52], "import_single_wisdom_from_filenam": [52, 58], "import_sys_wisdom": [52, 58], "importance_dlnz": 62, "importance_dlogz": [61, 65], "importance_lnz": 62, "importance_logz": [61, 65], "importance_nested_sampl": 65, "importerror": 27, "impos": [52, 84, 102], "improv": [13, 19, 22, 29, 64, 76, 94, 102], "impuls": [1, 30, 72, 80, 84, 94, 102], "imrphenoma": 87, "imrphenomb": [21, 87], "imrphenombfin": [84, 102], "imrphenomc": [21, 87], "imrphenomc_interp": 87, "imrphenomcfin": [84, 102], "imrphenomd": [15, 23, 27, 34, 36, 37, 64, 67, 87, 94], "imrphenomd_interp": 87, "imrphenomd_nrtid": 87, "imrphenomd_nrtidal_interp": 87, "imrphenomd_nrtidalv2": 87, "imrphenomdpeak": [84, 102], "imrphenomhm": 87, "imrphenomhm_interp": 87, "imrphenomnsbh": 87, "imrphenomp": 87, "imrphenompv2": [30, 32, 87, 96], "imrphenompv2_interp": 87, "imrphenompv2_nrtid": 87, "imrphenompv2_nrtidal_interp": 87, "imrphenompv2_nrtidalv2": 87, "imrphenompv3": 87, "imrphenompv3hm": 87, "imrphenompv3hm_interp": 87, "imrphenomt": 87, "imrphenomthm": 87, "imrphenomtp": 87, "imrphenomtphm": 87, "imrphenomx": 84, "imrphenomxa": 87, "imrphenomxas_nrtidalv2": 87, "imrphenomxas_nrtidalv3": 87, "imrphenomxhm": [78, 87], "imrphenomxhm_interp": 87, "imrphenomxo4a": 87, "imrphenomxp": 87, "imrphenomxp_nrtidalv2": 87, "imrphenomxp_nrtidalv3": 87, "imrphenomxphm": 87, "imrphenomxphm_interp": 87, "imrphenomxpnr": 87, "in_coinc_time_excl": [52, 71], "in_coinc_time_incl": [52, 71], "in_fil": 79, "in_kmax": [52, 58], "in_second": 52, "in_workflow": [92, 93, 97, 101], "inact": 60, "inadequ": 19, "inarr": 22, "inc": [10, 15, 73], "inc_dist": 96, "incdenomin": [49, 52], "incl": 69, "inclin": [8, 10, 15, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 44, 52, 55, 57, 64, 67, 69, 78, 79, 87, 95, 96, 97], "inclination_ref": 36, "inclu": 64, "includ": [8, 10, 13, 18, 19, 21, 28, 29, 30, 32, 34, 40, 41, 42, 45, 47, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 71, 73, 74, 75, 76, 78, 79, 84, 85, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 102], "include_data_opt": 72, "include_dir": 52, "include_error": 73, "include_label": 78, "include_subdax_opt": 79, "include_vers": 57, "inclus": 52, "incnumer": [49, 52], "incoher": 64, "incoherent_from_fil": 66, "incoherentfromfilehdfinjectionset": [52, 66], "incompat": [60, 76], "incomplet": 10, "inconj": 59, "inconsist": 72, "incorpor": 84, "incorrect": 51, "increas": [31, 32, 40, 57, 61, 64, 67, 74, 78, 84, 91, 96], "increment": [52, 57, 60, 62, 72, 78, 81, 95, 96, 97], "increment_update_cach": [60, 74], "inde": 84, "indent_incr": 75, "indentedhelpformatterwithnl": [52, 75, 84], "indeped": 42, "independ": [21, 30, 32, 43, 52, 56, 61, 62, 64, 65, 71, 75, 76, 84, 89, 90, 94, 95, 96, 97, 102], "independent_chip_chieff": [0, 30, 56], "independent_ifo": [79, 102], "independentchipchieff": [0, 30, 52, 56], "index": [19, 24, 30, 36, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79], "indexerror": 52, "indic": [8, 10, 30, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 84, 92, 94, 97, 99], "indices_of_flag": [52, 60], "indices_outside_seg": [52, 57], "indices_outside_tim": [52, 57], "indices_within_seg": [52, 57], "indices_within_tim": [52, 57], "individu": [44, 52, 56, 57, 64, 67, 71, 72, 76, 77, 78, 79, 87, 90, 92, 100], "indivud": [79, 100], "indoc": [52, 66, 78], "inertia": 52, "inf": [52, 56, 59, 64, 65, 66, 73], "infer": [2, 3, 5, 6, 9, 29, 32, 33, 37, 39, 40, 43, 44, 49, 52, 56, 76, 79, 85, 88], "inference_fil": 79, "inference_followup": [49, 52, 89], "inferencefil": [52, 62, 65], "inferencetxtfil": [41, 61, 62], "infin": [52, 71], "infinit": [61, 72, 78], "inflex": [94, 102], "influenc": 74, "info": [45, 52, 60, 61, 62, 71, 84, 94, 97, 99, 101, 102], "inform": [1, 10, 14, 15, 19, 21, 30, 31, 32, 35, 40, 41, 52, 53, 55, 56, 57, 60, 61, 62, 65, 67, 71, 72, 73, 75, 76, 78, 79, 84, 85, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102], "informaton": 53, "infrastructur": 91, "infti": [56, 64], "ing": [1, 30, 59, 74], "ingest_cuts_option_group": [52, 57], "inherit": [34, 52, 57, 62, 64, 65, 67, 78, 79, 97], "ini": [10, 15, 31, 32, 33, 34, 35, 36, 37, 38, 40, 56, 72, 76, 79, 84, 85, 91, 93, 95, 96, 97, 98, 102], "init": [56, 64, 65, 67], "init_from_frequ": [61, 64], "init_log": [49, 52], "initarg": 52, "initi": [34, 41, 52, 54, 56, 57, 63, 64, 65, 67, 74, 75, 76, 78, 79, 84, 86, 90, 92, 93, 94, 97, 100, 101, 102], "initial_arrai": 76, "initial_dist_from_config": [61, 65], "initial_distribut": 65, "initial_point": 68, "initial_s": 57, "initialis": 57, "initialization_inifil": [79, 92], "initialize_eo": [52, 69], "initializemodulesenv": 97, "initili": 56, "initlist": 78, "inj": [10, 28, 52, 66, 73, 91, 92, 94, 97, 99], "inj_coinc_fil": 79, "inj_dist": 73, "inj_distance_pdf": [52, 71], "inj_effici": 99, "inj_fil": [71, 73, 79, 93], "inj_filter_rejector": [66, 74, 78], "inj_filter_rejector_dict": 74, "inj_find_fil": 79, "inj_insp_fil": 79, "inj_mass_pdf": [52, 71], "inj_recoveri": [79, 95], "inj_section_nam": [79, 93], "inj_spin_pdf": [52, 71], "inj_tag": [79, 93], "inj_to_hdf": [52, 79, 89, 93], "inj_trig": 79, "inj_trig_fil": 79, "inj_trigger_window": 66, "inj_valu": 73, "inj_waveform": 66, "inj_xml_fil": 79, "injcombin": 99, "inject": [1, 9, 10, 21, 29, 30, 34, 36, 42, 49, 52, 57, 61, 62, 64, 71, 73, 74, 76, 78, 84, 85, 92, 94, 97, 99, 100, 102], "injection_channel_nam": [84, 94, 102], "injection_chunk": 71, "injection_f_fin": [84, 94, 102], "injection_f_ref": [84, 94, 102], "injection_fil": [62, 64, 66, 79, 84, 94, 102], "injection_filter_rejector_chirp_time_window": 94, "injection_filter_rejector_coarsematch_deltaf": 94, "injection_filter_rejector_coarsematch_fmax": 94, "injection_filter_rejector_f_low": 94, "injection_filter_rejector_match_threshold": 94, "injection_filter_rejector_seg_buff": 94, "injection_filter_rejector_trigger_window": 94, "injection_frame_fil": [84, 94, 102], "injection_frame_typ": [84, 94, 102], "injection_index": 79, "injection_param": 79, "injection_sample_r": [66, 84, 94, 102], "injection_samples_map": [62, 79], "injection_scale_factor": [84, 94, 102], "injection_smbhb": 35, "injection_window": [74, 94], "injections_1": 28, "injections_bnslininj_2134": 93, "injections_config": 95, "injections_er8": 99, "injections_from_cli": [61, 62], "injections_group": [61, 62], "injectionset": [52, 66], "injfil": 57, "injfilterrejector": [49, 52, 74], "injfind": [97, 99], "injful": 97, "injinj": 97, "injsectionnam": 93, "injstat": 71, "injtyp": [52, 66], "inline_comment_prefix": 76, "inline_linear": 78, "inline_linear_interp": [52, 78], "inner": [42, 52, 64, 74, 76], "inner_prod": 74, "inner_r": [52, 76], "innermost": [52, 69], "innoconj": 59, "inp": [57, 79], "inpaint": 64, "inplac": [58, 64, 76], "input": [17, 22, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 52, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 84, 90, 92, 94, 96, 97, 99, 100, 101, 102], "input1": 79, "input2": 79, "input_arg": 52, "input_arrai": 22, "input_fil": [44, 62, 73, 79, 93, 101], "input_file_opt": 79, "input_freq": 75, "input_len": 52, "input_map": [84, 97, 99], "input_param": 78, "input_t": [79, 101], "inputstr": 57, "inputvar": [49, 52, 96], "inputvar1": 52, "inputvar2": 52, "insert": [28, 58, 60, 74], "insert_arg": [49, 52, 57], "insert_bank_bins_option_group": [52, 57], "insert_base_bank_opt": [52, 75, 84], "insert_cuts_option_group": [52, 57], "insert_ethinca_metric_opt": [52, 75, 84], "insert_fft_opt": [52, 58], "insert_fft_option_group": [52, 58], "insert_injfilterrejector_option_group": [52, 66], "insert_injfilterrejector_option_group_multi_ifo": [52, 66], "insert_into_dax": [52, 79, 89], "insert_live_pastro_option_group": [52, 71], "insert_mass_range_option_group": [52, 75, 84], "insert_metric_calculation_opt": [52, 75, 84], "insert_optimization_option_group": [49, 52], "insert_option_group": [52, 77], "insert_processing_option_group": [49, 52], "insert_psd_option_group": [52, 72, 84], "insert_psd_option_group_multi_ifo": [52, 72, 84], "insert_segment_option_group": [52, 74], "insert_segment_option_group_multi_ifo": [52, 74], "insert_significance_option_group": [52, 57], "insert_snr_optimizer_opt": [52, 68], "insert_statistic_option_group": [52, 57], "insert_strain_option_group": [52, 74], "insert_strain_option_group_multi_ifo": [52, 74], "insid": [11, 18, 47, 52, 58, 79, 97], "insp": 79, "insp_anal_nam": 79, "insp_data_nam": 79, "insp_fil": 79, "insp_seg": 79, "inspect": [28, 43, 95], "inspinj": [10, 21, 79, 92, 93], "inspinj_8c": 93, "inspir": [10, 13, 16, 52, 59, 76, 77, 79, 84, 91, 92, 97, 99, 102], "inspiral_1": 94, "inspiral_8c": 94, "inspiral_exec": 94, "inspiral_fil": [28, 97], "inspiral_full_data": 97, "inspiral_full_data_job0": 97, "inspiral_full_data_job1": 97, "inspiral_hip": [94, 102], "inspiral_hipe_fu": 97, "inspiral_out": [79, 94], "inspiral_pycbc": 28, "inspiral_s6lowmass": 79, "inspiralbankgener": 52, "inst": [48, 97], "instal": [11, 18, 19, 31, 36, 52, 67, 79, 84, 86, 94, 96, 97, 99, 101, 102], "install_requir": 88, "instanc": [25, 30, 45, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102], "instant": 56, "instanti": [57, 58, 59, 67, 75], "instead": [10, 14, 17, 22, 28, 30, 32, 33, 41, 47, 52, 56, 57, 59, 62, 64, 65, 67, 73, 75, 76, 78, 79, 84, 87, 88, 95, 97, 100, 102], "instruct": [10, 16, 29, 45, 47, 48, 81, 84, 92, 96, 97, 99, 100], "instrument": [1, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 52, 66, 72, 80, 84, 85, 96, 100], "instur": 28, "insuffici": [79, 100], "int": [23, 27, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 90, 94, 102], "int64": 67, "int_": 64, "int_0": 64, "int_gps_time_to_str": [52, 79, 89], "intanc": [79, 100], "integ": [1, 22, 30, 52, 57, 58, 61, 62, 63, 64, 65, 72, 73, 74, 75, 76, 77, 78, 79, 84, 90, 91, 92, 94, 97, 99, 101, 102], "integr": [32, 33, 37, 42, 52, 56, 57, 60, 61, 62, 64, 65, 71, 75, 84, 89, 102], "integral_el": [49, 52], "integrand": 52, "integrate_effici": [49, 52], "intel": [10, 97], "intel64": 45, "intend": [52, 56, 64, 78, 79, 84, 88, 90, 94], "intens": 47, "intent": [58, 59], "inter": 57, "interact": [29, 42, 43, 65, 91, 97, 99], "interest": [9, 16, 25, 27, 29, 30, 57, 79], "interfac": [15, 22, 42, 43, 52, 57, 58, 67, 75, 76, 87, 89, 90, 94, 97, 100], "interfer": 97, "interferomet": [25, 52, 55, 57, 60, 73, 79, 90, 94, 102], "intermedi": [8, 30, 64, 74, 78, 79, 84, 94, 96, 97], "intermediari": [75, 97], "intermediate_data_fil": 84, "intermediate_product": [52, 79, 89, 92], "intern": [19, 28, 56, 57, 58, 59, 60, 64, 65, 66, 67, 76, 77, 78, 79, 90, 100], "internal_kwd": 65, "internet": 15, "interp": [52, 64], "interp1d": [52, 69, 71, 78], "interp_grav_mass_to_baryon_mass": [52, 69], "interp_grav_mass_to_compact": [52, 69], "interpol": [12, 15, 27, 42, 51, 52, 59, 64, 69, 71, 72, 75, 76, 78, 79, 84, 87, 92, 94, 97, 99, 101, 102], "interpolat": 78, "interpolate_complex_frequ": [52, 59], "interpolate_ex": [52, 79, 89, 92], "interpolate_psd": [52, 75, 84], "interpolate_str": [52, 76, 79, 89], "interpolatingconfigpars": [52, 76, 79, 92], "interpret": [56, 58, 76, 79], "interrupt": 52, "intersect": 79, "interv": [10, 21, 28, 30, 32, 39, 44, 52, 56, 57, 62, 65, 66, 71, 72, 73, 75, 76, 78, 79, 91, 93, 94, 96, 97], "intial": [65, 74], "intmc": [49, 52], "intrins": [40, 42, 55, 59, 64, 65, 76, 78, 96], "introduc": [43, 64, 65, 75, 78, 84], "introduct": 85, "invalid": [62, 66, 72, 74, 94, 97], "invalidate_psd": [52, 74], "invari": 56, "invcdf": 56, "invec": 58, "invec_data": 74, "invers": [1, 22, 28, 30, 32, 33, 34, 35, 37, 38, 40, 49, 52, 56, 57, 58, 61, 64, 65, 71, 72, 74, 75, 76, 77, 78, 84, 91, 94, 96, 97, 102], "inverse_jacobian": [30, 49, 52], "inverse_spectrum_trunc": [52, 72, 84], "inverse_transform": [49, 52], "invert": 52, "investig": [10, 84, 90], "invoc": [58, 59, 97, 99], "invok": [52, 69, 97], "involv": [22, 67, 77, 79, 84, 96, 97], "invpsd": [1, 30, 35, 74, 76, 84, 94, 102], "invq_from_mass1_mass2": [49, 52], "io": [2, 11, 28, 30, 43, 49, 52, 56, 61, 64, 65, 66, 78], "ioerror": 62, "iota": [44, 52, 69], "ip": 18, "ipn_fil": 79, "irregular": 52, "irregularbin": [49, 52], "irrelev": 84, "irrespect": 52, "is_asd_fil": [51, 72], "is_burned_in": [61, 62], "is_extent_valid": [52, 60], "is_glidein": 97, "is_main_process": [49, 52], "is_outside_rang": [52, 75, 84], "is_same_a": [52, 79, 89], "is_stag": 79, "isco": [52, 69, 84], "isco_eq": 69, "isco_solut": [52, 69], "isfil": [79, 90], "isi": [97, 99], "isn": [14, 19, 64, 66, 92], "isntanc": 52, "iso": 52, "iso8601": 52, "iso_8601": 52, "isso": [52, 69], "isso_eq_at_pol": [52, 69], "isso_eq_at_pole_dr": [52, 69], "isso_eq_at_pole_dr2": [52, 69], "issu": [32, 35, 45, 58, 62, 64, 67, 72, 74, 79, 84, 90, 91, 92], "issue16058": 76, "item": [52, 64, 67, 73, 75, 76, 79], "items": [52, 76], "iter": [1, 30, 31, 32, 35, 36, 38, 43, 52, 57, 59, 61, 62, 63, 64, 65, 66, 73, 75, 79, 84, 94, 96, 102], "iteraiton": 65, "iterative_kde_sampl": 65, "itf_sciencemod": 92, "its": [10, 13, 19, 30, 40, 41, 42, 43, 45, 52, 56, 57, 58, 59, 61, 62, 64, 65, 67, 69, 72, 73, 75, 76, 77, 78, 79, 84, 87, 92, 94, 95, 97, 98, 99, 100, 101, 102], "itself": [24, 41, 43, 59, 64, 65, 76, 97], "ityp": 58, "j": [47, 52, 59, 61, 64, 69, 74, 75, 84], "jacobian": [30, 49, 52, 56, 64, 65], "javascript": [52, 73], "jensen": 61, "jframe_to_l0fram": [49, 52], "jitter_skyloc": 99, "jl": 65, "job": [10, 21, 32, 33, 79, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "job_data_seg": 79, "jobseg": 79, "jobsegment": [52, 79, 89], "jobsetup": [49, 52, 89], "jobstatu": 97, "jobutil": [79, 94], "johnveitch": 65, "join": [30, 64, 78, 79, 87], "joint": [30, 34, 49, 52], "joint_primary_margin": [3, 30, 64], "jointdistribut": [52, 56, 64, 65], "jointprimarymarginalizedmodel": [3, 30, 61, 64], "journal": 52, "json": 71, "jump": [52, 61, 65, 75], "jump_interv": 63, "jump_interval_dur": 63, "jump_propos": [39, 63, 65], "just": [11, 14, 25, 28, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 47, 48, 52, 56, 57, 61, 62, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 81, 84, 88, 92, 93, 95, 96, 97, 100], "justifi": 66, "jveitch": 97, "k": [1, 30, 52, 54, 56, 57, 59, 61, 63, 64, 67, 71, 73, 84, 94, 102], "k1": [15, 55, 79], "k_": 64, "k_imf": 71, "kagra": [4, 30, 52, 55, 72, 84, 94, 102], "kagra128mpct1800545": [4, 30, 52, 72, 84, 94, 102], "kagra25mpct1800545": [4, 30, 52, 72, 84, 94, 102], "kagra80mpct1800545": [4, 30, 52, 72, 84, 94, 102], "kagradesignsensitivityt1600593": [4, 30, 52, 72, 84, 94, 102], "kagraearlysensitivityt1600593": [4, 30, 52, 72, 84, 94, 102], "kagralatesensitivityt1600593": [4, 30, 52, 72, 84, 94, 102], "kagramidsensitivityt1600593": [4, 30, 52, 72, 84, 94, 102], "kagraopeningsensitivityt1600593": [4, 30, 52, 72, 84, 94, 102], "kaiser": [59, 66, 76, 78], "kappa": 71, "kappa_a": 74, "kappa_c": 74, "kappa_pu_im": 74, "kappa_pu_r": 74, "kappa_tst_im": 74, "kappa_tst_r": 74, "kde": [52, 56, 57, 61, 64, 65, 73, 83], "kde1": 65, "kde2": 65, "kde_fil": 83, "kde_new": 65, "kde_ratio": [52, 57], "kdearg": 73, "keep": [19, 32, 43, 56, 57, 62, 64, 70, 79, 91, 94, 96, 97], "keep_but_raise_warn": [52, 79, 89], "keep_loudest_in_interv": [52, 57], "keep_loudest_interv": 94, "keep_loudest_log_chirp_window": 94, "keep_loudest_num": 94, "keep_near_inject": [52, 57], "kei": [13, 15, 19, 24, 41, 52, 56, 57, 59, 62, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 84, 85, 88, 90, 92, 93, 94, 97, 99, 102], "kept": [10, 28, 30, 43, 57, 76, 79, 97], "kernel": [61, 97], "kerr": [52, 69, 78], "kerr_factor": [52, 78], "kerr_lightr": [49, 52], "kerr_lightring_veloc": [49, 52], "keword": 73, "keyboard": 52, "keyerror": [52, 62], "keyword": [52, 56, 57, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 88, 90, 92, 97], "keyworkd": 78, "kickstart": 97, "kidder": 52, "kilomet": 52, "kilonova": 42, "kimf": 71, "kind": [52, 64, 67, 76, 78, 88, 97, 100], "kl": [52, 61], "km": 15, "kmax": [59, 61, 64, 77, 78], "kmin": [59, 61, 64, 77, 78], "kname": 57, "know": [1, 22, 30, 32, 38, 40, 52, 64, 66, 74, 75, 79, 84, 90, 94, 95, 96, 97, 100, 102], "known": [23, 51, 53, 55, 57, 61, 76, 79, 94, 97, 99], "kolmogorov": 57, "kombin": 73, "kpc": [28, 97], "kroupa": 71, "ks_pval": 57, "ks_stat": 57, "ks_test": [52, 57, 61], "ksampl": 65, "kstest": 57, "kullback": 61, "kwag": 64, "kwarg": [52, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 90, 102], "kwarg1": 57, "kwarg2": 57, "kwarg3": 57, "kwd": [52, 56, 57, 64, 65, 66, 67, 73, 76, 77, 78, 79, 92], "l": [8, 10, 18, 21, 28, 30, 33, 37, 38, 40, 43, 52, 56, 60, 64, 67, 72, 78, 79, 87, 90, 93, 97], "l0": 52, "l0frame_to_jfram": [49, 52], "l1": [1, 12, 14, 15, 24, 27, 28, 30, 32, 33, 34, 37, 38, 40, 52, 53, 57, 60, 64, 68, 74, 78, 79, 83, 84, 87, 90, 92, 94, 96, 97, 98, 99, 100, 102], "l1_cplx_loglr": 64, "l1_er_c01_l1": 97, "l1_gwosc_16khz_r1": 33, "l1_gwosc_4khz_r1": 37, "l1_gwosc_o2_16khz_r1": 96, "l1_hoft_c00": [98, 99, 100], "l1_ldas_c02_l2": 92, "l1_losc_16_v1": [33, 96], "l1_losc_cln_4_v1": [38, 40], "l1_optimal_snrsq": 64, "l1_rd": 28, "l1frame": 96, "l416": 56, "la": 36, "label": [17, 21, 23, 27, 34, 51, 52, 57, 61, 62, 64, 67, 69, 73, 76, 78, 79, 87, 92, 95, 96, 99], "label1": 79, "label2": 79, "label_contour": 73, "label_dict": [52, 78], "lackey_tidal_2013_seobnrv2_rom": 87, "ladder": 65, "lag": [39, 65, 71, 97], "laguerre_n": 71, "lai": [84, 89, 100], "lal": [28, 47, 52, 55, 59, 60, 75, 76, 78, 79, 84, 90, 94, 97, 99, 101, 102], "lal_cosmologi": 52, "lal_data": 76, "lal_data_path": [47, 97], "lal_prefix": 47, "lal_src": 99, "lalapp": [47, 93, 94, 102], "lalapps_cbc_sbank_hdf5_bankcombin": 84, "lalapps_cbc_sbank_hdf5_choose_mchirp_boundari": 84, "lalapps_coh_ptf_inspir": [47, 99], "lalapps_inspinj": [10, 21, 47, 79, 92, 97, 99], "lalapps_inspir": [79, 92, 94], "lalapps_splitbank": [79, 101], "lalapps_tmpltbank": [79, 84, 92, 102], "lalappsinspinjexecut": [52, 79, 89], "lalbel": 79, "laldetchar": 47, "lalinfer": 47, "lalinspir": [52, 84], "lalsimul": [8, 30, 32, 33, 47, 52, 72, 76, 78, 84, 85, 94, 97, 99, 101, 102], "lalstochast": 47, "lalsuit": [18, 45, 52, 55, 84, 93, 94, 97, 99, 102], "lalsuite_o1_branch": 47, "lalxml": 47, "lamb": 55, "lambda": [52, 67, 75, 84, 102], "lambda0": 71, "lambda1": [8, 30, 52, 67, 75, 78], "lambda1_from_delta_lambda_tilde_lambda_tild": [49, 52], "lambda2": [8, 30, 52, 67, 75, 78], "lambda2_from_delta_lambda_tilde_lambda_tild": [49, 52], "lambda_1": 71, "lambda_data": [49, 52], "lambda_from_mass_tov_fil": [49, 52], "lambda_from_multiple_tov_fil": [7, 30, 52], "lambda_from_tov_data": [49, 52], "lambda_from_tov_fil": [7, 30, 52], "lambda_i": 75, "lambda_map": [49, 52, 84], "lambda_octu1": [8, 30, 78], "lambda_octu2": [8, 30, 78], "lambda_param": [49, 52], "lambda_tild": [49, 52], "lambdafrommultipletovfil": [7, 30, 49, 52], "lambdafromtovfil": [7, 30, 49, 52], "lambdav": 52, "lang": 75, "languag": [19, 88], "laptop": [31, 37], "larg": [13, 23, 30, 32, 33, 37, 56, 58, 66, 67, 71, 74, 75, 79, 84, 90, 92, 96, 97], "larger": [1, 30, 49, 52, 56, 57, 59, 62, 64, 67, 74, 75, 78, 79, 84, 94, 96, 102], "largest": [57, 62, 64, 75, 77, 79], "laser": 25, "last": [11, 25, 30, 31, 32, 35, 36, 38, 43, 52, 57, 61, 62, 64, 65, 67, 75, 78, 79, 81, 84, 94, 95, 96, 97], "last_": 73, "last_iter": [61, 62], "last_t": 73, "lat": 15, "latenc": [13, 57, 71], "later": [17, 34, 57, 61, 66, 75, 79, 84, 89, 90, 92, 97, 100], "latest": [11, 13, 18, 33, 37, 47, 57, 60, 65, 72, 79, 84, 96, 97, 100], "latex": [61, 73], "latitud": [15, 54, 55], "latitude_geo": 54, "latitude_geo_param": 52, "latitude_lisa": 54, "latitude_lisa_param": 52, "latitude_ssb": 54, "latitude_ssb_param": 52, "latter": [56, 61, 62, 84, 95, 96], "lattic": [75, 84], "lattice_util": [49, 52, 84], "launch": [96, 98, 99], "law": [56, 57, 71], "layer": 19, "layout": [49, 52, 75, 79, 92], "lcf": [79, 84, 90, 94, 102], "lcst": 72, "ld_library_path": [46, 52], "lda": [28, 60, 79, 84, 90, 92, 93, 94, 97, 100, 101, 102], "ldc": [30, 35, 55, 72], "ldg": [10, 21, 47, 84, 90, 95, 96, 97], "ldr": 85, "le": 36, "lead": [30, 32, 62, 67, 73, 75, 76, 78, 84, 95, 102], "learn": [17, 39, 42], "least": [30, 41, 43, 46, 48, 52, 58, 59, 61, 62, 64, 74, 76, 84, 95, 97], "leav": [46, 64, 92, 96, 97], "left": [32, 43, 52, 56, 57, 59, 64, 72, 73, 76, 77, 78, 79, 84, 87, 92, 94, 96, 97, 99], "left_beta": 78, "left_taper_width": 66, "left_window": 78, "leftlen": 57, "leftlength": 57, "leftov": 67, "leftover_indic": 67, "legaci": [67, 93, 94, 102], "legacy_approximant_nam": [52, 66], "legacy_row_id_convert": [52, 67], "legend": [17, 23, 27, 51, 87], "lehner": 52, "leibler": 61, "len": [23, 27, 52, 56, 59, 64, 65, 67, 72, 78, 87, 88], "len_arm": [35, 72], "length": [1, 10, 15, 17, 21, 22, 24, 28, 30, 32, 33, 34, 35, 37, 38, 40, 43, 44, 51, 52, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 84, 87, 92, 94, 96, 97, 98, 99, 102], "length1": 57, "length2": 57, "length_dict": 72, "length_in_second": 102, "lepsilon": 39, "leq": [32, 56, 59], "less": [10, 30, 48, 52, 56, 57, 64, 65, 75, 78, 84, 94], "lest": 51, "let": [8, 28, 30, 43, 57, 64, 75, 76, 78, 79, 84, 87, 88, 92, 96, 99, 100], "letter": [55, 60], "level": [10, 11, 30, 41, 43, 47, 52, 56, 58, 62, 64, 65, 66, 67, 72, 74, 78, 79, 81, 84, 89, 92, 94, 96, 97, 98, 99, 101, 102], "levelnam": 52, "lexicograph": 52, "lfilter": 23, "lfloor": 64, "lfn": 79, "lho": 97, "li": 75, "lib": [48, 52], "lib64": 46, "libnam": 52, "librari": [29, 39, 46, 48, 52, 67, 73, 79, 84, 90, 94, 97, 99, 101, 102], "library_dir": 52, "library_nam": 52, "libutil": 49, "libver": 67, "licens": 88, "lie": [56, 57, 75, 79], "light": [52, 55, 57, 59, 85, 97], "light_travel_time_to_detector": [15, 52, 55], "lighter": [52, 75, 84], "lightr": [75, 84, 102], "ligo": [10, 13, 14, 23, 25, 27, 28, 29, 32, 33, 35, 38, 40, 41, 45, 47, 48, 52, 53, 67, 71, 73, 74, 79, 84, 86, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102], "ligo_datafind_serv": [33, 90, 92, 97], "ligogpstim": 79, "ligolw": [28, 49, 52, 57, 66, 72, 75, 76], "ligolw_add": [79, 97, 98, 99], "ligolw_cbc_align_total_spin": 99, "ligolw_cbc_hardware_inj_pag": 97, "ligolw_cbc_hardware_inj_page_id000020": 97, "ligolw_cbc_jitter_skyloc": 99, "ligolw_combine_seg": [97, 98, 99], "ligolw_print": 28, "ligolw_segment_query_dqsegdb": [28, 97, 98, 99], "ligolw_segments_from_cats_dqsegdb": [97, 98, 99], "ligolw_thinca": 92, "ligolwaddexecut": [52, 79, 89], "ligolwcontenthandl": [52, 67], "ligotimegp": [55, 59, 60, 76, 78, 79], "ligovirgo": [84, 92, 97], "like": [10, 14, 20, 28, 30, 32, 34, 37, 39, 41, 42, 46, 52, 56, 57, 59, 61, 62, 64, 65, 67, 71, 76, 79, 80, 83, 84, 87, 88, 92, 93, 95, 96, 97, 99, 100, 101, 102], "likelihood": [30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 52, 57, 61, 64, 65, 71, 96], "likelihood_funct": [61, 64], "likelihood_part": [61, 64], "likelihood_parts_det": [61, 64], "likelihood_parts_det_multi": [61, 64], "likelihood_parts_multi": [61, 64], "likelihood_parts_multi_v": [61, 64], "likelihood_parts_v": [61, 64], "likelihood_parts_v_pol": [61, 64], "likelihood_parts_v_pol_tim": [61, 64], "likelihood_parts_v_tim": [61, 64], "likelihood_parts_vector": [61, 64], "likelihood_parts_vectorp": [61, 64], "likelihood_parts_vectort": [61, 64], "likelihood_wrapp": [61, 64], "likewis": [30, 61, 67, 79], "lim_h1": 52, "lim_h2": 52, "lim_v1": 52, "lim_v2": 52, "limifo": 57, "limit": [10, 30, 32, 52, 56, 57, 59, 60, 67, 73, 78, 84, 92, 96, 97, 102], "limitedsizedict": [49, 52], "limits_param": 52, "lindex": [74, 76], "line": [1, 8, 15, 19, 30, 35, 36, 40, 44, 49, 52, 56, 57, 58, 61, 62, 64, 66, 68, 73, 75, 76, 78, 79, 80, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102], "line_color": 73, "line_model": [52, 74], "linear": [42, 52, 60, 64, 71, 72, 75, 76, 78], "linearbin": [49, 52], "linearli": [52, 72], "linearplusoverflowbin": [49, 52], "linecolor": 73, "linehtmltooltip": 73, "linestyl": [52, 73], "linetooltip": [52, 73], "linewidth": 51, "link": [19, 36, 45, 52, 57, 58, 68, 72, 73, 79, 84, 89, 92, 94, 97, 99, 102], "link_nam": 68, "linkag": 79, "linspac": [17, 52, 64], "linux": [18, 48, 79], "lisa": [8, 30, 42, 52, 54, 64, 72, 84], "lisa_": [35, 36], "lisa_a": [35, 36], "lisa_position_ssb": [52, 54], "lisa_psd_compon": [52, 72, 84], "lisa_smbhb": 36, "lisa_smbhb_inj_p": 35, "lisa_smbhb_ldc_p": 36, "lisa_smbhb_mass_tc": 35, "lisa_smbhb_mass_tc_": 36, "lisa_smbhb_mass_tc_0": 36, "lisa_smbhb_relbin": [35, 36], "lisa_t": [35, 36], "lisa_to_geo": [7, 30, 52, 54], "lisa_to_ssb": [7, 30, 52, 54], "lisatogeo": [7, 30, 49, 52], "lisatossb": [7, 30, 49, 52], "list": [1, 10, 14, 15, 19, 21, 25, 28, 30, 32, 34, 43, 44, 47, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "list_catalog": [52, 53], "listen": 85, "liter": 80, "littl": [19, 22, 30, 32, 33, 37, 79, 84, 90, 94, 100, 102], "live": [13, 19, 24, 49, 52, 57, 65, 71, 72, 76, 96, 97], "live_calc_psd_vari": [52, 72, 84], "live_create_filt": [52, 72, 84], "live_find_var_valu": [52, 72, 84], "live_pastro": [49, 52], "live_pastro_group": 71, "live_pastro_util": [49, 52], "livebatchmatchedfilt": [52, 57, 59], "livecoinctimeslidebackgroundestim": [52, 57], "livefilterbank": [52, 59, 78], "livesingl": [52, 57], "livingston": [14, 99], "ll": [27, 32, 33, 34, 37, 38, 39, 40, 51, 64, 95, 96, 100], "ll_data_cat_2_veto": 97, "llwadd": [84, 97, 98, 99], "lm": 78, "lm_amps_phas": [52, 78], "lm_arbitrary_harmon": [52, 78], "lm_deltaf": [52, 78], "lm_deltat": [52, 78], "lm_ffinal": [52, 78], "lm_freqs_tau": [52, 78], "lm_tfinal": [52, 78], "lmn": 78, "ln": 94, "lnps_per_walk": 61, "lnz": [62, 65], "lo": [36, 71], "lo_mchirp": 71, "load": [30, 32, 33, 36, 37, 41, 51, 52, 56, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 76, 78, 79, 89], "load_arrai": [52, 76], "load_data": [52, 73], "load_detector_config": [52, 55], "load_frequencyseri": [51, 52, 76], "load_from_config": [61, 65], "load_hdf5_to_dict": [52, 67], "load_html_metadata": [52, 73], "load_metadata_from_fil": [52, 73], "load_now": 78, "load_ns_sequ": [52, 69], "load_opt": [61, 63], "load_png_metadata": [52, 73], "load_sampl": 62, "load_segment_dict": [52, 73], "load_sourc": [49, 52], "load_stat": [52, 67], "load_time_slid": [52, 73], "load_timeseri": [52, 66, 76], "load_to_memori": [52, 78], "loadfil": [30, 41, 61, 62], "loadt": [52, 66], "lobe": [59, 76], "loc": [15, 55, 57, 87], "local": [10, 18, 45, 46, 47, 48, 52, 54, 55, 59, 60, 64, 71, 74, 79, 84, 90, 92, 94, 97, 99, 100, 102], "local_path": 79, "local_url": 79, "localhost": [79, 97], "localization_to_propagation_vector": [52, 54], "localtim": 52, "locat": [1, 10, 21, 25, 28, 30, 32, 33, 34, 37, 40, 42, 45, 46, 52, 55, 56, 57, 58, 59, 60, 64, 65, 67, 73, 75, 76, 77, 78, 79, 84, 85, 87, 90, 93, 94, 96, 97, 98, 99, 100, 102], "location_arg": [52, 78], "locations_to_cach": [52, 60], "lock": 67, "loeb": [52, 69], "log": [7, 10, 12, 18, 21, 28, 30, 31, 40, 41, 48, 49, 52, 56, 57, 59, 61, 62, 64, 65, 67, 71, 73, 74, 75, 76, 79, 83, 84, 87, 88, 94, 96, 97, 99, 101, 102], "log10": [73, 95], "log_chirp_width": 57, "log_datafind_command": [52, 79, 89, 90], "log_dir": 65, "log_evid": [61, 62], "log_fg_ratio": 71, "log_interv": 39, "log_likelihood": [61, 65], "log_nod": 74, "log_paramet": 73, "log_prior": [61, 65], "log_rat": 57, "log_rho_bg": [52, 71], "log_rho_fg": [52, 71], "log_rho_fg_analyt": [52, 71], "log_rho_fgmc": [52, 71], "log_scal": 73, "logarithm": [52, 56, 61, 73], "logarithmicbin": [49, 52], "logarithmicplusoverflowbin": [49, 52], "logbf": 71, "logbin": 52, "logdet": 64, "logdet_fit": [61, 64], "logformatt": [49, 52], "logfstep": [12, 76], "logic": [30, 58, 61, 67, 73, 78, 94], "logic_mask": 67, "logical_file_nam": 97, "login": 18, "logist": [7, 30, 49, 52], "logit": [7, 30, 49, 52], "logitq": [52, 64], "logitspin1_a": 64, "logj": 75, "logjacobian": [61, 64, 65], "logl": [64, 65], "logl_max": 65, "loglikehood": 64, "loglikelihood": [31, 34, 39, 61, 64, 65, 96], "loglikelihood_funct": 65, "loglog": [51, 71, 75], "loglogj": 75, "logloglogj": 75, "loglogloglogj": 75, "loglr": [39, 52, 57, 61, 64, 65], "loglr_region": 65, "lognl": [61, 64, 96], "lognoisel": 57, "lognoiser": [52, 57], "lognorm": [52, 56, 61, 64, 71], "logp": 65, "logpdf": [52, 56], "logplr": [44, 61, 64], "logpost": 61, "logpost_funct": 65, "logposterior": [61, 64], "logprior": [61, 64, 65], "logrecord": 52, "logregular": [49, 52], "logrithm": [8, 30, 78], "logsignalr": [52, 57], "logsignalrate_shar": [52, 57], "logsignalrateinternals_compute2detr": [52, 57], "logsignalrateinternals_computepsignalbin": [52, 57], "logspac": 74, "logv": 96, "logv_lookup": [52, 78], "logw": 64, "logwt": 65, "logz": [61, 65], "logz_err": [61, 65], "lomass": 71, "lomass_2": 71, "lon": 15, "long": [1, 30, 32, 55, 62, 65, 66, 72, 74, 78, 84, 92, 94, 96, 98, 99, 102], "long_asc_nod": [8, 30, 78], "long_descript": 88, "longer": [15, 22, 30, 55, 56, 57, 72, 76, 79, 84, 94, 95, 96, 100, 102], "longest": [10, 21, 32, 67, 96], "longitud": [8, 15, 30, 54, 55, 78], "longitude_geo": 54, "longitude_geo_param": 52, "longitude_lisa": 54, "longitude_lisa_param": 52, "longitude_ssb": 54, "longitude_ssb_param": 52, "longitudn": 55, "look": [1, 30, 53, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 75, 76, 77, 78, 79, 87, 88, 89, 92, 93, 95, 96, 97, 100], "lookback": [59, 71], "lookup": 57, "loop": [64, 67, 74, 75, 79], "loop_polar": 64, "loos": 67, "lorentzian": 52, "losc": [27, 38, 40], "lose": [84, 97], "lost": 52, "lot": [75, 84, 92, 94, 97], "loud": [59, 74], "louder": 57, "loudest": [67, 73, 79, 91, 94, 97], "love": 30, "low": [1, 10, 13, 17, 21, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 52, 56, 57, 59, 62, 64, 66, 67, 69, 70, 71, 72, 76, 77, 78, 80, 84, 91, 92, 94, 96, 97, 98, 102], "low_dist": 71, "low_fr": 70, "low_freq": 72, "low_freq_compon": 72, "low_freq_cutoff": [72, 74], "low_frequency_cutof": 70, "low_frequency_cutoff": [23, 27, 51, 59, 61, 64, 70, 72, 74, 76, 77, 78, 87, 94], "low_frequency_cutoff_dict": 72, "lower": [10, 21, 28, 32, 49, 52, 53, 56, 57, 59, 64, 68, 71, 72, 74, 75, 77, 78, 84, 93, 94, 96, 97, 102], "lower_frequency_cutoff": 78, "lowest": [32, 78], "lowpass": [52, 59, 76, 85], "lowpass_fir": [23, 27, 52, 59, 76], "lowpow": 51, "lrd": [84, 102], "lsc": [47, 84, 92, 97], "lscsoft": [47, 52, 93, 102], "lscsoft_git": [93, 101, 102], "lsctabl": [57, 67], "lseg": 14, "lt": 36, "luminos": [8, 30, 52, 55, 67, 71, 78, 96], "luminosity_dist": 52, "lvc": [14, 71, 89, 100], "lvc_rates_calc_posterior": 71, "lvk": 97, "lvk_catalog": [52, 53], "lw": [52, 67], "ly": 60, "m": [8, 10, 11, 12, 21, 28, 30, 32, 52, 54, 56, 59, 61, 64, 67, 69, 72, 74, 78, 84, 87, 93, 97, 102], "m1": [52, 57, 67, 71, 75, 78, 85], "m2": [52, 57, 67, 71, 75, 78, 85], "m_": [67, 72], "m_1": [8, 30, 52, 56, 73, 78], "m_2": [8, 30, 52, 56, 73, 78], "m_c": [17, 83], "m_chirp": 52, "m_dist": [52, 71], "m_src": 52, "m_total": 52, "mac": [18, 52], "machin": [47, 79, 90, 97, 99], "macport": 92, "macro": 79, "madau": 71, "made": [8, 10, 21, 30, 34, 43, 52, 56, 57, 60, 61, 64, 67, 73, 78, 79, 81, 84, 90, 91, 94, 96, 97, 102], "madra": 59, "mag": [36, 84, 92], "magic": [79, 92], "maginal_percentil": 73, "maginitud": 78, "magnitud": [10, 17, 30, 52, 54, 67, 69, 74, 78, 84], "mai": [10, 15, 23, 24, 27, 29, 30, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 75, 76, 78, 79, 84, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 102], "mail": 68, "mail_body_lin": 68, "mail_volunteers_error": [52, 68], "main": [10, 11, 21, 35, 41, 43, 45, 52, 75, 84, 95, 97, 99], "main_id0000001": 97, "maintain": [45, 81, 84], "major": [30, 81, 99], "make": [1, 10, 11, 15, 20, 21, 27, 30, 31, 32, 34, 42, 43, 45, 46, 47, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 72, 73, 74, 75, 78, 79, 81, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102], "make_all_bin": [52, 71], "make_analysis_dir": [52, 79, 89], "make_average_psd": [52, 79, 89], "make_bank_compression_plot": [52, 79, 89], "make_bin": [52, 71], "make_binned_hist": [52, 79, 89], "make_catalog": [52, 79, 89], "make_coinc_info": [52, 79, 89], "make_coinc_snrchi_plot": [52, 79, 89], "make_combine_split_bank": [52, 79, 89, 102], "make_compress_split_bank": [52, 79, 89, 102], "make_diagnostic_plot": [52, 79, 89], "make_dq_flag_trigger_rate_plot": [52, 79, 89], "make_dq_segment_t": [52, 79, 89], "make_external_cal": [52, 79, 89], "make_farstat_plot": [52, 79, 89], "make_foreground_censored_veto": [52, 79, 89], "make_foreground_t": [52, 79, 89], "make_foundmissed_plot": [52, 79, 89], "make_frequency_seri": [52, 59], "make_gating_nod": [52, 79, 89], "make_gating_plot": [52, 79, 89], "make_grb_segments_plot": [52, 73], "make_ifar_plot": [52, 79, 89], "make_inference_acceptance_rate_plot": [52, 79, 89], "make_inference_dynesty_run_plot": [52, 79, 89], "make_inference_dynesty_trace_plot": [52, 79, 89], "make_inference_inj_recovery_plot": [52, 79, 89], "make_inference_inj_workflow": 95, "make_inference_plot": [52, 79, 89], "make_inference_plot_mcmc_histori": [52, 79, 89], "make_inference_posterior_plot": [52, 79, 89], "make_inference_pp_plot": [52, 79, 89], "make_inference_pp_t": [52, 79, 89], "make_inference_prior_plot": [52, 79, 89], "make_inference_samples_plot": [52, 79, 89], "make_inference_skymap": [52, 79, 89], "make_inference_summary_t": [52, 79, 89], "make_inj_info": [52, 79, 89], "make_inj_t": [52, 79, 89], "make_ladd": 65, "make_output_dir": [52, 57], "make_plot_waveform_plot": [52, 79, 89], "make_posterior_workflow": [52, 79, 89], "make_psd_fil": [52, 79, 89], "make_pygrb_info_t": [52, 79, 89], "make_pygrb_injs_t": [52, 79, 89], "make_pygrb_plot": [52, 79, 89], "make_qscan": 79, "make_qscan_plot": [52, 79, 89], "make_range_plot": [52, 79, 89], "make_results_web_pag": [52, 79, 89], "make_seg_plot": [52, 79, 89], "make_seg_t": [52, 79, 89], "make_segments_plot": [52, 79, 89], "make_sensitivity_plot": [52, 79, 89], "make_single_hist": [52, 79, 89], "make_single_template_fil": [52, 79, 89], "make_single_template_plot": [52, 79, 89], "make_singles_plot": [52, 79, 89], "make_singles_timefreq": [52, 79, 89], "make_skipped_html": [52, 79, 89], "make_skygrid_nod": [52, 79, 89], "make_sngl_ifo": [52, 79, 89], "make_snrchi_plot": [52, 79, 89], "make_snrifar_plot": [52, 79, 89], "make_snrratehist_plot": [52, 79, 89], "make_spectrum_plot": [52, 79, 89], "make_strain_from_inj_object": [52, 66], "make_template_bin_t": [52, 79, 89], "make_template_plot": [52, 79, 89], "make_throughput_plot": [52, 79, 89], "make_trigger_timeseri": [52, 79, 89], "make_upload_fil": [52, 79, 89], "make_versioning_pag": [52, 79, 89], "make_veto_t": [52, 79, 89], "makecopi": 78, "makedir": [49, 52], "mako": 46, "man": [72, 97], "manag": [47, 48, 53, 57, 58, 59, 66, 67, 71, 73, 74, 77, 79, 97, 102], "manca": 84, "mandat": 97, "mangitud": 24, "mani": [14, 21, 22, 28, 30, 34, 39, 52, 57, 58, 59, 62, 64, 65, 75, 78, 79, 83, 84, 86, 91, 92, 96, 97, 99, 101], "manipul": [52, 57, 74, 75, 78], "manner": [34, 67], "manual": [64, 67, 72, 79, 95, 98], "map": [24, 44, 49, 52, 54, 56, 57, 61, 62, 64, 65, 66, 73, 74, 75, 78, 79, 84, 95, 96, 97, 99, 100], "map_fil": [49, 52], "map_param": [61, 64], "map_to_adjust": [52, 74], "mape": 65, "mapfil": 65, "mapper": 79, "march": 89, "marg_150914": 37, "margin": [17, 30, 31, 32, 35, 36, 42, 44, 53, 61, 64, 65, 73, 79, 96], "marginal_linestyl": 73, "marginal_percentil": 73, "marginal_titl": 73, "marginalize_dist": [37, 40, 64], "marginalize_distance_dens": [37, 40, 64], "marginalize_distance_interpol": [37, 40, 64], "marginalize_distance_param": [37, 40, 64], "marginalize_distance_sampl": [37, 40, 64], "marginalize_distance_snr_rang": [37, 40, 64], "marginalize_likelihood": [61, 64], "marginalize_loglr": [61, 64], "marginalize_phas": [37, 40, 64], "marginalize_sky_initial_sampl": 64, "marginalize_vector_param": [37, 40, 64], "marginalize_vector_sampl": [37, 40, 64], "marginalized_gaussian_nois": [3, 30, 42, 52, 61], "marginalized_hmpolphas": [3, 30, 42, 64], "marginalized_phas": [3, 30, 32, 42, 64, 95, 96], "marginalized_polar": [3, 30, 42, 64], "marginalized_tim": [3, 30, 37, 42, 64], "marginalized_vector_param": 40, "marginalized_vector_sampl": 40, "marginalizedhmpolphas": [3, 30, 42, 61, 64], "marginalizedphasegaussiannois": [3, 30, 32, 42, 61, 64], "marginalizedpolar": [3, 30, 42, 61, 64], "marginalizedtim": [3, 30, 37, 42, 61, 64], "marginin": 64, "margtim": 37, "mariginalized_phas": 96, "mark": [60, 76, 91], "markers": 12, "markov": [30, 61], "mask": [25, 52, 57, 60, 67], "mask_siz": [52, 67], "mask_to_n_loudest_clustered_ev": [52, 67], "mass": [0, 8, 10, 12, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 49, 52, 57, 67, 69, 71, 74, 75, 78, 79, 83, 84, 85, 92, 94, 96, 101, 102], "mass1": [8, 10, 15, 21, 23, 27, 28, 30, 32, 34, 35, 36, 37, 38, 40, 44, 52, 56, 61, 64, 67, 71, 75, 78, 79, 84, 85, 87, 92, 93, 94, 96, 97, 98, 102], "mass1_distribut": 17, "mass1_from_mass2_eta": [49, 52], "mass1_from_mchirp_eta": [49, 52], "mass1_from_mchirp_q": [17, 34, 35, 36, 49, 52], "mass1_from_mtotal_eta": [49, 52], "mass1_from_mtotal_q": [49, 52], "mass1_from_tau0_tau3": [49, 52], "mass1_mass2": 96, "mass1_mass2_spin1z_spin2z_to_beta_sigma_gamma": [49, 52], "mass1_mass2_to_mchirp_eta": [7, 30, 49, 52], "mass1_mass2_to_mchirp_q": [7, 30, 32, 52, 96], "mass1_mass2_to_mtotal_eta": [49, 52], "mass1_mass2_to_tau0_tau3": [49, 52], "mass1_mean": 56, "mass1_param": [52, 96], "mass1_ref": [34, 35, 36, 38], "mass1_sampl": 17, "mass1_var": 56, "mass1mass2tomchirpeta": [7, 30, 49, 52], "mass1mass2tomchirpq": [7, 30, 49, 52], "mass2": [8, 10, 15, 21, 23, 27, 28, 30, 32, 34, 35, 36, 37, 38, 40, 44, 52, 56, 61, 64, 67, 71, 75, 78, 79, 84, 85, 87, 92, 93, 94, 96, 97, 98, 102], "mass2_from_mass1_eta": [49, 52], "mass2_from_mchirp_eta": [49, 52], "mass2_from_mchirp_q": [17, 34, 35, 36, 49, 52], "mass2_from_mtotal_eta": [49, 52], "mass2_from_mtotal_q": [49, 52], "mass2_from_tau0_tau3": [49, 52], "mass2_gaussian": 17, "mass2_mean": 17, "mass2_param": [52, 96], "mass2_ref": [34, 35, 36, 38], "mass2_sampl": 17, "mass2_var": 17, "mass3": 17, "mass4": 17, "mass_bdari": 52, "mass_bin": 52, "mass_data": [49, 52], "mass_dict": 75, "mass_gap": 52, "mass_gap_separ": 52, "mass_lambda_fil": 52, "mass_lim": 56, "mass_limit": 52, "mass_param": [49, 52], "mass_range_param": 75, "massiv": [69, 84], "massparam": [75, 76], "massrang": 92, "massrangeparam": 75, "massrangeparamet": [52, 75, 84], "master": [10, 11, 18, 47, 52, 56, 65, 71, 73, 81, 97, 99], "match": [1, 10, 21, 24, 28, 30, 50, 52, 56, 57, 59, 60, 62, 63, 64, 65, 66, 72, 74, 75, 76, 77, 78, 79, 80, 85, 90, 91, 96, 97, 101, 102], "match_req": 75, "match_threshold": 66, "match_waveform": 87, "matched_filt": [23, 27, 49, 52, 59, 89, 97], "matched_filter_cor": [52, 59], "matchedfilt": [49, 52, 64, 97, 98], "matchedfilter_cpu": [49, 52], "matchedfilter_cupi": [49, 52], "matchedfilter_numpi": [49, 52], "matchedfilter_util": 92, "matchedfiltercontrol": [52, 59], "matchedfilterskymaxcontrol": [52, 59], "matchedfilterskymaxcontrolnophas": [52, 59], "matchedfltr": [92, 102], "matching_lin": [52, 74], "math": [30, 56, 59, 64, 73, 94, 97], "mathbf": 64, "mathcal": [56, 64], "mathemat": 56, "mathfrak": 78, "mathjax_html_head": [52, 73], "mathrm": [52, 56, 61, 64, 71], "matplotlib": [12, 14, 15, 17, 19, 23, 27, 50, 51, 73, 87, 88], "matric": 64, "matrix": [54, 57, 64, 75], "matter": [10, 19, 31, 84, 96], "max": [1, 10, 21, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 49, 52, 56, 59, 61, 62, 63, 64, 65, 71, 73, 76, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 102], "max_bh_spin_mag": 84, "max_bound": 52, "max_buff": [60, 74], "max_chirp_mass": [75, 83, 84, 102], "max_chunk": [79, 92], "max_curvature_from_refer": [61, 64], "max_dc_cal_err": 73, "max_dist": 74, "max_eta": [84, 102], "max_filter_dur": 76, "max_filter_len": [72, 76], "max_freq": 78, "max_help_posit": 75, "max_improvement_loop": 39, "max_it": 39, "max_kde_sampl": [65, 73], "max_length": 78, "max_loc": [52, 76], "max_mass1": [84, 102], "max_mass2": [84, 102], "max_median_stat": [52, 73], "max_ncal": 39, "max_ns_g_mass": 69, "max_ns_spin_mag": 84, "max_num_improvement_loop": 39, "max_param": 52, "max_penalti": 57, "max_posterior": [30, 32, 39, 52, 61, 96], "max_postrior": 30, "max_refinement_step": 65, "max_samples_per_chain": [61, 65], "max_shift": 64, "max_sig": 73, "max_snr": 28, "max_template_length": [78, 94], "max_tim": 57, "max_total_mass": [84, 102], "max_triggers_in_batch": 59, "max_z": 71, "maxbhspinmag": 75, "maxcal": [34, 40, 65], "maxdepth": 19, "maxel": 59, "maxeta": 75, "maxfg": 71, "maxim": [10, 57, 59, 64, 65, 75, 76, 77, 78, 94], "maxima": 75, "maximal_value_dof": 77, "maximim": 78, "maximis": 59, "maximum": [1, 10, 28, 30, 38, 47, 52, 56, 57, 59, 61, 63, 64, 65, 69, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 94, 96, 97, 102], "maximum_frequ": 74, "maximum_ifar": 57, "maxit": 65, "maxmass1": 75, "maxmass2": 75, "maxmc": [17, 56], "maxmcmc": [39, 65], "maxmimum": 73, "maxnsspinmag": 75, "maxpar": 57, "maxpt": 96, "maxq": [17, 56], "maxrp": 71, "maxruntimehour": 96, "maxtick": 73, "maxtim": 94, "maxtotmass": 75, "maxv": 52, "maxv1": 75, "maxv2": 75, "maxv3": 75, "maxval": 71, "maxvalu": 77, "maxz": 71, "mayb": [20, 79, 90], "mbhb_params_v2_lisa_fram": 36, "mbin": 52, "mbox": 71, "mc": [17, 52, 56, 73], "mc_cal_wf_err": [52, 73], "mc_distribut": 17, "mc_hi": 71, "mc_lo": 71, "mc_sampl": 17, "mchirp": [10, 12, 30, 32, 35, 36, 38, 52, 56, 63, 64, 67, 68, 71, 78, 85, 91, 94, 96, 97, 99, 101], "mchirp_area": 49, "mchirp_binless": 97, "mchirp_compress": [52, 78], "mchirp_eta_to_mass1_mass2": [7, 30, 38, 49, 52], "mchirp_from_mass1_mass2": [36, 49, 52, 95, 96], "mchirp_from_tau0": [49, 52], "mchirp_from_uniform_mass1_mass2": [0, 30, 34, 56], "mchirp_mass1_to_mass2": [49, 52], "mchirp_param": 52, "mchirp_q_to_mass1_mass2": [7, 30, 35, 36, 49, 52], "mchirp_ref": 36, "mchirp_sampl": 71, "mchirp_sampler_flat": [52, 71], "mchirp_sampler_imf": [52, 71], "mchirp_sampler_lnm": [52, 71], "mchirp_stat": 97, "mchirp_uncertainti": 52, "mchirpetatomass1mass2": [7, 30, 49, 52], "mchirpfromuniformmass1mass2": [0, 17, 30, 52, 56], "mchirpqtomass1mass2": [7, 30, 49, 52], "mchrip": 63, "mcmc": [30, 32, 37, 38, 40, 41, 43, 61, 62, 65, 79, 96], "mcmc_std": 61, "mcmcautocorrsupport": 43, "mcmcburnintest": [52, 61], "mcmcio": [41, 62], "mcmcmetadataio": [2, 41, 61, 62], "md5": 48, "mdc": 97, "mdet": 52, "me": [59, 84], "mean": [1, 8, 15, 17, 30, 32, 33, 34, 35, 37, 41, 43, 52, 56, 57, 59, 61, 64, 67, 71, 72, 76, 77, 78, 79, 83, 84, 92, 94, 96, 97, 98, 100, 102], "mean_dec": 56, "mean_efficiency_volum": [49, 52], "mean_if_greater_than_zero": [52, 57], "mean_per_ano": [8, 30, 78], "mean_ra": 56, "mean_squar": [52, 72, 84], "meaning": [78, 98], "meaningless": 51, "meant": 100, "measur": [1, 10, 29, 30, 32, 52, 55, 58, 59, 61, 64, 66, 72, 74, 84, 94, 102], "meco": [52, 64, 84, 102], "meco2": [49, 52], "meco_veloc": [49, 52], "median": [1, 28, 30, 32, 33, 34, 35, 37, 38, 40, 53, 57, 72, 73, 74, 83, 84, 94, 96, 97, 98, 102], "median1d": [12, 52, 53], "median_bia": [52, 72, 84], "median_sigma": 57, "meet": [22, 57, 89], "megabyt": 79, "megaparsec": 55, "megaparsecs_to_met": [49, 52], "member": [19, 29, 58], "memfp": 67, "memori": [10, 30, 57, 58, 59, 65, 67, 74, 76, 77, 78, 79, 84, 91, 92, 94, 96, 97, 99], "mention": [41, 43, 96, 97, 100], "menu": 97, "merg": [45, 52, 66, 67, 79, 90, 93, 97], "merge_full_data": 97, "merge_psd": [52, 79, 86, 89, 98], "merge_single_detector_hdf_fil": [52, 79, 89], "merged_trigg": [52, 79, 84, 89, 92, 97], "mergeexecut": [52, 79, 89], "merger": [8, 13, 27, 30, 32, 34, 38, 40, 42, 52, 53, 71, 78, 84, 85, 87, 88, 96], "merger_r": 71, "merger_rate_dens": [52, 71], "mergesort": 67, "meshgrid": 15, "messag": [19, 52, 75, 78, 84, 92, 94, 97, 99, 101, 102], "messeng": 29, "met": 43, "meta": 76, "meta_block_s": 67, "metadata": [25, 30, 41, 49, 52, 62, 64, 65, 66, 67, 79, 84, 96], "metadata_fil": 84, "metaio": 47, "metapars": [52, 73], "metavar": 76, "meter": 55, "method": [1, 10, 15, 28, 30, 32, 34, 35, 41, 43, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 72, 74, 76, 77, 78, 79, 84, 85, 90, 92, 93, 94, 97, 98, 99, 101, 102], "methodologi": 10, "metric": [52, 69, 75, 92, 102], "metric_freq": 75, "metric_param": 75, "metricparam": 75, "metricparamet": [52, 75, 84], "mhz": 72, "middl": [71, 79], "might": [10, 59, 64, 67, 72, 74, 75, 78, 79, 80, 84, 89, 92, 94, 97, 99, 100], "milkywai": [10, 21], "millisecond": 52, "min": [10, 17, 21, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 49, 52, 56, 57, 61, 63, 64, 73, 76, 84, 91, 92, 93, 94, 96, 97, 98, 99, 102], "min_bound": 52, "min_buffer_s": 57, "min_chirp_mass": [75, 84, 102], "min_dist": [74, 75], "min_ess": 39, "min_eta": [84, 102], "min_expected_psdvar": 57, "min_iter": [38, 52, 61], "min_mass1": [84, 102], "min_mass2": [84, 102], "min_match": [84, 102], "min_meta_keep": 67, "min_nifo": 57, "min_nsampl": 65, "min_num_live_point": 39, "min_param": 52, "min_raw_keep": 67, "min_refinement_step": 65, "min_seglen": 78, "min_total_mass": [84, 102], "min_z": 71, "mincount": 71, "mind": 96, "mindist": 75, "mineta": 75, "minifollop": 79, "minifollowup": [1, 30, 49, 52, 84, 89, 94, 102], "minim": [52, 75, 78, 84, 88, 102], "minima": 75, "minimize_scalar": 59, "minimum": [1, 28, 30, 52, 56, 57, 61, 63, 64, 65, 71, 72, 73, 74, 75, 78, 84, 92, 94, 96, 97, 99, 102], "minimum_buff": 78, "minimum_frequ": 74, "minimum_statistic_cutoff": 83, "minmass1": 75, "minmass2": 75, "minmc": [17, 56], "minor": [58, 81], "minpar": 57, "minq": [17, 56], "minrp": 71, "minseglength": 79, "mintotmass": 75, "minu": [40, 62, 72, 83, 100], "minumum": [84, 102], "minut": [31, 36, 37, 38, 40], "minv": 52, "minv1": 75, "minv2": 75, "minv3": 75, "misalign": 52, "mismatch": [52, 59, 75, 76, 78], "miss": [28, 40, 52, 64, 79, 84, 90, 91, 96], "missed_after_veto": 73, "missed_d": 52, "missed_mchirp": 52, "missingfram": [79, 90], "missingframeseg": [79, 90], "mission": 55, "misspel": 67, "mistaken": [97, 99], "mkdir": [11, 47, 48, 99], "mkl": [10, 22, 35, 37, 49, 52, 94, 97], "mklscheme": [49, 52], "mlvl": 58, "mm": 68, "mmdista": 75, "mn": 78, "mock": [35, 36], "mode": [8, 28, 30, 32, 36, 37, 42, 52, 57, 59, 62, 64, 67, 71, 73, 76, 78, 85, 94, 97, 102], "mode_arrai": [8, 30, 36, 78, 87], "mode_select": 87, "model": [1, 3, 20, 31, 32, 35, 36, 39, 41, 45, 47, 52, 54, 57, 61, 62, 65, 68, 71, 72, 74, 76, 78, 79, 80, 84, 87, 89, 94, 95, 96, 97, 98, 102], "model1": 64, "model2": 64, "model_delim": [61, 64], "model_label": 64, "model_nam": 64, "model_pdf": 71, "model_stat": [43, 61, 65], "modelstat": [61, 64], "modes_choic": [8, 30, 78], "modif": 51, "modifi": [33, 36, 64, 65, 72, 74, 76, 78, 79, 83, 84, 94, 97, 99, 101, 102], "modnam": 52, "modul": [12, 13, 14, 15, 16, 17, 25, 28, 30, 32, 35, 41, 43, 49, 83, 87, 88, 91, 97, 99], "modular": 75, "module_path": 88, "modulo": 67, "mofdel": 64, "mollweid": 15, "moment": [30, 52, 64, 69, 75, 84, 100, 102], "momentum": [8, 30, 52, 69, 78], "monitor": [84, 95, 96], "monitord": 97, "monopol": [8, 30, 52, 78], "monoton": [52, 57, 78, 83], "mont": [42, 52, 61, 64, 65, 73, 84], "month": [28, 73, 91], "more": [1, 10, 21, 22, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 45, 52, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 85, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102], "moreifotim": [52, 71], "most": [32, 35, 41, 42, 44, 45, 46, 52, 57, 58, 60, 61, 64, 67, 69, 73, 78, 79, 84, 90, 92, 95, 97, 99, 101, 102], "mostli": [52, 66, 95, 96], "moudl": [79, 93], "mount": [18, 47], "mousedown": 73, "move": [59, 73, 90, 97, 98, 99], "movi": [30, 31], "movie_fil": 44, "mp4": [31, 44], "mpc": [8, 30, 52, 67, 71, 78, 96], "mpi": [52, 65, 96], "mpl": 73, "mpld3": 73, "mpld3_util": [49, 52], "mpld3_zoomplugin": 73, "mplslide": [52, 73], "mratio": 84, "msolar": 71, "msun": [69, 84], "mtotal": [10, 21, 52, 61, 63, 67, 75, 84, 91, 93, 94, 97], "mtotal_binless": 97, "mtotal_eta_to_mass1_mass2": [49, 52], "mtotal_from_mass1_mass2": [49, 52], "mtotal_from_mchirp_eta": [49, 52], "mtotal_from_tau0_tau3": [49, 52], "mtotal_lt_30": 56, "mu": [52, 56, 59, 71, 75], "mu_high": 52, "mu_i": 75, "mu_in": 52, "mu_log_vt": 71, "mu_low": 52, "much": [10, 17, 19, 28, 29, 32, 41, 42, 58, 78, 79, 84, 87, 97, 100], "mul": 71, "mult_fac": 76, "multi": [29, 40, 41, 43, 52, 56, 57, 62, 64, 65, 72, 74, 76, 78, 97], "multi_ifo_coherent_job_setup": [52, 79, 89], "multi_loglikelihood": [61, 64], "multi_sign": [3, 30, 42, 64], "multi_signal_support": [61, 64], "multiband": [49, 52, 64, 87], "multiband_fd_waveform": [52, 78], "multicor": 47, "multidetdictoptionact": [52, 76], "multidetmulticolonoptionact": [52, 76], "multidetoptionact": [52, 76], "multidetoptionactionspeci": [52, 76], "multidetoptionappendact": [52, 76], "multiifo_noise_coincident_area": [52, 57], "multiifo_noise_logr": [52, 57], "multiifo_signal_coincident_area": [52, 57], "multiifostatmapdata": [52, 67], "multilin": 76, "multimod": 52, "multimode_bas": [52, 78], "multinest": [2, 5, 6, 30, 41, 43, 52, 61], "multinest_fil": [2, 41, 62], "multinestfil": [2, 41, 61, 62], "multinestsampl": [5, 6, 30, 43, 61, 65], "multipl": [1, 21, 22, 24, 30, 32, 33, 41, 42, 43, 47, 52, 56, 57, 61, 62, 64, 65, 67, 72, 75, 78, 79, 84, 85, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102], "multipli": [56, 57, 58, 59, 64, 65, 72, 74, 75, 76, 78], "multiply_and_add": [52, 76], "multiprocess": [52, 65, 94], "multiprocessing_nprocess": 94, "multiringbuff": [52, 57], "multisignalmodel": [3, 30, 42, 61, 64], "multitemperedautocorrsupport": 43, "multitemperedmcmcburnintest": [52, 61, 65], "multitemperedmcmcio": 62, "multitemperedsupport": [5, 43, 61, 65], "multivariate_norm": 64, "mus1": 75, "mus2": 75, "must": [10, 19, 21, 22, 28, 30, 32, 33, 34, 37, 41, 43, 47, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102], "mutual": [1, 30, 84, 94, 102], "my": [87, 88, 97], "my_workflow": 79, "myski": 40, "mysky_sampl": 40, "mysky_transform": 40, "n": [10, 22, 47, 52, 55, 56, 57, 59, 63, 64, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 84, 92, 97, 101, 102], "n1": [15, 58], "n2": 58, "n_bg": 57, "n_bin": 17, "n_d": 64, "n_effect": 65, "n_i": 64, "n_ifo": 57, "n_louder": 57, "n_louder_from_fit": [52, 57], "n_loudest": [67, 79], "n_node": 74, "n_point": [52, 74], "n_size": 17, "n_test_sampl": 56, "nacl": [30, 32, 39, 52, 61, 96], "nact": 65, "name": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 18, 21, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "name_all_dataset": [52, 67], "named_frequency_cutoff": 75, "namespac": [52, 57, 61, 62, 64, 76, 79, 92], "nan": [52, 62, 64, 66, 72], "narf": 67, "narg": [61, 62, 76], "nat": 61, "nativ": [78, 92], "natur": 88, "navi": 73, "navig": [89, 99], "nb": [52, 76, 79, 90], "nbank": 84, "nbatch": 58, "nbin": [57, 64], "nbinned0": 57, "nbinned1": 57, "nbinned2": 57, "nbyte": [52, 57, 76], "ncalcul": 61, "nchain": [39, 41, 61, 62, 65], "ncol": 17, "ncore": 57, "nd": 65, "ndarr": 76, "ndarrai": [17, 52, 53, 55, 56, 57, 59, 60, 62, 64, 67, 70, 71, 72, 76, 77, 78], "ndbin": [49, 52], "ndec": 73, "ndim": [52, 63, 76], "near_hwinj": [52, 74], "nearbi": [64, 75, 84], "nearest": [52, 64, 73, 75, 76, 78, 84], "nearest_larger_binary_numb": [49, 52], "nearest_sampl": 76, "necessari": [30, 32, 33, 37, 52, 57, 62, 66, 72, 73, 74, 75, 78, 79, 84, 86, 90, 95, 96, 97, 100], "necessarili": 78, "nee": 39, "need": [1, 8, 10, 11, 17, 22, 25, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 81, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "neg": [57, 62, 72, 73, 76, 78, 83], "negat": 14, "neglig": [52, 59], "neighborhood": 38, "neighbour": [59, 72], "neither": [52, 65, 97], "nessai": [2, 5, 6, 30, 41, 43, 52, 61], "nessai_fil": [2, 41, 62], "nessaifil": [2, 41, 61, 62], "nessaimodel": [61, 65], "nessaisampl": [5, 6, 30, 43, 61, 65], "nest": [39, 52, 56, 62, 65, 76, 79, 92, 96], "net_chisq": 57, "netsnr": 71, "network": [28, 57, 64, 68, 71, 74, 75, 79, 83, 97, 100], "network_chisq": [52, 57], "network_column": 57, "network_column_typ": 57, "network_logvol": 57, "network_snr": [57, 68], "neutron": [13, 30, 34, 52, 69, 75, 84], "neutron_star": [49, 52], "nevent": 67, "never": [30, 61, 65], "nevertheless": 84, "new": [10, 15, 16, 20, 30, 32, 41, 42, 43, 45, 52, 54, 55, 56, 57, 59, 62, 65, 66, 67, 72, 73, 74, 75, 76, 78, 79, 81, 84, 87, 92, 93, 94, 96, 99, 100, 101, 102], "new_arrai": 67, "new_cut": 57, "new_flmn": 78, "new_fram": 54, "new_l": 52, "new_m": 52, "new_map": 52, "new_multiifo_output_list_opt": [52, 79, 89], "new_output_file_opt": [52, 79, 89], "new_point": [61, 65], "new_point_log_prob": [61, 65], "new_psd_amp": 75, "new_psd_f": 75, "new_siz": 76, "new_snr": 94, "new_str": [79, 92], "new_taulmn": 78, "new_templ": [52, 57], "new_xi": 75, "newer": [96, 102], "newlin": 76, "newscienceseg": [79, 90], "newsnr": [52, 57, 67, 83, 94, 97], "newsnr_sgveto": [52, 57, 67, 94], "newsnr_sgveto_psdvar": [52, 57, 67, 94, 97], "newsnr_sgveto_psdvar_sc": [52, 57, 94], "newsnr_sgveto_psdvar_scaled_threshold": [52, 57, 94], "newsnr_sgveto_psdvar_threshold": [52, 57, 67, 83, 94], "newsnr_threshold": [52, 57, 59], "newstr": [79, 92], "newtonian": [75, 78], "next": [29, 47, 48, 60, 61, 72, 74, 78, 88, 94, 98, 99], "next_power_of_2": [52, 74], "nf": 47, "nfilter": 57, "ni": [58, 61], "nice": [19, 58, 75, 97], "nicer": 75, "nielsen": 10, "ninj": 95, "ninject": [32, 34, 35], "nissank": [52, 69], "niter": [30, 31, 38, 39, 61, 62, 65], "niteraiton": 41, "nitz": [21, 57, 88, 91], "nl": [52, 78], "nlive": [34, 35, 36, 37, 39, 40, 65, 96], "nlivepoint": [39, 61, 65], "nltide": [49, 52], "nltides_fourier_phase_differ": [52, 78], "nltides_gw_phase_diff_isco": [49, 52], "nm": 78, "nmode": 78, "no_cbc_hw_inj": 14, "no_diagon": 73, "no_intermedi": 98, "no_save_data": 64, "no_save_st": 65, "no_test": [90, 92, 97, 99, 100], "nodal": 74, "node": [8, 10, 30, 47, 52, 65, 78, 79, 84, 89, 90, 92, 93, 97, 99], "node_idx": 65, "nodefault": [52, 78], "noinjectionanalysi": [79, 94], "noinputfileerror": [61, 62], "nois": [1, 9, 10, 23, 30, 32, 34, 35, 37, 38, 42, 49, 51, 52, 57, 59, 64, 68, 71, 72, 80, 83, 84, 85, 94, 95, 96, 102], "noise_data": 72, "noise_density_from_far": [52, 71], "noise_from_psd": [23, 50, 51, 52, 70, 84], "noise_from_str": [52, 70, 84], "noisi": 83, "nojekyl": 11, "nomenclatur": 79, "nomin": 59, "nomral": 75, "non": [47, 52, 56, 60, 64, 69, 72, 76, 78, 79, 94, 97, 102], "none": [8, 30, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 87, 90, 92, 93, 94, 97, 100, 101, 102], "nonfsio": 79, "nonlinear": 78, "nonlinear_tidal_spa": [52, 78], "nonnegative_float": [52, 76], "nonnegative_int": [52, 76], "nonsens": 97, "nonspin": [52, 75, 97], "nonzero": 79, "noop": [97, 101], "nor": [62, 67, 76, 95, 97], "norm": [17, 52, 56, 59, 75, 76, 77], "norm_coalescence_r": 71, "norm_map": 75, "norm_redshift_distribut": [52, 71], "norm_se": 56, "norm_toler": 56, "normal": [1, 30, 31, 39, 52, 55, 56, 57, 59, 60, 61, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 84, 89, 94, 97, 99, 100, 101, 102], "normal2d": 31, "normal2d_mcmc_evolut": 31, "normaldiscret": 63, "normalis": [57, 83], "normalize_azimuth": [52, 56], "normalize_by_r": 74, "normalize_fit_r": [83, 97], "normalize_pdf": [49, 52], "normalize_strain": [84, 94, 102], "normwis": 76, "north": [15, 55, 56, 75], "northern": 56, "nosi": 70, "not_burned_in_it": 61, "notabl": 10, "notat": [56, 67, 73], "notch": [59, 76], "notch_fir": [52, 59, 76], "note": [10, 15, 21, 22, 25, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 43, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101], "notebook": 88, "noth": [52, 56, 72, 74, 75, 84, 90, 94, 97, 101, 102], "notic": [24, 32, 84, 95, 96], "notimplementederror": [52, 56, 66], "notyetcr": [79, 93, 94, 101], "novaliddataerror": [61, 64], "novemb": 86, "novic": 92, "now": [11, 17, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 46, 47, 48, 56, 57, 64, 76, 79, 84, 90, 91, 92, 94, 97, 99, 100, 101], "nowaveformerror": [52, 64, 78], "np": [15, 17, 22, 36, 52, 54, 56, 57, 67, 72, 74, 77], "nparamet": [30, 61], "npfft": [49, 52], "npoint": 71, "npoints_tim": 74, "nproc": [32, 33], "nprocess": [31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 65, 94, 96], "npy": [51, 76], "nr": [8, 30, 78], "nr_hdf5": 87, "nrhyb": 78, "nrhybsur3dq8": [78, 87], "nrow": 17, "nrsur": 78, "nrsur4d2": 87, "nrsur7dq2": 87, "nrsur7dq4": [52, 87], "nrsur7dq4remn": 52, "nrsurrog": 78, "nrun": [95, 96], "ns_b_mass": 69, "ns_bh_boundary_mass": [75, 84], "ns_bh_mass_boundari": 52, "ns_compact": 69, "ns_eo": [75, 84, 102], "ns_g_mass": 69, "ns_mass": 69, "ns_sequenc": 69, "nsampl": [32, 39, 56, 61, 64, 65, 71, 96], "nsamples_in_chain": [61, 62], "nsbh": [10, 71, 84, 96], "nsbhflag": 75, "nsf": 47, "nstat": 65, "ntemp": [30, 32, 38, 39, 61, 62, 65, 96], "ntemplat": 57, "nth": 79, "nthread": [39, 58], "ntop": 71, "nuissanc": 42, "null": [57, 67, 73], "null_adv": [52, 60], "null_advance_strain": [52, 74], "null_grad": 57, "null_min": 57, "null_snr": [52, 57], "null_step": 57, "num": [1, 17, 30, 52, 56, 57, 64, 67, 73, 76, 77, 78, 79, 84, 94, 95, 97, 99, 101, 102], "num_above_zero": 57, "num_bank": 79, "num_bin": [23, 24, 57, 77], "num_coinc": 57, "num_el": [52, 57], "num_failed_cutoff": 84, "num_gauss_sampl": 39, "num_great": [52, 57], "num_job": 79, "num_keep": 57, "num_mc_inj": 73, "num_point": 77, "num_r": 57, "num_sampl": [40, 62, 64, 65], "num_se": 84, "num_seg": 72, "num_split": 79, "num_templ": 57, "num_thread": [52, 94], "number": [1, 10, 13, 17, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 40, 43, 47, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102], "numer": [32, 33, 37, 40, 42, 52, 56, 57, 58, 61, 64, 69, 72, 73, 75, 76, 78, 79, 83, 84, 89, 102], "numiter": 75, "numjobstart": 97, "numjumppoint": 75, "nump": 53, "numpi": [15, 17, 19, 22, 23, 25, 28, 30, 36, 46, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 88, 94, 102], "numpoint": 75, "numpy_arrai": 75, "numpyschem": [49, 52], "numrel_data": [8, 30, 78], "nvidia": 46, "nwalker": [30, 31, 32, 38, 39, 61, 62, 65, 96], "nyquist": [59, 64, 74, 76], "o": [12, 16, 30, 37, 38, 40, 52, 61, 62, 64, 79, 84, 90, 96, 101, 102], "o1": [10, 15, 71, 74, 84, 95, 96, 97], "o1_script": 71, "o2": [74, 95, 96, 97, 100], "o2templatebank": 84, "o3": [74, 96, 100], "o4": 80, "obei": [56, 84, 92, 100], "obj": [62, 73, 78], "object": [8, 13, 17, 25, 30, 32, 43, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 90, 92, 94, 102], "objet": 58, "obliqu": 54, "obscur": 92, "observ": [13, 15, 34, 59, 64, 71, 72, 74, 84, 85, 99], "observatori": [15, 28, 53, 55, 79, 90], "obtain": [1, 30, 32, 43, 56, 57, 62, 65, 67, 71, 74, 75, 77, 78, 79, 80, 84, 90, 94, 97, 99, 102], "obviou": [67, 97], "obvious": 94, "occasion": 97, "occupi": 57, "occur": [30, 37, 52, 57, 62, 66, 68, 75, 78, 87, 88, 90, 96], "occurr": 71, "octufmode1": [8, 30, 78], "octufmode2": [8, 30, 78], "octupolar": [8, 30, 78], "odd": [32, 59, 76, 100], "odds_summari": [52, 71], "odot": 61, "odtyp": 58, "off": [52, 56, 59, 61, 62, 64, 73, 74, 78, 79, 84, 96, 97, 100], "off_fil": 79, "offbase_fract": 65, "offer": [22, 41, 43, 52], "offici": [45, 65], "offlin": [13, 57, 59, 67, 79, 97, 99], "offline_er8": 99, "offset": [54, 56, 57, 64, 73, 78, 87, 88, 94, 97], "offset1": 94, "offset2": 94, "offsourc": [59, 73, 79, 100], "offtrial_1": 79, "offtrial_n": 79, "often": [22, 39, 42, 61, 84, 87, 92, 100], "ogc": 34, "ohm": 84, "ok": [96, 97], "okai": [84, 92, 100], "old": [48, 54, 57, 66, 67, 79, 81, 90, 97, 99], "old_act": 65, "old_fram": 54, "old_map": 52, "old_vector": 75, "older": [48, 81], "om": 72, "omega": [59, 72], "omega_220": 52, "omega_len": 72, "omega_length": [52, 72, 84], "omit": [52, 59, 67, 74, 76, 84, 97], "omp_num_thread": [32, 33, 35, 36, 37], "oms_noise_level": [35, 72], "on_fil": 79, "on_gap": 90, "onactiv": 73, "onc": [10, 18, 21, 22, 30, 45, 47, 48, 52, 58, 62, 72, 75, 79, 84, 87, 90, 92, 95, 96, 97, 98, 99], "ondeactiv": 73, "ondraw": 73, "one": [1, 13, 18, 21, 22, 24, 28, 30, 32, 34, 35, 36, 41, 42, 43, 45, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "onepn": [75, 84, 102], "onepointfivepn": [75, 84, 102], "ones": [22, 25, 39, 51, 52, 56, 57, 59, 64, 72, 75, 76, 78, 79, 84, 85, 90, 92, 97, 102], "onesid": [77, 94], "ongo": 29, "onli": [1, 8, 10, 17, 22, 24, 28, 30, 32, 33, 34, 37, 39, 40, 41, 43, 47, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102], "onlin": 64, "onsourc": [59, 73, 79, 100], "onsource_fil": 79, "onto": [52, 57, 76], "onward": 97, "op": 71, "open": [15, 28, 33, 36, 52, 56, 60, 61, 62, 64, 65, 67, 73, 74, 75, 78, 86, 88], "openbound": [49, 52], "opencl": 87, "openmp": 94, "opensciencegrid": 97, "oper": [9, 30, 58, 66, 67, 75, 76, 79, 94, 101], "opimt": 64, "opitm": 64, "oppos": [79, 84, 90], "opposit": [52, 75], "opt": [10, 18, 45, 47, 49, 57, 58, 61, 62, 63, 64, 66, 72, 73, 74, 75, 76, 79, 92], "opt_1": 79, "opt_list": 76, "optdict": 75, "optgroup": 58, "optim": [1, 10, 22, 30, 37, 39, 42, 52, 55, 57, 58, 59, 61, 64, 66, 68, 78, 79, 84, 93, 94, 97, 102], "optimal_dec_from_detector": [49, 52], "optimal_orient": [52, 55], "optimal_ra_from_detector": [49, 52], "optimal_snr": 67, "optimize_di": [52, 68], "optimize_pso": [52, 68], "optimize_shgo": [52, 68], "optimized_kd": 73, "optimized_match": [52, 59], "option": [1, 10, 15, 18, 21, 28, 30, 32, 37, 39, 40, 42, 44, 45, 47, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "option1": [79, 92], "option2": [79, 92], "option_group": 75, "option_nam": [79, 92, 100], "option_str": 76, "option_util": [49, 52, 62, 84], "optiongroup": [72, 74, 75, 79, 92], "optionpars": [52, 57, 58, 72, 74, 75, 76], "opton": 61, "optpars": [49, 52, 57, 72, 74], "opts_dict": 68, "orang": 79, "orbit": [8, 30, 42, 52, 54, 55, 59, 64, 69, 71, 75, 78, 84, 102], "orbital_l": [8, 30, 78], "orca": 57, "order": [8, 10, 19, 21, 28, 30, 32, 35, 37, 38, 42, 43, 44, 47, 52, 56, 57, 59, 61, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 78, 79, 80, 83, 84, 87, 92, 94, 95, 96, 97, 99, 100, 102], "order_transform": [49, 52], "ordereddict": 52, "ordin": 52, "ordinarili": 78, "org": [23, 27, 33, 36, 37, 38, 40, 45, 47, 48, 52, 57, 58, 59, 64, 71, 74, 76, 77, 78, 79, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102], "organ": [41, 67, 71, 97, 99], "orient": [15, 32, 52, 55], "orig_out": [79, 90], "origin": [8, 11, 23, 30, 52, 54, 56, 57, 62, 64, 74, 75, 76, 78, 79, 90, 97], "orphan": 11, "os": 52, "os_releas": 79, "os_typ": 79, "os_vers": 79, "oscil": 78, "oserror": 78, "osg": [47, 79, 97], "osi": 88, "ot": 78, "other": [9, 11, 19, 22, 24, 28, 29, 30, 36, 39, 40, 41, 42, 43, 48, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 71, 72, 73, 75, 76, 78, 79, 81, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102], "other_detector": 55, "other_loc": 55, "other_statmap_fil": 79, "others_lognl": [61, 64], "otherw": 65, "otherwis": [32, 33, 42, 52, 56, 57, 58, 59, 61, 62, 64, 65, 67, 73, 74, 76, 77, 78, 79, 84, 91, 92, 94, 97], "otyp": 58, "our": [18, 28, 29, 32, 33, 34, 35, 37, 42, 56, 84, 87, 88, 99], "out": [11, 22, 27, 28, 29, 30, 43, 52, 57, 58, 59, 61, 62, 64, 65, 67, 69, 71, 74, 75, 76, 78, 79, 83, 84, 89, 92, 95, 96, 97, 99, 100], "out_basenam": 79, "out_callback": 58, "out_cross": 78, "out_dir": [73, 79, 93, 100, 101, 102], "out_fil": 79, "out_kmax": [52, 58], "out_kmin": [52, 58], "out_plu": 78, "outarr": 22, "outcross": 78, "outdir": 79, "outdoc": 75, "outfil": [79, 97], "outfilelist": [79, 90], "outgrouplist": [79, 90], "outl": 57, "outlier": [1, 30, 72, 84, 94, 102], "outlin": [14, 99], "outnam": [57, 67], "outofsampl": [61, 65], "outplu": 78, "output": [1, 19, 22, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 52, 55, 57, 58, 59, 60, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102], "output_all_point": [52, 75, 84], "output_arg": 52, "output_arrai": 22, "output_bank_to_fil": [52, 75, 84], "output_bank_to_hdf": [52, 75, 84], "output_dir": [79, 84, 93, 94, 97, 99, 102], "output_dur": 75, "output_fil": [44, 52, 62, 65, 79, 84, 89, 102], "output_file_extens": 79, "output_filenam": [73, 101], "output_fmt": 79, "output_freq": 75, "output_intermedi": 74, "output_map": [52, 79, 84, 89], "output_map_fil": 79, "output_map_path": 79, "output_map_str": [52, 79, 89], "output_path": [28, 32, 33], "output_prefix": [44, 101], "output_sngl_inspiral_t": [52, 75, 84], "outputdir": [79, 90], "outputfil": 75, "outputvar": [49, 52, 96], "outsid": [30, 51, 57, 58, 64, 67, 72, 76, 80, 83, 84, 96, 99, 100], "outspiral_loop": [52, 75, 84], "outv": 57, "outvar1": 52, "outvar2": 52, "outvec": 58, "outward": 75, "over": [1, 10, 30, 32, 34, 37, 38, 42, 52, 57, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 91, 94, 96, 97, 98, 99, 102], "overal": [37, 42, 64, 78, 97, 99], "overcov": 84, "overcoverag": 84, "overestim": [59, 78], "overflow": [52, 73, 75], "overhead": [52, 55, 67], "overhead_antenna_pattern": [52, 55], "overlap": [10, 28, 32, 51, 52, 59, 64, 66, 72, 75, 76, 77, 78, 79, 84, 90, 92, 94, 97], "overlap_cplx": [52, 59], "overrid": [1, 18, 22, 30, 41, 43, 52, 60, 62, 64, 65, 67, 76, 78, 79, 84, 85, 94, 95, 96, 97, 99, 102], "overridden": [43, 52, 62, 76, 79, 84, 88, 92, 93], "override_file_if_exist": 79, "override_ifo": 52, "overriden": [62, 78, 79, 84, 92, 94], "overridetupl": [76, 79, 92], "overton": [52, 78], "overview": [19, 79, 97, 100], "overwhit": 74, "overwhiten": [1, 30, 64, 74, 77, 84, 94, 102], "overwhitened_data": [52, 74], "overwrit": [67, 73, 74, 97], "overwrite_opt": [76, 79], "overwritten": [52, 62, 67, 74, 78, 90, 92], "owen": 84, "own": [19, 20, 30, 32, 35, 42, 43, 45, 47, 62, 64, 87, 92, 95, 96, 97], "p": [1, 17, 18, 30, 31, 36, 45, 47, 48, 52, 54, 56, 57, 59, 61, 63, 64, 69, 71, 73, 78, 84, 94, 95, 97, 99, 102], "p0": [61, 65], "p1": [51, 76], "p1700349": [38, 40], "p2": 51, "p_astro": 71, "p_b": 71, "p_bg": [52, 71], "p_index": 36, "p_m1_m2": 71, "p_t": 71, "p_tau": [52, 71], "p_terr": 71, "p_x": 64, "p_y": 64, "packag": [12, 30, 36, 39, 45, 46, 47, 48, 49, 84, 86, 87, 88, 89, 94, 97, 99, 101, 102], "pad": [1, 17, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 52, 59, 60, 62, 64, 74, 78, 79, 80, 84, 94, 96, 97, 98, 99, 102], "pad_data": [64, 84, 94, 102], "pad_half_width": [1, 30, 84, 94, 102], "padata": 71, "page": [10, 13, 16, 17, 19, 21, 28, 29, 30, 39, 42, 47, 73, 76, 79, 81, 82, 84, 86, 89, 90, 91, 92, 97, 99, 100], "page_buf_s": 67, "page_farstat": 79, "page_foreground": [91, 97], "page_foreground_xmlloudest": 86, "page_ifar": 79, "page_inject": 97, "page_s": 73, "page_segplot": 98, "page_segt": 98, "page_vers": 84, "paint": [1, 30, 74, 76, 84, 94, 102], "pair": [17, 52, 57, 62, 71, 78, 90, 93, 99], "pan": 52, "pannaral": 84, "paper": [13, 52, 57, 72, 77, 98, 102], "par": 57, "parallel": [30, 31, 32, 52, 62, 64, 65, 75, 84, 89, 91, 94, 96, 97, 101], "parallel_thresh_clust": [52, 57], "parallel_threshold": [52, 57], "parallelizt": 65, "param": [1, 30, 32, 34, 35, 36, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 71, 73, 74, 75, 76, 78, 79, 84, 94, 95, 96, 102], "param1": [56, 73, 79], "param2": [52, 56, 58, 73, 79], "param_nam": 56, "param_ref": 64, "param_tupl": 78, "paramat": [10, 21], "paramet": [1, 8, 10, 13, 17, 20, 28, 29, 31, 32, 34, 37, 38, 41, 44, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 87, 88, 90, 91, 92, 93, 94, 97, 100, 101, 102], "parameter": 64, "parameter_cut_funct": 57, "parameter_nam": 62, "parameterlist": [52, 78], "parameters_label": 61, "parametersof": [1, 30, 84, 94, 102], "params_fil": [36, 56], "params_str": 79, "params_tru": 36, "params_true_al": 36, "paramt": [10, 21, 56], "paras": 79, "parent": [43, 52, 67, 79], "parent_workflow": 79, "pars": [52, 56, 57, 58, 61, 62, 64, 65, 67, 71, 72, 73, 74, 75, 76, 78, 79, 84, 92, 97, 99], "parse_approxim": [52, 78], "parse_approximant_arg": [52, 78], "parse_arg": [57, 61, 62, 64], "parse_boolarg": [52, 67, 78], "parse_flag_str": [49, 52], "parse_known_arg": [61, 62], "parse_mod": [52, 78], "parse_opt": [52, 77], "parse_paramet": [52, 61, 62, 67], "parse_segdict_kei": [52, 79, 89], "parse_statistic_feature_opt": [52, 57], "parse_veto_defin": [49, 52], "parse_workflow_ini_fil": [52, 79, 89], "parsecs_to_met": [49, 52], "parsed_definit": 52, "parsed_filepath": 79, "parsedfilepath": [76, 79, 92], "parselabelarg": [52, 61], "parseparametersarg": [52, 61], "parser": [52, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 92, 100], "parser_support": [49, 52], "parsetempsarg": [61, 62], "parsev": 72, "part": [10, 48, 52, 56, 57, 63, 64, 66, 67, 74, 75, 76, 78, 79, 82, 84, 89, 90, 92, 93, 94, 97, 100, 101, 102], "partial": [56, 64, 69], "partial_result": 10, "partial_workflow": 97, "particip": 57, "particl": 52, "particular": [10, 34, 52, 53, 56, 57, 59, 60, 65, 66, 67, 72, 74, 79, 80, 83, 92, 93, 97], "particularli": [10, 84], "partit": 75, "partitioned_bank": [49, 52, 84], "partitionedtmpltbank": [52, 75, 84], "parval": 57, "pass": [1, 8, 28, 30, 32, 33, 34, 37, 38, 40, 52, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 85, 88, 92, 94, 95, 96, 97, 98, 99, 102], "past": [61, 100], "pastrodata": [52, 71], "patch": [56, 81], "path": [1, 10, 11, 15, 17, 21, 24, 25, 28, 30, 33, 37, 46, 47, 48, 52, 56, 57, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 79, 84, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "pattern": [52, 55, 60, 75, 78, 85, 97], "pbin": 57, "pc10": 21, "pcdev1": 28, "pcolormesh": 12, "pdf": [12, 14, 15, 17, 23, 27, 50, 51, 52, 56, 57, 61, 64, 65, 69, 71, 73, 87, 88], "pdf1": 61, "pdf2": 61, "pdf_z_astro": [52, 71], "pdif": 57, "pe": [35, 56], "peak": [38, 40, 42, 59, 64, 77, 78], "peak_lock_ratio": 64, "peak_lock_region": 64, "peak_lock_snr": [40, 64], "peak_min_snr": 40, "peak_snr_threshold": 64, "peak_tim": 59, "peas": 71, "pecentil": 73, "pegasu": [76, 79, 84, 90, 98], "pegasus_analyz": 97, "pegasus_file_directori": 97, "pegasus_plot": 99, "pegasus_profil": [79, 84, 96, 97, 98, 99], "pegasus_sit": [49, 52, 89], "pegasus_workflow": [49, 52, 89], "pegeasu": 99, "pend": 78, "penultim": [30, 74], "peopl": [68, 84, 86, 91], "per": [10, 21, 28, 30, 32, 39, 52, 57, 65, 71, 72, 79, 84, 90, 96, 98, 101, 102], "per_walk": 65, "percentag": [59, 73], "percentil": [31, 35, 36, 40, 73, 95], "perez": 69, "perfect": 57, "perfer": 42, "perfomm": 22, "perform": [23, 28, 30, 32, 34, 40, 42, 44, 48, 57, 58, 59, 61, 65, 66, 67, 75, 77, 78, 79, 84, 85, 89, 90, 91, 93, 94, 95, 96, 97, 99, 102], "perform_coincid": 57, "perform_exe_expans": [52, 79, 89, 92], "perform_extended_interpol": [52, 76, 79, 89], "perhap": 99, "periastron": [8, 30, 78], "period": [24, 48, 52, 54, 59, 65, 76, 84, 98], "periodic_hold": 97, "periodic_releas": 97, "periodic_remov": 97, "perl": 97, "permiss": [79, 92], "permit": [42, 91], "perpendicular": 52, "persist": [67, 71], "person": [19, 84], "perspect": 79, "perus": 30, "pesummari": 52, "pfa2": 78, "pfa3": 78, "pfa4": 78, "pfa5": 78, "pfa6": 78, "pfa7": 78, "pfan": 78, "pfl5": 78, "pfl6": 78, "pfn": [79, 97], "pg": 69, "pg_isso_eq": [52, 69], "pg_isso_eq_dr": [52, 69], "pg_isso_eq_dr2": [52, 69], "pg_isso_solv": [49, 52], "ph": 73, "phase": [8, 10, 23, 24, 27, 30, 32, 37, 42, 52, 57, 58, 59, 64, 66, 74, 75, 76, 77, 78, 83, 85, 94, 96, 97], "phase_fac": [61, 64], "phase_from_frequencyseri": [52, 78], "phase_from_polar": [52, 78, 87], "phase_median_nod": 74, "phase_ord": [8, 30, 52, 66, 78, 87], "phase_sigma_nod": 74, "phaseatcoalesc": 36, "phasetd": [83, 97], "phasetdstatist": [52, 57], "phenomenon": 87, "phenomhm": [12, 15, 84, 87, 94, 97, 99, 101, 102], "phenspintaylor": 87, "phenspintaylorrd": [21, 87], "phi": [17, 52, 54, 56, 59, 64, 74, 78], "phi1_from_phi_a_phi_": [49, 52], "phi210": 78, "phi220": 78, "phi2_from_phi_a_phi_": [49, 52], "phi_": [49, 52, 78], "phi_0": 44, "phi_a": [49, 52], "phi_from_spinx_spini": [49, 52], "phi_high": 17, "phi_low": 17, "phi_lower_bound": 17, "phi_mean": 56, "phi_upper_bound": 17, "phi_var": 56, "phijl": 52, "philmn": 78, "phiref": 52, "php": 97, "phy": [28, 59, 84, 92, 97, 98, 99], "physic": [15, 34, 57, 60, 64, 69, 72, 75, 78, 79, 84, 88, 97, 102], "physical_file_url": 97, "physical_model": 74, "physicalmodel": [52, 74], "physrevd": [52, 72], "pi": [15, 17, 34, 44, 52, 54, 56, 63, 64, 69, 72, 78, 87, 88], "pick": [34, 48, 57, 81, 92], "pick_best_coinc": [52, 57], "pick_tile_s": [52, 79, 89], "pickel": 62, "pickl": [36, 62, 67, 73, 79], "picklabl": 67, "pie": 99, "piec": [10, 42, 99, 101], "piecewis": 52, "pim": 78, "pip": [29, 45, 46, 86, 96], "pipe": 36, "pipedown": [92, 93, 94], "pipelin": [13, 47, 79, 90, 91, 92, 93, 97, 99], "pivot": [57, 79], "pivot_ifo": 79, "pixel": 56, "pixel_corn": [52, 56], "pkg": 52, "pkg_config": [49, 52], "pkg_config_check_exist": [49, 52], "pkg_config_header_str": [49, 52], "pkg_config_libdir": [49, 52], "pkg_librari": 52, "pkg_libri": 52, "pkl": 36, "place": [10, 21, 24, 30, 32, 40, 48, 52, 56, 59, 64, 65, 67, 73, 74, 75, 76, 79, 84, 86, 92, 95, 97, 98, 99, 101, 102], "placehold": 55, "placement": [10, 75, 83], "plai": [27, 52, 57, 84], "plain": 97, "plan": [52, 58, 79, 84, 87, 94, 102], "plan_and_submit": [52, 79, 89], "plan_first_phas": [52, 58], "plan_now": 79, "plan_transpos": [52, 58], "planck": 96, "planck15": 52, "planck15_lal_cosmologi": 52, "plane": [52, 54, 55, 59], "planner": [92, 97], "plasma": 73, "plate": 79, "platform": [18, 45], "pleas": [13, 19, 27, 29, 35, 36, 56, 66, 71, 72, 75, 76, 78, 81, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102], "plong": 72, "plot": [10, 17, 21, 23, 30, 31, 35, 36, 37, 38, 39, 40, 49, 50, 51, 52, 61, 62, 67, 71, 76, 85, 88, 89, 95, 96, 97, 98], "plot_acceptance_r": [79, 96], "plot_bg": [52, 71], "plot_cod": 36, "plot_coinc_snrchi": 97, "plot_contour": 73, "plot_dens": 73, "plot_dynesty_run": 79, "plot_dynesty_traceplot": 79, "plot_extens": 71, "plot_fil": 79, "plot_foundmiss": [91, 97], "plot_inj": [52, 71], "plot_lim": 71, "plot_margin": 73, "plot_marginal_lin": 73, "plot_max": 73, "plot_maxl": 73, "plot_mcmc_histori": 79, "plot_min": 73, "plot_param": [79, 96], "plot_posterior": [61, 79, 95, 96], "plot_posterior_summari": [79, 95, 96], "plot_pp": [79, 95], "plot_prior": [79, 96], "plot_prior_from_fil": 79, "plot_rang": 98, "plot_ranges_from_cli": [52, 61], "plot_sampl": [79, 96], "plot_scatt": 73, "plot_seg": [97, 98], "plot_sensit": [91, 97], "plot_skymap": [79, 96], "plot_snrchi": [91, 97], "plot_snrifar": [91, 97], "plot_spectrum": [96, 98], "plot_styl": 71, "plot_waveform": 79, "plotdist": [52, 71], "plotexecut": [52, 79, 89], "plotqscanexecut": [52, 79, 89], "plottabl": 67, "plt": [15, 17, 36], "plu": [32, 41, 42, 52, 55, 57, 59, 62, 73, 74, 75, 78, 79], "plug": [20, 84], "plugin": [30, 36, 49, 52, 64, 73], "pluginbas": 73, "plus_error": 73, "pm": [69, 73], "pm5": 73, "pn": [8, 10, 21, 30, 52, 64, 75, 78, 84, 87, 92, 94, 97, 102], "pn_2order": 52, "pn_order": [84, 102], "png": [12, 14, 15, 17, 23, 27, 31, 35, 36, 37, 38, 40, 44, 50, 51, 73, 79, 87, 88, 97], "pnorder": 75, "pnutil": 49, "po": [61, 65], "pofmu": 52, "point": [10, 15, 19, 31, 33, 35, 36, 37, 38, 40, 41, 43, 44, 47, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 90, 94, 95, 96, 97, 98, 99, 100, 102], "point1": 75, "point2": 75, "point_1_chi": 75, "point_2_chi": 75, "point_chisq_cod": [52, 77], "point_fupp": 75, "pointer": [67, 75, 76, 93, 94, 101, 102], "pointhtmltooltip": 73, "poisson": [71, 84], "pol": [15, 36, 55, 78], "pol220": 78, "pol_phas": 64, "polar": [8, 17, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 44, 52, 54, 55, 56, 57, 59, 64, 66, 67, 69, 72, 75, 78, 87, 88, 95, 96], "polar_angl": [52, 56], "polar_bound": [17, 56], "polarangleofspin1": 36, "polarangleofspin2": 36, "polarization_geo": 54, "polarization_geo_param": 52, "polarization_lisa": [36, 54], "polarization_lisa_param": 52, "polarization_new_fram": 54, "polarization_newfram": [52, 54], "polarization_sampl": 64, "polarization_ssb": 54, "polarization_ssb_param": 52, "polarization_typ": 55, "pole": [1, 30, 55, 56, 59, 74, 75, 84, 87, 94, 102], "pollmn": 78, "polnm": 78, "polnm220": 78, "polnmlmn": 78, "polynomi": 69, "pool": [49, 64, 65, 84, 97, 99], "pop": [63, 71], "popen": 36, "popluat": 67, "popul": [17, 28, 49, 52, 67, 75, 78, 79, 87, 97], "popular": 57, "populate_catalog": [52, 53], "populate_shared_sect": [52, 76], "population_model": [49, 52], "porder": 78, "porport": 91, "port": [18, 60, 81], "portion": [10, 21, 42, 59, 74, 76, 78, 80, 94], "posit": [15, 31, 32, 35, 36, 37, 38, 40, 52, 54, 56, 57, 64, 65, 72, 74, 75, 76, 78, 79, 84, 99], "positive_float": [52, 57, 76], "positive_int": [52, 76], "posix": 52, "possibl": [10, 13, 15, 19, 30, 32, 34, 39, 40, 42, 52, 53, 55, 56, 57, 59, 62, 64, 67, 71, 73, 77, 78, 79, 84, 89, 91, 92, 93, 94, 96, 99, 100, 102], "possible_arg": [52, 78], "possible_field": 67, "possible_model": 64, "possibli": [10, 47, 57, 64, 65], "post": [52, 65, 75, 78, 79, 91, 94, 97], "post_script_fail": 97, "postbounc": 78, "poster": 89, "posterior": [2, 31, 32, 35, 36, 37, 38, 40, 52, 61, 64, 65, 71, 73, 79, 95, 96], "posterior_fil": [2, 41, 62, 64, 79], "posterior_file_dir": 79, "posterior_plot": 79, "posterior_step": [52, 61], "posteriorfil": [2, 41, 61, 62], "posteror": 64, "postion": 64, "postprocess": 73, "postprocessing_er8": 99, "potenti": [15, 61, 75, 84], "power": [12, 23, 24, 56, 57, 58, 59, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 94, 96, 102], "power_chisq": [23, 52, 77], "power_chisq_at_points_from_precomput": [52, 77], "power_chisq_bin": [52, 77], "power_chisq_bins_from_sigmasq_seri": [52, 77], "power_chisq_from_precomput": [52, 77], "power_fitalpha": [52, 57], "power_law": [0, 30, 49, 52], "powerlaw": 64, "pp": [12, 14, 23, 27, 50, 51, 79, 87, 88, 95], "pp_dir": 79, "pp_table_summari": [79, 95], "pp_test": 95, "ppdet": [52, 55], "pplotsdir": 99, "practic": [43, 72, 79, 97], "prd": [52, 69], "pre": [52, 56, 58, 64, 65, 66, 67, 78, 79, 84, 86, 92, 94, 97, 102], "prebin": 65, "prec": 58, "precalc_psd_fil": [79, 93], "precalcul": [24, 40, 42, 64, 75, 78], "precalculate_marginalization_point": 64, "prece": 64, "preced": [67, 79, 81, 100], "precess": [10, 32, 52, 64, 71, 77, 79, 84, 96], "precession_mass_spin_to_cartesian_spin": [7, 30, 52], "precessionmassspintocartesianspin": [7, 30, 49, 52], "prechosen": 64, "precis": [22, 52, 56, 58, 59, 72, 74, 76, 78, 79, 84, 94, 97, 102], "preclud": [42, 52], "precomput": [66, 77], "precompute_injection_interv": [52, 66], "precondit": 78, "preconstruct": 65, "predefin": [67, 79, 102], "predetermin": 64, "predict": [78, 79, 93], "pref": 57, "prefer": [42, 67, 76, 78, 94, 97], "preferenc": 64, "preferenti": 52, "prefix": [24, 30, 31, 44, 47, 48, 52, 56, 60, 72, 74, 76, 78, 101], "pregener": [10, 65, 79, 90, 93, 97, 99, 102], "pregenerate_hist": 57, "pregenerated_bank": [97, 102], "pregner": 97, "preload": 62, "premad": 73, "premarg_draw": [61, 64], "premask": 67, "premerg": [49, 52], "premerger_taylorf2": [52, 78], "prepend": [34, 64, 76, 97], "prepend_zero": [52, 76], "prependend": 64, "prerequisit": 71, "prescrib": 52, "preselect": 57, "presenc": 73, "present": [10, 14, 21, 22, 24, 57, 64, 65, 67, 72, 74, 75, 76, 78, 79, 84, 87, 90, 92, 94, 96, 97, 99, 101, 102], "presenti": 89, "preserv": 79, "preserve_orig_fil": 79, "preservemo": 75, "press": 69, "presum": [52, 79, 90, 93], "pretaylorf2": 87, "pretaylorf2_interp": 87, "pretend": 84, "pretranspos": 58, "pretti": 55, "prevent": [30, 48, 72], "previou": [40, 52, 57, 62, 65, 94], "previous": [75, 97, 100], "preweight": 77, "primari": [41, 52, 64, 67, 69], "primarili": 68, "primary_mass": [37, 49, 52, 64, 67, 95, 96], "primary_spin": [49, 52, 95, 96], "primary_xi": [49, 52], "primer": 43, "princip": [56, 75, 78, 84, 102], "principl": [79, 94], "print": [12, 15, 17, 18, 22, 28, 36, 48, 51, 55, 56, 62, 64, 73, 78, 79, 84, 87, 90, 96], "print_fd_approxim": [52, 78], "print_metadata": 79, "print_sgburst_approxim": [52, 78], "print_td_approxim": [52, 78], "printfileparam": [61, 62], "prior": [1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 52, 56, 61, 62, 64, 65, 67, 71, 79, 95, 96, 97], "prior_config": [32, 33], "prior_data": [97, 99], "prior_ev": 56, "prior_from_config": [52, 56, 61, 64], "prior_plot": 79, "prior_rv": [61, 64], "prior_sect": [56, 64], "prior_transform": [61, 65], "prior_width": 63, "prioriti": 79, "privat": 18, "privitera": 84, "prob_flat": [52, 71], "prob_imf": [52, 71], "prob_lnm": [52, 71], "probabilti": 56, "probabl": [17, 30, 45, 52, 56, 57, 59, 61, 64, 65, 71, 72, 79, 84, 94, 97, 100, 102], "problem": [10, 39, 42, 79, 84, 90, 97], "proc": 94, "proc_id": 75, "proce": [66, 92, 101], "process": [10, 15, 28, 36, 37, 41, 43, 47, 48, 52, 59, 61, 65, 67, 71, 73, 75, 78, 79, 84, 85, 86, 87, 88, 90, 91, 94, 96, 97, 98, 100], "process_al": [52, 59], "process_data": [52, 59], "process_full_data": [52, 71], "process_id": 67, "process_inject": [52, 71], "process_param": [28, 57], "processing_device_id": 94, "processing_schem": [10, 94], "processor": 47, "prod_": 64, "produc": [1, 19, 24, 30, 41, 52, 56, 57, 65, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 84, 90, 92, 94, 96, 97, 99, 100, 102], "product": [41, 42, 52, 64, 67, 68, 74, 75, 76, 77, 79, 81, 84, 86, 87, 88, 90, 94, 100, 102], "profil": [79, 97], "profileshortcut": [52, 79, 89], "prog": 75, "program": [10, 21, 30, 41, 52, 58, 61, 62, 68, 75, 84, 88, 94, 96, 97, 98], "program_nam": 67, "programnam": 75, "programoutput": 45, "progress": [59, 84, 94, 97, 99, 101, 102], "project": [17, 52, 55, 57, 66, 85, 97], "project_wav": [15, 52, 55, 87], "projection_matrix": 57, "projector": [52, 66], "promot": 64, "prone": 61, "prop": [52, 73, 78], "propag": [54, 73], "propagation_vector_to_loc": [52, 54], "proper": [13, 52, 59, 94, 97], "properli": [31, 43, 55, 56, 59, 76], "properti": [41, 43, 52, 55, 56, 57, 62, 64, 65, 67, 71, 74, 75, 76, 78, 79, 97, 99], "propeti": [64, 67], "proport": [10, 21, 52, 61, 71, 75, 83, 84, 91, 102], "propos": [10, 63, 65, 78, 84], "proprietari": 14, "propto": [17, 56, 64], "protect": 99, "protocol": 67, "prototyp": 73, "provid": [1, 9, 10, 15, 19, 22, 23, 24, 25, 28, 29, 30, 32, 34, 38, 40, 41, 42, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102], "proxi": [95, 96, 97], "prune": [58, 68], "pruned_c2cifft": [52, 58], "pruned_fft": [58, 59, 94], "psd": [1, 4, 10, 21, 23, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 49, 50, 52, 57, 59, 61, 62, 64, 70, 74, 75, 76, 77, 78, 84, 85, 86, 87, 89, 94, 96, 97, 98, 100, 102], "psd_": 64, "psd_abort_differ": 74, "psd_amp": 75, "psd_and_tim": 72, "psd_avg_method": [72, 74], "psd_dict": 64, "psd_durat": [72, 74], "psd_estim": [64, 72], "psd_f": 75, "psd_file": [36, 72, 79, 84, 86, 94, 102], "psd_file_xml_ifo_str": [84, 94, 102], "psd_file_xml_root_nam": [84, 94, 102], "psd_from_cli_multi_ifo": 64, "psd_gates_from_cli": [52, 74], "psd_inverse_length": [72, 74, 84, 94, 102], "psd_lisa_acc_nois": [52, 72, 84], "psd_lisa_oms_nois": [52, 72, 84], "psd_long_seg": 72, "psd_model": 72, "psd_name": [70, 72], "psd_num_seg": [84, 94, 102], "psd_output": [72, 84, 94, 102], "psd_recalculate_differ": 74, "psd_sampl": 74, "psd_segment": [61, 64], "psd_segment_length": [72, 74, 84, 94, 102], "psd_segment_strid": [72, 84, 94, 102], "psd_strain_dict": 64, "psd_stride": [72, 74], "psd_taiji_acc_nois": [52, 72, 84], "psd_taiji_oms_nois": [52, 72, 84], "psd_tianqin_acc_nois": [52, 72, 84], "psd_tianqin_oms_nois": [52, 72, 84], "psd_var": 72, "psd_var_timeseri": 72, "psd_var_val": [52, 57, 67, 72], "psd_var_val_threshold": 57, "psd_x": 75, "psddict": 73, "psdfile": [49, 52, 89], "psdvar": [1, 30, 83, 84, 94, 102], "pseobnrv4hm_pa": 87, "pseudofourpn": 28, "psi": [44, 64, 78], "psi_": 78, "psrf": 61, "pt": 96, "ptemce": [2, 5, 6, 30, 41, 43, 52, 61], "ptemcee_fil": [2, 41, 62], "ptemceefil": [2, 41, 61, 62, 65], "ptemceesampl": [5, 6, 30, 43, 61, 65], "pthread": 94, "ptr": [52, 76], "ptsampler": 65, "pu": 30, "pu0": 74, "public": [18, 38, 40, 52, 60, 71, 74, 80, 88, 92, 95, 96, 97], "public_html": [92, 97], "publicli": 97, "publish": [11, 41, 81, 97], "pull": [18, 43, 45, 64, 67, 75, 97], "pulsar": 52, "pure": 57, "purpos": [10, 15, 30, 34, 41, 52, 62, 64, 74, 84, 86, 92, 97, 100], "push": [18, 60, 73, 74, 81, 84], "put": [11, 32, 35, 36, 56, 57, 58, 67, 73, 78, 79, 84, 90, 92, 96, 97, 101], "pvalu": 59, "pvalue_satur": 59, "pwd": 97, "pwidth": 57, "py": [11, 12, 15, 17, 41, 43, 45, 52, 56, 57, 65, 66, 76, 78, 79, 81, 87, 88, 92, 94], "py37": 45, "py_modul": 88, "pycbc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 21, 23, 25, 27, 28, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 46, 48, 50, 51, 85, 86, 87, 91, 96, 97, 98, 99], "pycbc_align": 58, "pycbc_average_psd": 98, "pycbc_banksim": [10, 84], "pycbc_banksim_plot": 10, "pycbc_bbh_prior": [17, 56], "pycbc_calculate_psd": 98, "pycbc_coinc_bank2hdf": [91, 97], "pycbc_coinc_findtrig": [91, 97], "pycbc_coinc_hdfinjfind": [91, 97], "pycbc_coinc_mergetrig": [24, 91, 97], "pycbc_coinc_statmap": [91, 97], "pycbc_coinc_statmap_inj": 97, "pycbc_coinc_trig2hdf": 91, "pycbc_condition_strain": [9, 79], "pycbc_create_inject": [10, 32, 34, 35, 66, 79, 95], "pycbc_cufft": 58, "pycbc_dark_vs_bright_inject": 99, "pycbc_detector_config": 15, "pycbc_faithsim": 21, "pycbc_faithsim_plot": 21, "pycbc_fil": 79, "pycbc_geom_nonspin_bank": [79, 102], "pycbc_grb_inj_find": 79, "pycbc_grb_trig_clust": 79, "pycbc_grb_trig_combin": 79, "pycbc_hdf5_splitbank": 79, "pycbc_hdf_splitinj": 79, "pycbc_infer": [30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 56, 62, 64, 79, 95, 96], "pycbc_inference_create_fit": 96, "pycbc_inference_extract_sampl": [41, 64, 96], "pycbc_inference_model_stat": [37, 40], "pycbc_inference_plot_acceptance_r": 96, "pycbc_inference_plot_inj_recoveri": 95, "pycbc_inference_plot_movi": [30, 31], "pycbc_inference_plot_posterior": [30, 31, 35, 36, 37, 38, 40, 41, 96], "pycbc_inference_plot_pp": 95, "pycbc_inference_plot_prior": 96, "pycbc_inference_plot_sampl": 96, "pycbc_inference_plot_skymap": 96, "pycbc_inference_pp_table_summari": 95, "pycbc_inference_table_summari": 96, "pycbc_insert_frame_hwinj": 28, "pycbc_inspir": [19, 24, 57, 79, 97], "pycbc_liv": 68, "pycbc_live_supervise_": 68, "pycbc_make_banksim": 10, "pycbc_make_faithsim": 21, "pycbc_make_html_pag": [96, 97, 98], "pycbc_make_inference_inj_workflow": 30, "pycbc_make_inference_workflow": [30, 95], "pycbc_make_offline_grb_workflow": [9, 29], "pycbc_make_offline_search_workflow": [9, 29], "pycbc_make_psd_estimation_workflow": 9, "pycbc_make_sbank_workflow": 84, "pycbc_make_uberbank_workflow": 84, "pycbc_merge_psd": 98, "pycbc_multi_inspir": [75, 79, 94], "pycbc_num_thread": 94, "pycbc_optimize_snr": 68, "pycbc_page_coinc_snrchi": 97, "pycbc_page_foreground": [91, 97], "pycbc_page_foundmiss": [91, 97], "pycbc_page_injt": 97, "pycbc_page_seg": [97, 98], "pycbc_page_segplot": 98, "pycbc_page_segt": 98, "pycbc_page_sensit": [91, 97], "pycbc_page_snrchi": [91, 97], "pycbc_page_snrifar": [91, 97], "pycbc_page_vers": 84, "pycbc_phenomc_tmplt": [49, 52], "pycbc_plot_psd_fil": [79, 96, 98], "pycbc_plot_qscan": 79, "pycbc_plot_rang": 98, "pycbc_plot_singles_timefreq": 79, "pycbc_single_templ": 79, "pycbc_single_template_plot": 79, "pycbc_split_inspinj": [79, 99], "pycbc_splitbank": [79, 97, 99], "pycbc_submit_dax": [84, 86, 95, 96, 97, 98, 99], "pycbc_test": 18, "pycbc_tmpltbank_to_chi_param": 84, "pycbc_upload_xml_to_gracedb": 86, "pycbcaddstatmap": [52, 79, 89], "pycbcbank2hdfexecut": [52, 79, 89], "pycbcbintemplatesdqexecut": [52, 79, 89], "pycbcbintriggerratesdqexecut": [52, 79, 89], "pycbccombinestatmap": [52, 79, 89], "pycbcconditionstrainexecut": [52, 79, 89], "pycbccreateinjectionsexecut": [52, 79, 89], "pycbcdistributebackgroundbin": [52, 79, 89], "pycbcexcludezerolag": [52, 79, 89], "pycbcfindcoincexecut": [52, 79, 89], "pycbcfindsnglsexecut": [52, 79, 89], "pycbcfitbytemplateexecut": [52, 79, 89], "pycbcfitoverparamexecut": [52, 79, 89], "pycbcgrbinjfinderexecut": [52, 79, 89], "pycbcgrbtrigclusterexecut": [52, 79, 89], "pycbcgrbtrigcombinerexecut": [52, 79, 89], "pycbchdfinjfindexecut": [52, 79, 89], "pycbchdfsplitinjexecut": [52, 79, 89], "pycbcinferenceexecut": [52, 79, 89], "pycbcinspiralexecut": [52, 79, 89], "pycbcmergehdfexecut": [52, 79, 89, 93], "pycbcmultiinspiralexecut": [52, 79, 89], "pycbcofflin": [10, 97], "pycbcoptimalsnrexecut": [52, 79, 89, 93], "pycbcsnglsstatmapexecut": [52, 79, 89], "pycbcsnglsstatmapinjexecut": [52, 79, 89], "pycbcsplitbankexecut": [52, 79, 89], "pycbcsplitbankxmlexecut": [52, 79, 89], "pycbcsplitinspinjexecut": [52, 79, 89], "pycbcstatmapexecut": [52, 79, 89], "pycbcstatmapinjexecut": [52, 79, 89], "pycbctmpltbankexecut": [52, 79, 89], "pycbctrig2hdfexecut": [52, 79, 89], "pycuda": [46, 76], "pygrb": [73, 79, 84, 99], "pygrb_add_bestnr_cut_opt": [52, 73], "pygrb_add_bestnr_opt": [52, 73], "pygrb_add_injmc_opt": [52, 73], "pygrb_add_null_snr_opt": [52, 73], "pygrb_add_slide_opt": [52, 73], "pygrb_initialize_plot_pars": [52, 73], "pygrb_offlin": 99, "pygrb_plott": [52, 73], "pygrb_plotting_util": [49, 52], "pygrb_postprocessing_util": [49, 52], "pylal": 67, "pylal_cbc_cohptf_effici": 99, "pylal_cbc_cohptf_injcombin": 99, "pylal_cbc_cohptf_injfind": 99, "pylal_cbc_cohptf_inspiral_horizon": 99, "pylal_cbc_cohptf_sbv_plott": 99, "pylal_cbc_cohptf_trig_clust": 99, "pylal_cbc_cohptf_trig_combin": 99, "pypi": [45, 48, 81, 92], "pyplot": [12, 14, 15, 17, 23, 27, 50, 51, 52, 73, 87, 88], "pypsd": 64, "pysbs_single_templ": 79, "pysparedir": 10, "python": [11, 12, 13, 15, 27, 28, 30, 43, 45, 46, 47, 48, 52, 56, 57, 58, 62, 65, 67, 75, 76, 79, 85, 87, 88, 92, 94, 96, 101], "python2": [76, 79], "python3": [39, 45, 76, 78, 79], "pythonpath": 48, "q": [30, 32, 34, 35, 36, 52, 56, 57, 59, 63, 64, 67, 76, 77, 78, 85, 94, 96, 97], "q1": 94, "q2": 94, "q_distribut": 17, "q_from_mass1_mass2": [30, 36, 49, 52, 96], "q_from_uniform_mass1_mass2": [0, 30, 34, 56], "q_param": 52, "q_ref": 36, "q_sampl": 17, "qc": [23, 52, 72], "qfromuniformmass1mass2": [0, 17, 30, 52, 56], "qinv": 74, "qinv0": [30, 74], "qm1": 52, "qm2": 52, "qname": 67, "qnm": [0, 30, 49, 52, 78], "qnm_freq_decai": [52, 78], "qnm_time_decai": [52, 78], "qplane": [52, 59, 76], "qplane_tile_dict": 59, "qquad": 69, "qrang": [12, 59, 76], "qseri": [52, 59], "qt": 59, "qtile": [52, 59], "qtransform": [12, 49, 52, 76], "quad": [56, 69], "quadfmode1": [8, 30, 78], "quadfmode2": [8, 30, 78], "quadparam1": 75, "quadparam2": 75, "quadrat": [52, 59, 64, 76], "quadratur": [57, 64, 83], "quadraturesumstatist": [52, 57], "quadrupol": [8, 30, 52, 78], "quadrupolar": [8, 30, 78], "quadsum": 83, "qualiti": [1, 30, 59, 64, 74, 78, 83, 89, 94, 96, 97, 99, 100], "quant": 84, "quanta": 99, "quantiti": [52, 57, 59, 73], "quasi": 78, "quer": [1, 30], "queri": [1, 29, 30, 52, 53, 55, 60, 64, 79, 84, 85, 89, 90, 94, 97, 100, 102], "query_and_read_fram": [25, 52, 60], "query_cumulative_flag": [49, 52], "query_dqsegdb2": [49, 52], "query_flag": [14, 49, 52, 64], "query_str": [49, 52], "question": [67, 76, 84, 91], "quick": [59, 67, 84], "quickest": 90, "quickli": [30, 31, 39], "quicksort": 67, "quier": 14, "quiet": [57, 79, 83], "quieter": 30, "quit": 64, "quot": [64, 73, 76], "quotat": 76, "r": [30, 45, 52, 54, 56, 59, 62, 67, 69, 71, 73, 74, 84, 94, 102], "r2c": 74, "r_": 56, "r_total": 54, "ra": [8, 15, 28, 30, 32, 34, 37, 38, 40, 42, 44, 52, 55, 56, 61, 63, 64, 67, 73, 75, 78, 84, 95, 96, 99], "ra_prior": 56, "ra_ref": 34, "rad": [8, 30, 52, 55, 56, 76, 78, 79], "radial": [32, 52, 54, 69, 96], "radian": [15, 52, 54, 55, 56, 69, 74, 75, 76, 78, 87], "radiat": [71, 78], "radio": 99, "radiu": [52, 56, 69, 75, 79], "radler": 72, "rai": [29, 99], "rais": [51, 52, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 76, 78, 79, 80, 84, 88, 90, 94, 96, 97, 102], "raise_err": 68, "raise_error": [76, 79, 90, 92, 97, 98, 99], "ram": 84, "ran": [65, 86, 99], "randint": [17, 56], "random": [10, 17, 21, 28, 32, 41, 52, 56, 62, 64, 65, 67, 70, 75, 79, 84, 93, 95, 97, 101, 102], "random_numb": 97, "random_se": [17, 56, 84, 101, 102], "random_st": 62, "random_str": [49, 52], "randomli": [56, 62, 84, 97, 101], "rang": [10, 17, 36, 40, 51, 52, 56, 57, 59, 61, 64, 71, 72, 74, 75, 76, 79, 80, 83, 84, 92, 94, 96, 100, 102], "rank": [49, 52, 67, 71, 79, 82, 97], "rank_method": 67, "rank_nam": 67, "rank_stat_coinc": [52, 57], "rank_stat_singl": [52, 57], "ranking_fil": 79, "ranking_statist": 97, "ranking_threshold": 57, "rankstat": 71, "rapid": [13, 59, 78], "rate": [1, 10, 21, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 49, 57, 58, 59, 62, 63, 64, 66, 68, 70, 71, 72, 74, 76, 78, 79, 80, 83, 84, 94, 96, 97, 98, 102], "rate_den": 71, "rate_dict": 57, "ratei": 57, "rates_funct": [49, 52], "ratesandpopul": 71, "rather": [40, 47, 56, 57, 58, 64, 65, 67, 76, 78, 79, 83, 90, 95, 97, 99], "ratio": [17, 23, 30, 35, 36, 38, 41, 49, 52, 56, 57, 59, 62, 64, 65, 67, 68, 69, 71, 73, 75, 78, 79, 83, 84, 94, 96, 102], "ration": 42, "raw": [14, 51, 59, 62, 65, 67, 72, 76, 100], "raw_acl": [61, 62, 65], "raw_act": [61, 62, 65], "raw_fit_fil": 79, "raw_sampl": [62, 65], "raw_samples_to_dict": [61, 65], "rayleigh": [56, 57], "rayleigh_fitalpha": [52, 57], "rb": [36, 62], "rchisq": [52, 67], "rcparam": 73, "rdcc_nbyte": 67, "rdcc_nslot": 67, "rdcc_w0": 67, "rdfreq": 56, "rdir": 79, "re": [32, 41, 43, 52, 57, 59, 64, 78, 83, 95, 96], "reach": [8, 30, 57, 65, 79, 84], "read": [1, 9, 10, 16, 21, 27, 28, 29, 30, 32, 34, 41, 43, 47, 49, 52, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102], "read_acceptance_fract": [61, 62], "read_acceptance_r": [61, 62], "read_acceptance_ratio": [61, 62], "read_arg": 62, "read_beta": [61, 62], "read_betas_from_hdf": [61, 65], "read_calibration_envelop_fil": [52, 74], "read_config_fil": [61, 62], "read_constraints_from_config": [52, 56], "read_data": [61, 62], "read_distributions_from_config": [52, 56], "read_ensemble_attr": [61, 62], "read_fram": [25, 27, 52, 60], "read_frame_gwosc": [52, 60], "read_from_config": [61, 64], "read_from_fil": [52, 75, 84], "read_full_data": [52, 71], "read_full_data_mchirp": [52, 71], "read_ini_fil": [52, 76, 79, 89], "read_inject": [52, 61, 62, 71], "read_model_from_config": [52, 74], "read_params_from_config": [52, 56], "read_pickled_data_from_checkpoint_fil": [61, 62], "read_psd": [61, 62], "read_random_st": [61, 62], "read_raw_sampl": [41, 61, 62], "read_raw_samples_from_fil": [61, 62], "read_sampl": [30, 61, 62], "read_sampling_params_from_config": [61, 64], "read_stor": [52, 60], "read_strain_gwosc": [52, 60], "read_template_bank_param": [52, 71], "read_transforms_from_config": [49, 52, 64], "readabl": 19, "readbytempl": [52, 57, 67], "readder": 84, "reader": [59, 74], "readi": [99, 100], "readthedoc": 65, "real": [22, 32, 33, 52, 59, 74, 76, 78, 87, 88], "real_8": [94, 99, 102], "real_same_precision_a": [52, 76], "realist": 54, "realiz": [59, 97], "realli": [11, 55, 84], "realtim": 13, "rearrang": 43, "reason": [10, 22, 28, 32, 42, 43, 52, 58, 59, 64, 67, 71, 72, 74, 95, 96, 101], "reassign": [22, 57], "reassign_r": [52, 57], "rec": [64, 67], "recalcul": [40, 74, 75], "recalculate_psd": [52, 74], "recalib": 78, "recalib_": 74, "recalibr": [49, 52, 64], "recarrai": 67, "recent": [45, 52, 57, 60, 71, 84, 86], "reciev": 97, "recogn": [30, 57, 61, 62, 64, 73, 78, 79, 94, 97], "recognis": 78, "recolor": 30, "recombin": [84, 91], "recommend": [19, 28, 32, 35, 36, 42, 45, 47, 59, 61, 64, 67, 89, 90, 92, 95, 97, 101, 102], "recomput": 94, "reconstruct": [37, 40, 61, 64, 65], "reconstuct": 64, "record": [25, 36, 49, 52, 56, 57, 79, 90, 94, 100], "record_failur": 78, "recov": [10, 32, 40, 57, 79, 95, 97, 99], "recoverd": 95, "recoveri": [10, 95], "recreat": 72, "recurs": 62, "recursively_save_dict_contents_to_group": [52, 67], "recycl": 74, "red": [35, 36, 73, 95], "redirect": 79, "redlin": 95, "redraw": 64, "redshift": [17, 34, 37, 49, 52, 71, 95, 96], "redshift_estim": [49, 52], "redshift_from_comoving_volum": [49, 52, 95, 96], "redshift_mass": 52, "redshit": 71, "reduc": [10, 23, 32, 33, 47, 52, 56, 57, 59, 66, 67, 74, 76, 84, 97, 99], "reduce_tick": [52, 73], "reduced_chisq_threshold": 57, "reduced_x2": 57, "reduct": [61, 97], "reenter": 47, "ref": [1, 30, 84, 94, 102], "ref_amp": 78, "ref_dhor": 71, "ref_end": 61, "ref_fram": [35, 36, 52, 55], "ref_freq": 75, "ref_gps_tim": 75, "ref_mass": 52, "ref_point": 66, "ref_snr": [57, 61, 64], "ref_start": 61, "ref_tc": 55, "ref_tim": 73, "refer": [1, 8, 15, 19, 23, 28, 30, 32, 42, 43, 52, 55, 57, 59, 61, 64, 66, 67, 71, 72, 73, 74, 77, 78, 79, 80, 84, 87, 88, 89, 92, 94, 95, 97, 102], "referenc": [30, 57, 67, 96], "reference": 42, "reference_ifo": 83, "reference_tim": 55, "refin": [5, 6, 30, 43, 52, 61], "refinesampl": [5, 6, 30, 43, 61, 65], "reflect": [49, 52, 56, 79, 90, 94, 102], "reflect_left": [49, 52], "reflect_right": [49, 52], "reflect_wel": [49, 52], "reflectedbound": [49, 52], "refresh": [53, 57], "refresh_statist": [52, 57], "regard": [34, 57], "regardless": [65, 84], "regener": [97, 102], "regim": [69, 84], "region": [10, 27, 42, 52, 56, 59, 60, 64, 65, 73, 76, 84, 94], "register_clean_cuda": [49, 52], "register_model": [61, 64], "register_plugin": 73, "register_to_process_param": 76, "regress": 64, "regular": [1, 11, 30, 49, 52, 57, 60, 84, 90, 94, 97, 102], "regularli": 68, "reject": [56, 62, 65, 66, 84, 94], "rejector": 94, "rel": [3, 15, 30, 34, 35, 36, 40, 52, 55, 57, 61, 64, 69, 71, 72, 73, 75, 76, 77, 78, 87, 94, 97], "relat": [30, 52, 54, 57, 59, 61, 64, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 91, 98, 99, 102], "relationship": [30, 52, 79], "relative_tim": [3, 30, 42, 64], "relative_time_dom": [3, 30, 42, 64], "relativetim": [3, 30, 42, 61, 64], "relativetimedom": [3, 30, 61, 64], "relax": 67, "relbin": [3, 30, 42, 52, 61, 96], "relbin_cpu": [52, 61], "releas": [13, 16, 18, 29, 45, 47, 60, 97], "releat": 62, "relev": [10, 13, 21, 34, 41, 55, 62, 67, 75, 76, 84, 92, 99], "reli": [22, 58, 65, 71, 76], "reliabl": [75, 84], "reload_buff": 67, "reload_certif": 67, "reloc": 76, "remain": [30, 32, 37, 56, 65, 75, 78, 84, 99], "reman": 94, "remap": 62, "rememb": 97, "remnant": [52, 67, 69, 75, 84, 102], "remnant_mass": [52, 67], "remnant_mass_from_mass1_mass2_cartesian_spin_eo": [49, 52], "remnant_mass_from_mass1_mass2_spherical_spin_eo": [49, 52], "remnant_mass_threshold": [75, 84, 102], "remot": [79, 90, 92, 97, 99], "remov": [1, 11, 19, 27, 30, 32, 40, 47, 52, 57, 62, 64, 67, 72, 73, 74, 75, 76, 78, 79, 80, 84, 90, 91, 92, 93, 94, 96, 97, 100, 102], "remove_common_offset": [52, 73], "remove_corrupt": 76, "remove_short_sci_seg": [52, 79, 89], "remove_start_phas": 78, "renam": [30, 56, 62, 67], "render": [49, 52, 76], "render_default": [52, 73], "render_glitchgram": [52, 73], "render_ignor": [52, 73], "render_text": [52, 73], "render_tmplt": [52, 73], "render_workflow_html_templ": [52, 73], "renorm": 56, "reorder": 84, "rep_cat": 79, "repeat": [78, 96], "repeatedli": [92, 97], "repetit": 84, "replac": [1, 11, 18, 30, 33, 43, 47, 52, 54, 64, 68, 72, 76, 79, 80, 83, 84, 90, 92, 94, 96, 97, 98, 100, 102], "replace_paramet": 64, "replaced_param": 64, "replai": 97, "replic": [10, 25], "repo": 11, "report": [48, 52, 57, 59, 62, 67, 79, 81, 95, 97, 99], "repositori": [11, 18, 19, 41, 43, 45, 47, 81, 97], "repostiori": 43, "repres": [34, 35, 36, 41, 42, 52, 53, 56, 57, 67, 72, 73, 76, 79], "represent": [60, 66, 74, 75, 78, 79, 90], "reproduc": [49, 52, 62, 71, 79, 84, 90], "req_match": 75, "request": [27, 43, 45, 51, 52, 53, 57, 59, 60, 62, 64, 67, 73, 75, 76, 77, 78, 79, 80, 90, 94, 96, 99, 100], "request_cpu": [96, 98], "request_disk": 84, "request_memori": [84, 96, 97, 99], "requested_param": 52, "requir": [1, 10, 18, 21, 22, 30, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 78, 79, 83, 84, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102], "require_exact_data_fit": 72, "require_mpi": 52, "required_bi": 76, "required_opt": [52, 76], "required_opts_list": [52, 74], "required_opts_multi_ifo": [52, 76], "required_param": [52, 66], "required_paramet": [52, 56], "requiredprop": 73, "requirestr": [52, 79, 89], "rerank": 83, "rerank_coinc_followup": [52, 79, 89], "res_dir": 79, "resampl": [23, 33, 49, 52, 62, 66, 73, 76, 80, 94, 97, 102], "resample_equ": [61, 65], "resample_to_delta_t": [52, 59], "resampled_t": 76, "rescal": [57, 58, 64, 79, 84, 102], "rescale_factor": 75, "research": 88, "researchgroup": 97, "resembl": [32, 57, 83], "reset": [11, 60, 64, 70, 74], "reset_vector_param": [61, 64], "resid": 97, "resiz": [23, 27, 52, 57, 62, 64, 67, 76, 78, 87], "resize_invalid_fract": 57, "resmpl": 59, "resolut": [30, 32, 37, 38, 40, 59, 64, 72, 76, 78], "resolv": [78, 79, 92], "resolve_file_url": [52, 79, 89, 92], "resolve_td_opt": [52, 79, 89], "resolve_url": [52, 79, 89, 92], "resolve_url_http": [52, 79, 89, 92], "resolve_url_to_fil": [52, 79, 89], "resons": 79, "resort": 23, "resourc": [14, 29, 96, 97], "resp": 73, "respect": [1, 8, 10, 17, 30, 32, 39, 41, 52, 55, 56, 64, 69, 71, 76, 78, 83, 88, 96, 97, 100], "respons": [1, 12, 15, 28, 30, 36, 55, 57, 59, 64, 66, 72, 74, 76, 78, 79, 80, 83, 84, 87, 90, 93, 94, 97, 99, 100, 101, 102], "response_tdi": 72, "rest": [56, 66, 78, 84, 95, 96, 97], "restart": [62, 95, 96], "restor": [57, 76], "restore_st": [52, 57], "restrict": [10, 21, 42, 52, 57, 59, 64, 71, 73, 84, 86, 90, 91], "restructuredtext": 19, "resul": 79, "result": [14, 29, 30, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 86, 87, 92, 94, 97, 99, 100], "results_dir": 79, "results_from_cli": [61, 62], "results_pag": [95, 96, 97, 98], "resultsargumentpars": [61, 62], "resum": [41, 62, 65, 95, 96], "resume_from_checkpoint": [61, 65], "retain": [57, 94], "retain_fil": 79, "retent": [79, 84, 92, 96, 97, 98, 99], "retreiv": [12, 62], "retri": [60, 67], "retriev": [52, 53, 56, 57, 61, 62, 64, 65, 67, 74, 78, 79, 97, 100], "retrieve_waveform_plugin": [52, 78], "retriv": [56, 59, 67], "return": [25, 30, 36, 41, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 88, 90, 92, 93, 94, 97, 100, 101, 102], "return_all_stat": 64, "return_background": 57, "return_bin": 77, "return_complex": [59, 64, 76], "return_cp": 62, "return_data": 67, "return_empty_sngl": [52, 67], "return_error": [12, 53], "return_format": [79, 102], "return_l": 76, "return_mass_heavi": 52, "return_nearest_cutoff": [52, 75, 84], "return_peak": 64, "return_phas": 59, "return_psd": 76, "return_search_summari": [52, 67], "return_sh_hh": 64, "return_str": 73, "return_tupl": 67, "return_union_seglist": [52, 79, 89], "return_valu": 67, "returncod": 79, "reus": [32, 34, 84], "reuse_cach": 97, "reuse_execut": [79, 93], "rev": 84, "revchirp": 88, "revers": [57, 58, 77, 88, 94], "reverse_chirp_fd": 88, "reverse_chirp_td": 88, "reverse_templ": 77, "revert": 94, "review": [41, 43, 45, 92], "revolut": 54, "reweight": [57, 71, 83], "reweight_snr_by_nul": [52, 57], "reweightedsnr_cut": [52, 57], "rework": [57, 83], "rf": [11, 47, 71, 78], "rfc": 52, "rfloor": 64, "rframe": 78, "rframe_gener": [52, 78], "rframegeneratorclass": 78, "rho": [54, 59, 71], "rho_coh": 57, "rho_coinc": 57, "rho_loc": 71, "rho_z": 71, "rhomin": 71, "rice": 61, "rid": 57, "ride": 64, "right": [8, 30, 32, 43, 52, 55, 56, 57, 59, 64, 67, 72, 73, 75, 76, 77, 78, 80, 87, 94, 95, 96, 100], "right_ascens": [15, 55, 87], "right_beta": 78, "right_taper_width": 66, "right_window": 78, "rigidli": 52, "rindex": [74, 76], "ring": [1, 30, 52, 57, 84, 94, 102], "ringdown": [8, 28, 30, 32, 49, 52, 66], "ringdown_fd_approxim": 78, "ringdownhdfinjectionset": [52, 66], "ringup": 78, "rm": [11, 47, 97], "robust": 29, "role": 52, "roll": [27, 52, 57, 76, 78], "rom": 10, "root": [18, 52, 56, 69, 72, 75, 78, 79, 84, 94, 102], "root_nam": 72, "rorderd": 52, "rosenbrock": 64, "rotat": [15, 42, 52, 54, 56, 59, 69, 73, 75, 76], "rotate_vector": [52, 75, 84], "rotation": 56, "rotation_matrix": 54, "rotation_matrix_ssb_to_geo": [52, 54], "rotation_matrix_ssb_to_lisa": [52, 54], "rough": [72, 78, 84], "rough_time_estim": [52, 78], "round": [65, 73, 76, 78, 84, 94], "round_up": [52, 78], "routin": [22, 64, 65, 75, 84], "row": [17, 28, 52, 56, 58, 66, 67, 73, 75, 77, 78], "row_label": 73, "rsq": 94, "rss": 78, "rst": [19, 88], "rtd": 45, "rtype": [57, 64], "rubin": 61, "rule": [52, 55, 61, 64, 84, 92, 96, 97, 100], "run": [10, 11, 13, 21, 22, 25, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 52, 56, 60, 61, 62, 64, 65, 68, 71, 73, 74, 75, 77, 78, 79, 80, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102], "run0011": 97, "run_and_error": [52, 68], "run_datafind_inst": [52, 79, 89, 90], "run_dir": [86, 99], "run_end_tim": [61, 62], "run_kwd": 65, "run_mcmc": [43, 61, 65], "run_nam": 98, "run_pycbc_infer": 96, "run_sampl": [61, 65], "run_start_tim": [61, 62], "run_tim": 57, "runtim": [32, 33, 45, 79, 90, 99], "runtimeerror": [57, 64], "rv": [17, 52, 56, 71], "rv_continu": 71, "rw_snr": 57, "rw_snr_threshhold": 57, "rw_snr_threshold": [57, 73], "rwalk": [40, 65], "rwalk2": 65, "rwrap": 78, "s1": 52, "s1z": [52, 57, 71], "s2": 52, "s23": 67, "s2z": [52, 57, 71], "s5y1": 57, "s6": [92, 97, 100], "s6_cbc_hw_inject": 97, "s6_cbc_lowmass_b_offlin": 92, "s6_run_pycbc_er8_pre_releas": 97, "s6b": 92, "s6d": 97, "s6d_chunk3": 97, "s6d_test": 97, "s8": 67, "s_1": [52, 59], "s_2": [52, 59], "s_3": 59, "s_4": 59, "s_acc_nu": 72, "s_dist": 71, "s_m": 59, "s_n": [59, 64], "s_oms_nu": 72, "safe": [32, 33, 37, 60, 72, 75, 79, 80, 84, 92, 94, 102], "safeconfigpars": 76, "safeti": [32, 65], "sai": [28, 34, 38, 40, 52, 92], "said": 100, "salpet": 71, "same": [10, 15, 17, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 37, 42, 43, 44, 47, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 83, 84, 87, 92, 94, 95, 96, 97, 98, 99, 101, 102], "saml": 59, "samlper": 65, "sampel": 62, "sampl": [1, 10, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 98, 101, 102], "sample_frequ": [51, 52, 76, 78, 87, 88], "sample_point": [52, 78], "sample_r": [37, 40, 52, 53, 57, 64, 68, 70, 72, 74, 76, 78, 84, 87, 94, 102], "sample_rate_clos": [52, 76], "sample_round": [61, 65], "sample_rwalk": 65, "sample_rwalk_mod": [61, 65], "sample_tim": [23, 27, 50, 52, 74, 76, 87, 88], "sampler": [5, 6, 31, 32, 33, 34, 35, 36, 37, 38, 52, 56, 61, 62, 63, 64, 67, 71, 79, 95, 96], "sampler_config": [32, 33], "sampler_group": [61, 62], "sampler_info": [30, 41, 62], "samples1": 61, "samples2": 61, "samples_al": 62, "samples_arrai": 73, "samples_fil": [65, 79], "samples_from_cli": [61, 62], "samples_group": [61, 62], "samples_param": 79, "sampling_effici": 65, "sampling_param": [30, 32, 61, 64, 65, 96], "sampling_transform": [30, 32, 64, 96], "samplingtransform": [61, 64], "san": 52, "sane": 67, "sangria": [36, 42], "sanit": 73, "saniti": [10, 74, 75, 79, 90], "sanitize_newlin": [52, 76], "sanity_check_subsect": [52, 76, 79, 89], "sargs_sect": 56, "sathyaprakash": 84, "satisfi": [10, 30, 32, 41, 43, 56, 65, 67], "satur": 71, "save": [28, 30, 41, 52, 56, 57, 62, 64, 65, 67, 71, 73, 74, 76, 78, 79, 85, 89, 94, 95, 96, 97, 100], "save_bkg_falloff": [52, 71], "save_config": [52, 79, 89], "save_dict_to_hdf5": [52, 67], "save_fig_with_metadata": [52, 73], "save_html_with_metadata": [52, 73], "save_pdf_with_metadata": [52, 73], "save_perform": [52, 57], "save_png_with_metadata": [52, 73], "save_st": [52, 57], "save_to_wav": [27, 52, 76], "save_veto_defin": [52, 79, 89, 100], "sbank": [10, 52, 102], "sbank_mchirp_bin": 84, "sbank_workflow": 84, "sbankexecut": 84, "sbin": 57, "sbv_plotter": 99, "sc": 87, "sca": 12, "scalar": [55, 57, 62, 74, 76], "scale": [1, 30, 55, 56, 57, 61, 63, 65, 66, 70, 71, 73, 75, 79, 84, 94, 102], "scale_factor": [61, 65], "scale_inject": [49, 52], "scalefac": 73, "scalefactor": 75, "scatter": [15, 17, 31, 35, 36, 37, 38, 40, 44, 61, 73, 79, 96], "scatter_cmap": 73, "scatter_histogram": [49, 52], "scatter_log_cmap": 73, "scenario": 57, "schedul": 97, "scheme": [10, 22, 28, 37, 49, 56, 58, 60, 76, 78, 79, 84, 87, 90, 92, 94, 97], "schwarzisco": [75, 84, 102], "schwarzschild": 52, "sci_avlble_fil": [79, 90], "sci_avlble_nam": [79, 90], "scienc": [28, 33, 60, 79, 88, 89, 90, 92, 94, 98, 99, 100, 102], "science_seg": [73, 79, 94, 97, 102], "sciencefil": [79, 90], "scienceseg": [79, 90, 100, 102], "scientic": 48, "scientif": [16, 41, 73, 88], "scikit": 46, "scipi": [19, 52, 56, 57, 59, 64, 69, 71, 73, 78], "scird": 72, "scope": [84, 96], "scott": [56, 61], "scratch": [18, 78, 89, 97], "screen": [18, 62, 64], "screw": 97, "script": [10, 15, 16, 21, 35, 36, 37, 40, 45, 46, 47, 56, 73, 79, 84, 85, 92, 94, 95, 96, 97, 99, 101, 102], "scroll": 73, "sctild": 87, "sd": 70, "sdif": 57, "seachsummari": 67, "search": [9, 10, 20, 24, 29, 47, 52, 56, 57, 67, 68, 72, 73, 76, 77, 78, 79, 80, 84, 88, 89, 90, 91, 93, 94, 98, 99, 100], "searchsummari": 67, "sec": [73, 79], "secion": 99, "second": [1, 8, 11, 15, 17, 23, 25, 28, 30, 32, 44, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 90, 91, 92, 94, 97, 100, 102], "second_phas": [52, 58], "second_phase_cython": [52, 58], "secondari": [52, 67], "secondary_mass": [37, 49, 52, 67, 95, 96], "secondary_spin": [49, 52, 95, 96], "secondary_xi": [49, 52], "section": [10, 13, 21, 28, 30, 31, 32, 34, 35, 40, 48, 52, 56, 59, 61, 63, 64, 65, 73, 74, 76, 79, 80, 84, 88, 89, 91, 95, 96, 97, 98, 100], "section1": [76, 79, 92], "section2": [76, 79, 92], "section_group": 64, "section_nam": [76, 79, 92], "section_tag": 79, "section_to_cli": [52, 79, 89, 92], "sectionnumb": [52, 73, 79], "secur": 79, "sed": 97, "see": [15, 18, 22, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102], "seed": [1, 10, 17, 21, 23, 30, 31, 32, 33, 34, 35, 37, 38, 40, 50, 51, 56, 61, 62, 64, 65, 70, 74, 79, 80, 84, 94, 95, 96, 97, 101, 102], "seem": [35, 58, 97], "seen": [62, 66, 71, 79, 89, 93], "seg": [14, 52, 57, 67, 79, 94, 99], "seg_buff": 66, "seg_dict": 73, "seg_dir": 79, "seg_fil": [73, 79, 90, 100], "seg_len": [51, 72], "seg_length": 61, "seg_nam": 79, "seg_siz": 79, "seg_start": 61, "seg_strid": [51, 61, 72], "seg_summ_dict": 79, "seg_summ_list": 79, "segdb": 92, "segdict": 79, "segfil": [52, 79, 89, 90, 100], "seglen": 64, "segment": [1, 30, 32, 33, 34, 35, 37, 38, 40, 49, 52, 57, 59, 61, 64, 66, 72, 73, 74, 76, 77, 78, 80, 84, 90, 92, 94, 96, 97, 98, 99, 102], "segment_defin": 100, "segment_dict": 79, "segment_dur": 76, "segment_end": 100, "segment_end_pad": [74, 94], "segment_fil": [57, 79, 100], "segment_length": [74, 94], "segment_list": 59, "segment_nam": [52, 57, 64, 67, 79], "segment_queri": [97, 98, 99], "segment_snr": [52, 77], "segment_start": 100, "segment_start_pad": [74, 94], "segment_summari": [79, 90], "segmentlist": [52, 57, 73, 79, 90, 94, 102], "segmentlistdict": [73, 79, 100], "segmentnam": [79, 90], "segments_from_cat": [97, 98, 99], "segments_to_start_end": [52, 57], "segmentslist": 79, "segmentslistdict": 79, "segnum": 59, "segsiz": [57, 59], "seiv": 79, "select": [1, 10, 17, 29, 30, 42, 44, 52, 53, 57, 58, 59, 60, 67, 71, 73, 77, 78, 79, 84, 85, 88, 94, 102], "select_files_by_ifo_combin": [52, 79, 89], "select_generic_execut": [52, 79, 89], "select_matchedfilter_class": [52, 79, 89], "select_rframe_gener": [52, 78], "select_segments_by_defin": [52, 57], "select_splitfilejob_inst": [52, 79, 89, 101], "select_tmpltbank_class": [52, 79, 89], "select_waveform_gener": [52, 78], "select_waveform_modes_gener": [52, 78], "select_xxx_class": 79, "self": [52, 54, 56, 57, 59, 61, 62, 64, 65, 67, 75, 76, 78, 79, 88], "semi": [56, 72], "semi_analytical_psd_lisa_confusion_nois": [52, 72, 84], "semilogx": 71, "send": [52, 59, 64, 66, 68, 74, 79, 90, 92], "sens": [30, 32, 57, 64, 74, 84], "sens_ifo": 71, "senseref": 57, "sensibl": [67, 94], "sensit": [10, 13, 32, 34, 49, 57, 59, 71, 72, 83, 94, 96], "sensitive_volum": [83, 97], "sensitive_volume_factor": [52, 57], "sensitivit": 10, "sensitivity_curve_lisa_confus": [52, 72, 84], "sensitivity_curve_lisa_scird": [52, 72, 84], "sensitivity_curve_lisa_semi_analyt": [52, 72, 84], "sensitivity_curve_taiji_analyt": [52, 72, 84], "sensitivity_curve_taiji_confus": [52, 72, 84], "sensitivity_curve_tianqin_analyt": [52, 72, 84], "sensitivity_curve_tianqin_confus": [52, 72, 84], "sent": [10, 21, 67, 79, 84, 90, 92, 93, 94, 101, 102], "seobnr_rom_doublespin": 67, "seobnrv1": [21, 87], "seobnrv1_rom_doublespin": 87, "seobnrv1_rom_doublespin_interp": 87, "seobnrv1_rom_effectivespin": 87, "seobnrv1_rom_effectivespin_interp": 87, "seobnrv1peak": [84, 102], "seobnrv1rd": [84, 102], "seobnrv2": [10, 28, 47, 84, 87], "seobnrv2_opt": 87, "seobnrv2_rom_doublespin": [10, 67, 78, 84, 87], "seobnrv2_rom_doublespin_hi": [84, 87], "seobnrv2_rom_doublespin_hi_interp": 87, "seobnrv2_rom_doublespin_interp": 87, "seobnrv2_rom_effectivespin": 87, "seobnrv2_rom_effectivespin_interp": 87, "seobnrv2peak": [84, 102], "seobnrv2rd": [84, 102], "seobnrv2t": 87, "seobnrv3": 87, "seobnrv3_opt": 87, "seobnrv3_opt_rk4": 87, "seobnrv3_pert": 87, "seobnrv4": [47, 52, 87], "seobnrv4_opt": 87, "seobnrv4_rom": 87, "seobnrv4_rom_interp": 87, "seobnrv4_rom_nrtid": 87, "seobnrv4_rom_nrtidalv2": 87, "seobnrv4_rom_nrtidalv2_nsbh": 87, "seobnrv4hm": 87, "seobnrv4hm_pa": 87, "seobnrv4hm_rom": 87, "seobnrv4hm_rom_interp": 87, "seobnrv4p": 87, "seobnrv4peak": [84, 102], "seobnrv4phm": [52, 87], "seobnrv4rd": [84, 102], "seobnrv4t": 87, "seobnrv4t_surrog": 87, "seobnrv5_rom": 87, "seobnrv5_rom_interp": 87, "seobnrv5_rom_nrtidalv3": 87, "seobnrv5hm_rom": 87, "seobnrv5peak": [84, 102], "seobnrv5rd": [84, 102], "separ": [1, 10, 19, 21, 30, 34, 42, 43, 51, 52, 55, 56, 57, 61, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 79, 84, 92, 94, 96, 97, 99, 100, 102], "sepcifi": 92, "seper": 28, "seprat": 99, "septemb": 79, "sequenc": [52, 57, 62, 67, 68, 69, 73, 75, 78], "seri": [1, 28, 30, 40, 42, 52, 57, 59, 60, 62, 64, 66, 68, 72, 73, 74, 76, 77, 78, 84, 85, 87, 88, 94, 97, 102], "seriou": [79, 94], "serv": [79, 92, 94, 97], "server": [1, 30, 52, 60, 64, 79, 85, 89, 90, 92, 96, 97, 100], "servic": [67, 97, 99], "set": [1, 8, 10, 11, 15, 17, 21, 22, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102], "set_backend": [22, 52, 58], "set_bandwidth": [52, 56], "set_burn_in": [61, 65], "set_burn_in_from_config": [61, 65], "set_bw": 56, "set_categori": [52, 79, 89], "set_data": [52, 59], "set_epoch": [52, 78], "set_execution_sit": [52, 79, 89], "set_gmst_refer": [52, 55], "set_grb_start_end": [52, 79, 89], "set_initial_condit": [43, 61, 65], "set_loglr": 64, "set_marginal_histogram_titl": [52, 73], "set_measure_level": [52, 58], "set_memori": [52, 79, 89], "set_num_cpu": [52, 79, 89], "set_num_retri": [52, 79, 89], "set_p0": [61, 65], "set_planning_limit": [52, 58], "set_prior": [52, 79, 89], "set_psd_seg": [61, 64], "set_ref_tim": [52, 66], "set_sim_data": [52, 66], "set_singles_buff": [52, 57], "set_start_from_config": [61, 65], "set_stat": 62, "set_state_from_fil": [61, 65], "set_storag": [52, 79, 89], "set_style_from_cli": [52, 73], "set_submit_subdir": [79, 93], "set_subworkflow_properti": [52, 79, 89], "set_target": [43, 61, 65], "set_target_from_config": [61, 65], "set_templ": [52, 67], "set_thin_interval_from_config": [61, 65], "set_threads_backend": [52, 58], "set_titl": [17, 52], "set_univers": [52, 79, 89], "set_xlabel": 17, "set_ylabel": 17, "set_zlabel": 17, "setstat": 73, "setto": 94, "setup": [11, 30, 34, 45, 48, 52, 64, 65, 79, 81, 84, 88, 97], "setup_antenna": [61, 64], "setup_bin": [61, 64], "setup_cal": [61, 65], "setup_combine_statmap": [52, 79, 89], "setup_datafind_from_pregenerated_lcf_fil": [52, 79, 89, 90], "setup_datafind_runtime_cache_multi_calls_perifo": [52, 79, 89, 90], "setup_datafind_runtime_cache_single_call_perifo": [52, 79, 89, 90], "setup_datafind_runtime_frames_multi_calls_perifo": [52, 79, 89, 90], "setup_datafind_runtime_frames_single_call_perifo": [52, 79, 89, 90], "setup_datafind_runtime_gener": [79, 90], "setup_datafind_runtime_single_call_perifo": [79, 90], "setup_datafind_workflow": [52, 79, 89, 90], "setup_distance_marg_interpol": [61, 64], "setup_dq_rerank": [52, 79, 89], "setup_exclude_zerolag": [52, 79, 89], "setup_foreground_minifollowup": [52, 79, 89], "setup_injection_minifollowup": [52, 79, 89], "setup_injection_workflow": [52, 79, 89, 93], "setup_interval_coinc": [52, 79, 89], "setup_interval_coinc_inj": [52, 79, 89], "setup_margin": [61, 64], "setup_matchedfltr_dax_gener": [52, 79, 89, 94], "setup_matchedfltr_dax_generated_multi": [52, 79, 89, 94], "setup_matchedfltr_workflow": [52, 79, 89, 94], "setup_output": [61, 65], "setup_peak_lock": [61, 64], "setup_psd_calcul": [52, 79, 89], "setup_psd_pregener": [52, 79, 89], "setup_psd_workflow": [52, 79, 89], "setup_pygrb_minifollowup": [52, 79, 89], "setup_pygrb_pp_workflow": [52, 79, 89], "setup_pygrb_results_workflow": [52, 79, 89], "setup_seg": [52, 57], "setup_single_det_minifollowup": [52, 79, 89], "setup_sngl": [52, 79, 89], "setup_sngls_inj": [52, 79, 89], "setup_sngls_statmap": [52, 79, 89], "setup_sngls_statmap_inj": [52, 79, 89], "setup_splittable_dax_gener": [52, 79, 89, 101], "setup_splittable_workflow": [52, 79, 89, 101], "setup_statmap": [52, 79, 89], "setup_statmap_inj": [52, 79, 89], "setup_template_rend": [52, 73], "setup_tim": 57, "setup_tmpltbank_dax_gener": [52, 79, 89, 102], "setup_tmpltbank_pregener": [52, 79, 89, 102], "setup_tmpltbank_without_fram": [52, 79, 89, 102], "setup_tmpltbank_workflow": [52, 79, 89, 102], "setup_trigger_fit": [52, 79, 89], "setup_upload_prep_minifollowup": [52, 79, 89], "setuptool": 45, "sever": [31, 32, 42, 43, 51, 64, 73, 80, 91], "sflen": 78, "sfr": 71, "sfr_func": 71, "sfr_grb_2008": [52, 71], "sfr_madau_dickinson_2014": [52, 71], "sfr_madau_fragos_2017": [52, 71], "sg": [72, 78, 94], "sg_chisq": [57, 59, 77], "sg_rate": 71, "sgburst": [1, 30, 78, 79, 84, 94, 102], "sgburst_approxim": [52, 78], "sgburst_injection_fil": [84, 94, 102], "sgburstinjectionset": [52, 66], "sgchisq": [49, 52, 57, 67, 94], "sgchisq_loc": 94, "sgchisq_snr_threshold": 94, "sh": [10, 21, 31, 32, 33, 35, 36, 45, 47, 64, 76, 95, 96], "sh_total": 64, "sh_transformed_psd_lisa_tdi_xyz": [4, 30, 52, 72, 84, 94, 102], "sha1": [57, 79, 92], "shade_cont_valu": 73, "shannon": 61, "shape": [17, 32, 41, 52, 55, 61, 62, 65, 67, 76], "share": [34, 42, 47, 52, 57, 58, 62, 64, 79, 84, 92, 95, 96, 97, 99], "sharedopt": 76, "sharei": 12, "sharex": [12, 73], "sharper": [1, 30], "shell": [10, 18, 21, 46, 47, 48, 52, 79, 97], "shift": [27, 52, 55, 56, 57, 59, 64, 66, 76, 77, 78, 79, 96], "shift_psd_times_to_valid": 64, "shift_sum": [52, 77], "shift_sum_point": [52, 77], "shift_sum_points_pow2": [52, 77], "shift_to_valid": 64, "shiftim": 78, "shifttim": 78, "shlex": 61, "short": [1, 30, 52, 59, 72, 73, 79, 84, 91, 94, 99, 102], "short_seg": 72, "short_strid": 72, "shorter": [78, 79, 100, 102], "shortest": 58, "should": [1, 9, 10, 11, 16, 19, 22, 24, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "shouldn": 37, "show": [12, 14, 15, 17, 23, 27, 28, 31, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 73, 79, 80, 84, 87, 88, 94, 95, 96, 97, 99, 101, 102], "show_colorbar": 73, "show_statu": 39, "shown": [44, 52, 73, 84, 92], "shrink": 100, "shuffl": 62, "shut": [52, 64], "side": [59, 72, 73, 74, 76, 77, 78, 94], "side_band": [8, 30, 78], "sideband": [8, 30, 78], "sidewai": 73, "siev": [1, 30, 60, 84, 94, 102], "sig": [57, 97], "sig_info": 57, "sight": [8, 30, 52, 78], "sigma": [1, 30, 52, 56, 57, 59, 71, 75, 78, 79, 83, 84, 94, 102], "sigma2": 59, "sigma_alpha": 57, "sigma_cach": [52, 78], "sigma_log_vt": 71, "sigma_multiple_cut_thresh": [52, 57], "sigmasq": [24, 52, 57, 59], "sigmasq_seri": [52, 59, 77], "sigmasq_templ": 24, "sign": [52, 59, 76, 79, 97, 100], "signal": [1, 10, 13, 23, 29, 30, 32, 34, 35, 36, 38, 40, 42, 52, 54, 55, 57, 59, 64, 65, 66, 68, 71, 72, 74, 78, 79, 83, 84, 85, 88, 89, 93, 94, 95, 97, 99, 102], "signal_h1": 87, "signal_l1": 87, "signal_pdf_from_snr": [52, 71], "signal_rate_rescal": [52, 71], "signal_rate_trig_typ": [52, 71], "signal_v1": 87, "signaleventr": [52, 71], "signatur": 52, "signific": [22, 49, 52, 59, 68, 73, 76, 83, 91], "significan": 91, "significance_dict": 57, "significance_fit": [49, 52], "sigref": 57, "sigusr1": 52, "silent": [36, 37, 38, 40], "sim": 10, "sim_arrai": 67, "sim_fil": [66, 71], "sim_inspir": [10, 28, 52, 79, 93], "sim_tabl": 67, "sim_to_bins_funct": 52, "simburstt": 66, "simd_correl": [49, 52], "simd_correlate_cython": [49, 52], "simd_threshold_cython": [49, 52], "simid": 28, "similar": [1, 19, 30, 32, 35, 41, 44, 52, 57, 58, 62, 66, 67, 75, 76, 79, 83, 84, 92, 94, 95, 100, 101, 102], "similari": 91, "similarili": 67, "similarli": [14, 15, 64, 98], "siminspir": 66, "siminspiralt": [66, 67], "simnoisepsd": 72, "simpl": [17, 22, 34, 36, 39, 41, 43, 52, 56, 57, 59, 74, 76, 78, 79, 84, 97, 100], "simpli": [32, 40, 57, 58, 67, 76, 78, 79, 91, 92, 96, 99, 100], "simplic": 76, "simplif": [32, 58, 78], "simplifi": [36, 62, 72, 79], "simpson": 61, "simul": [10, 21, 30, 33, 34, 35, 37, 55, 66, 71, 75, 78, 79, 93, 94, 95, 98, 100], "simulated_strain": 80, "simulation_id": [28, 66, 67], "simultan": [1, 11, 30], "sin": [56, 64, 67, 78], "sin_angl": [0, 30, 32, 37, 38, 40, 56, 96], "sinangl": [0, 30, 52, 56], "sinc": [1, 11, 17, 28, 30, 32, 33, 37, 41, 43, 47, 61, 62, 63, 64, 65, 67, 78, 93, 95, 96, 97, 100, 102], "sindex": 78, "sine": [1, 30, 56, 57, 66, 77, 78, 84, 94, 102], "sinegauss": [49, 52], "singl": [10, 13, 17, 21, 25, 28, 30, 41, 42, 43, 49, 52, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 90, 91, 93, 94, 95, 96, 97, 100, 102], "single_arm_frequency_respons": [52, 55], "single_demarg": 40, "single_info": 57, "single_inst": 40, "single_layout": [52, 73], "single_marg": 40, "single_simpl": 40, "single_templ": [3, 30, 40, 42, 52, 61, 79], "single_template_plot": 79, "single_trig_fil": 79, "single_trigg": 79, "singledetautochisq": [52, 77], "singledetbankveto": [52, 77], "singledetpowerchisq": [52, 77], "singledetsgchisq": [52, 77], "singledetskymaxautochisq": [52, 77], "singledetskymaxbankveto": [52, 77], "singledetskymaxpowerchisq": [52, 77], "singledettrigg": [28, 52, 57, 67], "singlepool": [49, 52], "singles_timefreq": 79, "singletempl": [3, 30, 40, 42, 61, 64], "singletemplateexecut": [52, 79, 89], "singletimefreqexecut": [52, 79, 89], "singular": [92, 97], "singularitycleanenv": 97, "singularityimag": 97, "sinusoid": 78, "sire_first": 97, "site": [48, 52, 60, 79, 84, 89, 90, 94, 97, 102], "sitecat": 79, "sitenam": 79, "situat": [83, 84, 97], "size": [10, 17, 22, 30, 40, 52, 56, 57, 58, 59, 61, 64, 65, 67, 73, 75, 76, 78, 79, 83, 84, 91, 92, 94, 97, 99], "skew": 71, "skew_lognormal_sampl": [52, 71], "skip": [30, 44, 57, 63, 64, 79, 84, 92, 97, 99], "skip_arg": [62, 64], "skip_extend": 76, "skip_field": 78, "skip_opt": [52, 79, 92], "skip_vector": 64, "skipped_data": 79, "sky": [10, 15, 28, 32, 34, 37, 40, 42, 52, 54, 55, 56, 59, 64, 72, 73, 75, 77, 79, 85, 87, 94, 96, 97, 99], "sky_coord": [52, 55], "sky_err": 79, "sky_error": [79, 99], "sky_grid": [49, 52, 84], "sky_grid_fil": 79, "sky_loc": [0, 30, 49, 52], "skygrid": [52, 75, 79, 84], "skygrid_fil": 79, "skymap": [79, 96], "sl7_cluster_setup": 97, "slate": 91, "sleep": 64, "slen": [57, 77, 78], "slice": [27, 52, 57, 62, 65, 66, 67, 74, 76, 78, 99], "slice_and_tap": [52, 66], "slice_end": 66, "slice_start": 66, "slid": [57, 73, 89], "slide": [57, 71, 73, 79, 91, 94, 97, 101], "slide_dict": [73, 79], "slide_id": 73, "slide_opts_help": [52, 73], "slide_step": 57, "slightli": [34, 39, 59, 84, 96], "slop": 57, "slope": 64, "slot": [75, 78], "slow": [27, 61, 76, 79, 84, 86, 92], "slower": [30, 42, 47, 59, 67, 75, 84, 90], "slowli": [42, 64, 84], "small": [32, 42, 44, 57, 59, 66, 83, 97, 98], "smaller": [10, 21, 49, 52, 56, 57, 64, 67, 74, 75, 76, 84, 91, 94, 97, 102], "smallest": [32, 52, 53, 57, 74, 75, 84], "smbhb": 30, "smirnov": 57, "smooth": [27, 42, 72, 74, 78, 79], "sn": [60, 77], "snapshot": 99, "sngl": [10, 57, 79, 83, 97], "sngl_file": [67, 79], "sngl_ifar_est_dist": 57, "sngl_ifo_job_setup": [52, 79, 89], "sngl_inspir": [28, 75, 84, 101, 102], "sngl_inspiral_t": [75, 84], "sngl_object": 57, "sngl_rank": 57, "sngl_ranking_": 83, "sngl_ranking_min_expected_psdvar": 97, "sngl_ranking_onli": 83, "sngl_ranking_psd_var_val_threshold": 83, "sngl_stat": 57, "sngl_tabl": 75, "snglinspir": [67, 75, 78], "snglinspiralt": 75, "snglinspiralutil": 67, "sngls_file": 79, "sngls_info": 57, "sngls_inj_fil": 79, "sngls_list": 57, "snglstat": 57, "snippet": 79, "snowlin": [2, 5, 6, 30, 41, 43, 52, 61], "snowline_fil": [2, 41, 62], "snowlinefil": [2, 41, 61, 62], "snowlinesampl": [5, 6, 30, 43, 61, 65], "snr": [24, 27, 28, 29, 35, 36, 37, 38, 40, 44, 49, 52, 57, 58, 59, 64, 67, 68, 71, 75, 77, 78, 79, 83, 85, 91, 93, 94, 95, 96, 97], "snr_abort_threshold": 59, "snr_dict": 57, "snr_draw": [61, 64], "snr_from_loglr": [49, 52, 64, 96], "snr_norm": 77, "snr_optim": [49, 52], "snr_predictor": [61, 64], "snr_predictor_dom": [61, 64], "snr_rang": 64, "snr_reg": 24, "snr_seri": 59, "snr_series_dict": 68, "snr_templat": 24, "snr_template_0": 24, "snr_threshold": [59, 77, 94], "snr_timeseri": 79, "snr_trigger": 57, "snr_val": 73, "snrdict": 73, "snrtime": 94, "snrv": [57, 59, 77], "so": [10, 11, 13, 17, 19, 22, 23, 28, 30, 32, 33, 37, 40, 41, 42, 43, 45, 47, 48, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 78, 79, 84, 86, 87, 88, 90, 92, 94, 95, 96, 97, 100], "sobhb": 64, "softwar": [18, 29, 41, 45, 47, 94, 97, 99], "sokal": 59, "solar": [8, 17, 28, 30, 32, 52, 69, 78, 84, 102], "solar_mass": 52, "solar_mass_to_kg": [49, 52], "sole": 64, "solid": [17, 52, 56, 73], "solid_angle_sampl": 17, "solut": [52, 64, 69], "solv": [56, 67, 92, 97], "solver": 69, "some": [10, 15, 17, 19, 21, 22, 23, 27, 28, 32, 39, 41, 42, 43, 45, 46, 47, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "some_gating_fil": [79, 92], "someon": [81, 84], "someth": [30, 62, 64, 74, 76, 77, 84, 92, 93, 96, 100, 101, 102], "sometim": [32, 72, 80, 92], "sophist": 30, "sort": [52, 62, 64, 66, 67, 73, 75, 79, 97, 101], "sort1": 57, "sort2": 57, "sort2length": 57, "sort_arr": [52, 67], "sort_frequency_cutoff": 101, "sort_ord": 79, "sort_stat": [52, 73], "sort_trig": [52, 73], "sort_var": 79, "sortabl": 73, "sourc": [1, 10, 11, 12, 14, 17, 23, 25, 27, 28, 29, 30, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 87, 88, 90, 92, 93, 94, 96, 97, 100, 101, 102], "source_color": [52, 73], "south": [56, 75], "sp": 87, "spa": 78, "spa_amplitude_factor": [52, 78], "spa_compress": [52, 78], "spa_dist": [52, 78], "spa_length_in_tim": [52, 78], "spa_tmplt": [49, 52], "spa_tmplt_cpu": [49, 52], "spa_tmplt_cupi": [49, 52], "spa_tmplt_end": [52, 78], "spa_tmplt_engin": [52, 78], "spa_tmplt_inline_sequ": [52, 78], "spa_tmplt_norm": [52, 78], "spa_tmplt_precondit": [52, 78], "space": [10, 22, 28, 30, 32, 40, 42, 49, 51, 52, 56, 57, 61, 62, 64, 65, 68, 71, 72, 73, 75, 76, 78, 79, 84, 91, 94, 96, 97, 99, 102], "spacedetector": [52, 55], "span": [60, 70, 79, 90, 94], "spars": [10, 94], "spatmplt": [64, 94, 97, 98], "spawn": [32, 33], "spec": 94, "spec_d": 71, "spec_json": 71, "specfi": 90, "specfic": 75, "specfil": 71, "speci": 97, "special": [30, 34, 41, 42, 45, 52, 56, 60, 64, 76, 79, 87, 96, 100], "special_tid": 79, "specif": [13, 15, 28, 32, 34, 41, 42, 47, 52, 53, 56, 57, 61, 62, 64, 66, 67, 71, 73, 75, 78, 79, 80, 84, 85, 89, 90, 92, 93, 94, 96, 97, 99, 100, 102], "specifi": [1, 10, 15, 21, 28, 30, 32, 34, 43, 44, 45, 47, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102], "specifii": 92, "spectral": [59, 72, 76, 77, 80, 96], "spectrum": [27, 70, 72, 76, 94, 102], "sped": 10, "speed": [10, 32, 36, 38, 40, 42, 47, 66, 75, 78, 84, 94, 96, 102], "spend": 84, "spher_harm": [52, 78], "sphere": [17, 52, 56, 57], "spheric": [17, 32, 52, 54, 56, 64, 69, 78, 96], "spherical_spin_1_to_cartesian_spin_1": [7, 30, 52], "spherical_spin_2_to_cartesian_spin_2": [7, 30, 52], "spherical_to_cartesian": [7, 17, 30, 32, 52, 54, 96], "sphericalspin1tocartesianspin1": [7, 30, 49, 52], "sphericalspin2tocartesianspin2": [7, 30, 49, 52], "sphericaltocartesian": [7, 30, 49, 52], "spheroid": 78, "sphinx": 45, "sphinxcontrib": 45, "spin": [0, 8, 10, 12, 13, 21, 28, 30, 32, 38, 40, 42, 49, 52, 59, 64, 67, 68, 69, 71, 75, 78, 79, 85, 91, 92, 93, 96, 97, 102], "spin1": [10, 21, 28, 36, 52, 84], "spin12_deltaphi": 52, "spin1_a": [32, 44, 52, 63, 64, 67, 95, 96], "spin1_azimuth": [32, 44, 52, 67, 95, 96], "spin1_polar": [32, 44, 52, 67, 95, 96], "spin1i": [8, 30, 32, 52, 67, 78, 79, 96], "spin1x": [8, 30, 32, 52, 67, 78, 79, 96], "spin1x_from_xi1_phi_a_phi_": [49, 52], "spin1y_from_xi1_phi_a_phi_": [49, 52], "spin1z": [8, 30, 32, 35, 36, 38, 40, 52, 64, 67, 71, 75, 78, 79, 87, 96], "spin1z_from_mass1_mass2_chi_eff_chi_a": [49, 52], "spin1z_ref": [35, 36], "spin1zjumpfac": 75, "spin2": [10, 21, 28, 36, 52, 84], "spin2_a": [32, 44, 52, 67, 95, 96], "spin2_azimuth": [32, 44, 52, 67, 95, 96], "spin2_polar": [32, 44, 52, 67, 95, 96], "spin2i": [8, 30, 32, 52, 67, 78, 79, 96], "spin2x": [8, 30, 32, 52, 67, 78, 79, 96], "spin2x_from_mass1_mass2_xi2_phi_a_phi_": [49, 52], "spin2y_from_mass1_mass2_xi2_phi_a_phi_": [49, 52], "spin2z": [8, 30, 32, 35, 36, 52, 64, 67, 71, 75, 78, 87, 96], "spin2z_from_mass1_mass2_chi_eff_chi_a": [49, 52], "spin2z_ref": [35, 36], "spin2zjumpfac": 75, "spin_binless": 97, "spin_from_pulsar_freq": [49, 52], "spin_ldc2pycbc": 36, "spin_mag": 17, "spin_ord": [8, 30, 52, 78], "spin_pi": [52, 67], "spin_px": [52, 67], "spin_pz": [52, 67], "spin_si": [52, 67], "spin_sx": [52, 67], "spin_sz": [52, 67], "spindominatedwf": 87, "spini": [17, 52], "spinn": 64, "spintaylorf2": 87, "spintaylorf2_interp": 87, "spintaylorf2_swapp": 87, "spintaylorf2_swapper_interp": 87, "spintaylort1": 87, "spintaylort2": 67, "spintaylort4": [10, 28, 87, 99], "spintaylort4fouri": 87, "spintaylort4threepointfivepn": [28, 97], "spintaylort5": 87, "spintaylort5fouri": 87, "spinx": [17, 52], "spinz": [17, 71], "splai": [52, 58], "spline": 74, "split": [10, 21, 30, 32, 36, 58, 61, 67, 72, 76, 78, 79, 84, 91, 92, 96, 97], "split_bank_num": 84, "split_inspinj": 99, "split_multi_sect": [52, 76, 79, 89], "split_table_out": [79, 101], "splitbank": [79, 99, 101], "splittabl": [49, 52, 89, 97], "spot": 73, "spread": [56, 61], "spring": 74, "sptild": 87, "spxiwh": [79, 84, 92, 93, 101, 102], "sqlite": 79, "sqrt": [52, 56, 61, 64, 69, 78, 94], "squar": [13, 17, 57, 59, 64, 67, 72, 75, 76, 77, 84, 94, 102], "squared_norm": [52, 76], "sr_factor": 57, "srate": 72, "src": [21, 27, 44, 46, 47, 93, 101, 102], "src_arg": 52, "src_mass_from_z_det_mass": [49, 52], "srcmass": [52, 96], "srcmass1": [17, 34, 37, 52, 95, 96], "srcmass2": [17, 34, 37, 95, 96], "srcmasses_comoving_volum": 96, "srcmchirp": [34, 95, 96], "sref": 57, "ss": 68, "ssb": [8, 30, 35, 52, 54, 55], "ssb_to_geo": [7, 30, 52, 54], "ssb_to_lisa": [7, 30, 52, 54], "ssbtogeo": [7, 30, 49, 52], "ssbtolisa": [7, 30, 49, 52], "ssh": 28, "st": [15, 59], "stabil": 91, "stabl": [52, 69], "stack": 84, "stack_dist": 84, "stack_xi_direction_brut": [52, 75, 84], "stackoverflow": [67, 76], "stage": [57, 58, 79, 84, 89, 92, 94, 97, 99, 100, 101, 102], "staging_sit": [52, 79, 89], "staging_site_str": [52, 79, 89], "stai": [56, 71, 79, 93], "stamp": [25, 28, 76], "stand": 91, "standalon": [17, 56, 84], "standard": [17, 30, 32, 45, 52, 55, 56, 57, 58, 61, 62, 67, 71, 73, 74, 75, 76, 79, 83, 84, 87, 88, 90, 91, 92, 94, 95, 96, 97], "star": [13, 30, 34, 52, 69, 71, 75, 84], "start": [1, 8, 10, 14, 18, 21, 24, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 48, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "start1": 57, "start2": 57, "start_end_from_seg": [52, 57], "start_end_to_seg": [52, 57], "start_handl": 67, "start_index": [64, 65, 78], "start_it": 62, "start_iter": 63, "start_pad": [52, 100], "start_refresh_thread": [52, 57], "start_sampl": 44, "start_step": 63, "start_tim": [14, 15, 24, 28, 52, 60, 67, 70, 74, 76, 87], "startcolumn": [52, 67], "startend": [28, 76, 94], "starting_beta": [61, 62, 65], "startstream": [52, 67], "starttim": [79, 90], "startup": 65, "stat": [49, 52, 56, 59, 61, 62, 64, 65, 67, 73, 79, 83, 94], "stat_calcul": 57, "stat_featur": 57, "stat_fil": [57, 79], "stat_keyword": 57, "stat_kwarg_dict": 57, "stat_kwarg_list": 57, "stat_nam": 65, "state": [14, 30, 34, 41, 52, 56, 57, 60, 62, 64, 65, 67, 69, 71, 75, 92, 97, 100], "state_channel": 74, "statement": 94, "statfil": 79, "static": [28, 32, 34, 35, 40, 52, 56, 57, 58, 62, 64, 65, 66, 71, 77, 78, 79], "static_arg": [52, 56, 66, 78], "static_param": [30, 32, 34, 35, 36, 37, 38, 40, 56, 61, 62, 64, 65, 96], "static_t": [52, 73], "stationari": [32, 35, 42, 52, 64, 78, 97], "statist": [30, 41, 57, 59, 61, 64, 67, 71, 77, 78, 79, 82, 85, 94, 97], "statistic_opt_group": 57, "statistic_refresh_r": 57, "statistic_threshold": 67, "statmap": [71, 79, 91, 97], "statmap_fil": 79, "statmap_inj": 97, "statmapdata": [52, 67], "statnam": [57, 61, 64], "statu": [1, 25, 29, 30, 52, 58, 60, 64, 74, 95, 96, 97, 99], "statusbuff": [52, 60], "statval": 71, "stderr": [52, 79, 97], "stdout": [36, 78, 79, 97], "step": [8, 10, 21, 28, 30, 31, 41, 43, 44, 57, 59, 61, 65, 70, 72, 74, 76, 78, 79, 84, 88, 93, 96, 97, 102], "stephen": 86, "stepping_stone_algorithm": [52, 61], "stepsampl": 65, "sticki": 73, "stild": [23, 58, 59, 62, 77], "stilde_dict": [62, 64, 74], "still": [30, 32, 40, 66, 67, 84, 90, 93, 95, 96], "sting": 78, "stitch": 78, "stochast": [10, 75], "stone": [52, 61, 69], "stop": [32, 33, 59, 62, 64, 65, 66, 75, 76, 78, 84, 94, 95, 96, 97, 99], "stop_index": 78, "storag": [16, 56, 59, 76, 79, 84, 97, 99], "storage_path": 79, "storage_path_bas": 84, "store": [1, 10, 21, 24, 30, 41, 47, 49, 52, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 84, 90, 92, 93, 94, 96, 97, 100, 101, 102], "store_fil": 79, "str": [52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 92, 100], "str_to_bool": [61, 64], "str_to_tupl": [61, 64], "str_util": [49, 52], "straightforward": [42, 45, 56], "strain": [1, 9, 12, 15, 23, 28, 30, 32, 33, 34, 35, 37, 38, 40, 49, 50, 51, 52, 53, 55, 59, 60, 62, 64, 66, 72, 77, 78, 79, 84, 85, 87, 92, 94, 96, 97, 98, 102], "strain_adjust": 74, "strain_condit": 80, "strain_dict": [62, 64, 72, 74], "strain_fil": 36, "strain_from_cli_multi_ifo": [61, 64], "strain_high_pass": [84, 94, 102], "strain_low_pass": [84, 94, 102], "strain_opt_group": 57, "strain_seg": 72, "strain_with_inject": 80, "strainbuff": [52, 59, 74], "strainseg": [52, 72, 74], "strategi": 71, "stream": 67, "strech": 27, "strength": 55, "stretch": [65, 72, 90], "strftime": 52, "strict": [52, 58, 64, 76], "strictest": 57, "stride": [1, 28, 30, 32, 33, 34, 35, 37, 38, 40, 58, 67, 72, 77, 84, 94, 96, 97, 98, 102], "string": [8, 18, 30, 47, 51, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 87, 90, 92, 93, 94, 97, 99, 100, 101, 102], "stringent": 52, "stringio": 62, "stringlength": 52, "strip": [34, 61, 64], "strip_ilwdchar": 67, "strip_unit": 52, "strong": 84, "strongli": [28, 84, 101], "structur": [30, 41, 43, 56, 57, 58, 65, 67, 73, 75, 79], "struggl": [32, 96], "stub": [52, 76, 77], "studi": [15, 29, 52], "stuff": [79, 100], "stupid": 84, "sturg": 61, "style": [19, 52, 66, 67, 71, 73], "su": 18, "sub": [34, 42, 62, 63, 64, 67, 76, 78, 79, 84, 88, 89, 90, 92, 93, 94, 96, 97, 101, 102], "subarrai": 67, "subband": 78, "subbank": 94, "subclass": [52, 57, 58, 62, 67, 74, 76, 79, 93, 99], "subdata": 64, "subdax": [79, 97], "subdirectori": [79, 97], "subfield": 67, "subfunct": [79, 90, 93, 94, 102], "subgroup": 62, "subject": [24, 68, 84], "submiss": [93, 97, 99, 101], "submit": [10, 21, 79, 84, 95, 96], "submit_now": 79, "submodel": [34, 42, 64], "submodul": [49, 84, 89], "subnam": [40, 61, 64], "subp": 64, "subpackag": [30, 49, 56], "subplot": [12, 15, 17, 73], "subprocess": [36, 68, 79], "subsample_interpol": 59, "subsect": [65, 76, 79, 100, 101], "subsequ": [57, 76, 78, 79, 87, 90, 97], "subset": [42, 52, 57, 58, 64, 67, 75, 92, 98], "subset_tag": 92, "subsitut": 78, "substanti": 67, "substitut": [72, 78], "substr": 79, "subtempl": 73, "subtitl": [97, 98], "subtract": [32, 78, 79, 83, 100], "subworkflow": [52, 79, 89], "succeed": 97, "succes": 60, "success": [10, 52, 63, 94, 97], "successfulli": [10, 95, 96, 97], "suceed": 97, "sucess": [52, 97], "suffic": 92, "suffici": [45, 66, 78, 84, 91, 96], "suffix": [52, 56, 78], "sugar": [10, 57, 97], "suggest": [10, 94, 95, 96], "sugwg": 97, "suit": [29, 41], "suitabl": [10, 52, 78, 79, 84, 90, 94, 99], "sum": [34, 52, 57, 64, 76, 77, 78, 83, 84, 102], "sum_": [59, 64, 78], "sum_i": 64, "sum_mod": [52, 78], "summar": [78, 79], "summari": [64, 73, 79, 90, 92, 95, 96, 97, 98, 99], "summary_fil": 79, "summary_plot": [79, 96], "summary_product": [61, 64], "summary_t": [79, 96], "summseglist": [79, 90], "supermass": [35, 36], "supernova": [49, 52], "supernovae_convex_hul": 56, "supernovaeconvexhul": [52, 56], "superposit": 78, "supervis": [49, 52], "supplement": [76, 84, 91], "supplement_config_fil": 84, "supplementari": 79, "suppli": [1, 30, 57, 59, 73, 75, 79, 83, 84, 90, 93, 94, 97, 99, 100, 101, 102], "support": [1, 8, 10, 15, 20, 30, 38, 39, 40, 41, 42, 43, 51, 52, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 74, 75, 76, 78, 79, 80, 84, 87, 90, 92, 98, 100], "supported_approxim": [52, 66], "supportedi": 64, "suppos": 98, "suppress": [23, 59, 76], "sure": [15, 17, 34, 45, 46, 47, 54, 79, 81, 91, 96, 97], "surfac": [17, 84, 102], "surpris": 84, "surviv": [57, 73, 74], "suviv": 57, "sval": 64, "svd": 92, "swap": [52, 62, 65], "swap_companion": 52, "swap_index": 62, "swap_interv": [61, 62, 65], "swidth": 57, "swift": 79, "swig": 47, "switch": [10, 52, 67, 78, 79, 100], "swmr": 67, "sy": 48, "symbol": [68, 71, 97], "symlink": [52, 68, 90], "symmetr": [17, 23, 38, 52, 57, 59, 67, 69, 75, 76, 84, 94, 102], "symmetri": 64, "sympi": 71, "syntax": [1, 19, 30, 52, 56, 63, 64, 67, 78, 79, 94, 95, 97, 98], "syr": [28, 97, 98, 99], "syracus": 97, "sysadmin": 97, "system": [8, 13, 19, 22, 30, 32, 45, 46, 47, 48, 52, 55, 56, 64, 69, 71, 75, 78, 84, 91, 92, 94, 97], "systemat": 79, "t": [1, 12, 14, 15, 19, 20, 23, 28, 30, 35, 36, 37, 38, 40, 50, 51, 52, 55, 57, 59, 60, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102], "t0": [54, 74], "t1": [15, 55, 57], "t1200307v4": 84, "t1200307v4_h1": 84, "t1400682": 74, "t1700029": 71, "t2": [55, 57], "t2100060": 71, "t2_cutoff_frequ": [49, 52], "t2_cutoff_veloc": [49, 52], "t4_cutoff_veloc": [49, 52], "t_0": [78, 96], "t_bg": 57, "t_decai": 78, "t_delay_idx": 57, "t_final": 78, "t_gate_end": 64, "t_gate_start": 64, "t_geo": 54, "t_geo_from_ssb": [52, 54], "t_gp": 55, "t_lisa": 54, "t_lisa_from_ssb": [52, 54], "t_num": [66, 78], "t_obs_start": [35, 36], "t_offset": [35, 36], "t_psd": 36, "t_ssb": 54, "t_ssb_from_t_geo": [52, 54], "t_ssb_from_t_lisa": [52, 54], "t_tdi_v2": 36, "tab": [73, 95, 97], "tabl": [10, 24, 28, 30, 52, 57, 62, 66, 67, 72, 73, 75, 78, 79, 83, 84, 86, 90, 95, 96, 97, 100, 102], "table_summari": [79, 96], "table_util": [49, 52], "tablenam": 67, "tablestream": 67, "tag": [18, 30, 47, 52, 56, 63, 67, 73, 76, 79, 81, 84, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "taiji": 72, "taiji_psd_compon": [52, 72, 84], "tail": [52, 57, 61, 79], "tail_sigma": 79, "tail_threshold": [52, 57], "take": [15, 17, 25, 27, 28, 30, 31, 34, 36, 37, 38, 40, 41, 44, 45, 52, 56, 57, 58, 60, 61, 64, 65, 67, 68, 71, 73, 75, 76, 78, 79, 81, 83, 84, 87, 88, 90, 92, 94, 97, 98, 99, 101], "take_maximum_valu": 77, "taken": [34, 43, 52, 57, 59, 60, 62, 72, 75, 76, 78, 79, 80], "talk": [95, 96], "tama": [4, 30, 52, 72, 84, 94, 102], "tandem": [78, 96], "tap": 23, "taper": [1, 28, 30, 32, 34, 66, 74, 76, 78, 84, 94, 102], "taper_data": [84, 94, 102], "taper_end": 76, "taper_non": 76, "taper_start": [28, 76], "taper_startend": 76, "taper_timeseri": [52, 76], "taper_width": 76, "taper_window": 76, "taperdur": [1, 30], "tapermethod": 76, "tar": 48, "tarbal": 88, "target": [29, 42, 63, 65, 68, 84, 99, 102], "target_eff_nsampl": [61, 65], "target_likelihood_cal": 65, "target_niter": [61, 65], "target_r": 63, "target_str": 68, "task": [9, 14, 52, 97, 98], "taskset": 94, "tast": 19, "tau": [52, 56, 59, 65, 71, 78, 84], "tau0": 52, "tau0_from_mass1_mass2": [49, 52], "tau0_from_mchirp": [49, 52], "tau0_from_mtotal_eta": [49, 52], "tau0_tau3_to_mass1_mass2": [49, 52], "tau0_tau3_to_mtotal_eta": [49, 52], "tau0tau3": [52, 102], "tau3": 52, "tau3_from_mass1_mass2": [49, 52], "tau3_from_mtotal_eta": [49, 52], "tau_": 78, "tau_0": [52, 75, 94], "tau_210": 78, "tau_220": 78, "tau_3": [52, 75], "tau_from_final_mass_spin": [49, 52], "tau_lmn": 78, "taulmn": 78, "taulmn_from_other_lmn": [49, 52], "taylor": 97, "tayloret": 87, "taylorf2": [10, 21, 38, 40, 52, 67, 75, 78, 84, 87, 94, 102], "taylorf2_interp": 87, "taylorf2ecc": 87, "taylorf2nl": 87, "taylorf2nl_interp": 87, "taylorf2nltid": 87, "taylorf2redspin": 87, "taylorf2redspintid": 87, "taylorfx": 52, "taylorr2f4": 84, "taylort1": [21, 87], "taylort2": [21, 87], "taylort3": [21, 87], "taylort4": [21, 78, 87], "taylort4threepointfivepn": 93, "taylortx": 52, "tbin": 57, "tc": [8, 30, 32, 34, 35, 36, 37, 38, 40, 42, 44, 52, 64, 66, 67, 78, 96], "tc_geo_param": 52, "tc_lisa": 36, "tc_lisa_param": 52, "tc_path": 79, "tc_ref": [34, 35, 36, 38], "tc_ref_fram": 78, "tc_ssb_param": 52, "tcolumn": 57, "td": [78, 85, 88], "td_approxim": [52, 78, 87], "td_damped_sinusoid": [52, 78], "td_data": [61, 64], "td_model": 71, "td_option": 79, "td_output_vector": [52, 78], "td_taper": [52, 66, 78], "td_waveform_mode_approxim": [52, 64, 78], "td_waveform_to_fd_waveform": [52, 78], "tdi": [35, 36, 55, 72], "tdict": 71, "tdif": 57, "tdomaincbcgener": [52, 78], "tdomaincbcmodesgener": [52, 78], "tdomainfreqtauringdowngener": [52, 78], "tdomainmassspinringdowngener": [52, 78], "tdomainsupernovaegener": [52, 78], "team": [19, 88], "technic": [10, 52, 71, 72], "techniqu": 84, "tell": [15, 22, 28, 30, 34, 45, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102], "temeratur": 65, "temp": [32, 62, 65], "tempbank": 75, "temper": [41, 43, 62, 65], "temperatur": [30, 32, 41, 43, 61, 62, 65], "templat": [9, 21, 24, 27, 28, 29, 30, 36, 42, 47, 52, 57, 58, 59, 64, 66, 67, 71, 72, 73, 74, 75, 77, 78, 79, 83, 91, 92, 94, 97, 98, 99, 101], "template_bank": [10, 79, 92, 97, 102], "template_bank_fil": 79, "template_bins_fil": 79, "template_boundari": 24, "template_cross": 77, "template_cut_dict": 57, "template_dur": [24, 52, 67], "template_duration_templ": 24, "template_hash": [24, 67, 78], "template_hash_to_id": [52, 73], "template_id": [24, 52, 57, 59, 67, 73, 75], "template_norm": 59, "template_num": 57, "template_output": 59, "template_overlap": [52, 77], "template_param_bin_pa": [52, 71], "template_param_bin_types_farlim_pa": [52, 71], "template_param_bin_types_pa": [52, 71], "template_plu": 77, "template_segment_check": [52, 66], "template_str": 79, "template_thin": [52, 78], "templatebank": [52, 78, 94, 99], "templtbank": 102, "temporari": 97, "tempout": 78, "tend": 97, "tensor": 55, "teobresum": 87, "teobresum_rom": 87, "term": [30, 42, 52, 59, 64, 72, 73, 75, 78, 84, 94, 96, 102], "termin": [28, 65, 75, 84, 97], "test": [9, 10, 15, 25, 30, 31, 32, 36, 37, 38, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 74, 75, 76, 77, 79, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 100, 102], "test_": 30, "test_burn_in_it": 61, "test_eggbox": [3, 30, 64], "test_is_burned_in": 61, "test_norm": [3, 30, 31, 39, 64], "test_point_dist": [52, 75, 84], "test_point_distance_vari": [52, 75, 84], "test_posterior": [3, 30, 64], "test_prior": [3, 30, 64], "test_rosenbrock": [3, 30, 64], "test_str": [76, 79, 92], "test_tim": 71, "test_un": 25, "test_volcano": [3, 30, 64], "test_waveform": [87, 88], "test_workflow": 97, "testalign": 84, "testdata": 24, "testeggbox": [3, 30, 61, 64], "testinggr": [8, 30, 78], "testnonspin": [84, 102], "testnorm": [3, 30, 31, 61, 64], "testposterior": [3, 30, 61, 64], "testprior": [3, 30, 61, 64], "testrosenbrock": [3, 30, 61, 64], "teststoch": 84, "teststr": [79, 92], "testvolcano": [3, 30, 61, 64], "teukolski": 69, "texsymb": 71, "text": [1, 19, 30, 41, 52, 62, 72, 73, 76, 81, 84, 94, 97, 102], "texunit": 71, "tf": [84, 94, 102], "tf_from_fil": [52, 74], "th": [44, 56, 57, 62, 65, 73], "than": [1, 10, 21, 30, 32, 39, 40, 41, 42, 43, 47, 48, 52, 56, 57, 59, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 90, 92, 94, 95, 96, 97, 99, 100, 102], "thank": 43, "theauto": 94, "thei": [10, 22, 28, 30, 32, 34, 43, 51, 52, 56, 57, 58, 61, 62, 64, 65, 67, 72, 74, 75, 76, 78, 79, 80, 84, 91, 92, 95, 96, 97, 98, 100, 102], "them": [15, 28, 30, 32, 34, 40, 43, 52, 56, 57, 59, 64, 65, 66, 67, 71, 75, 78, 79, 80, 81, 84, 85, 88, 90, 92, 95, 96, 97, 99], "theme": 45, "themselv": [1, 30, 43, 52, 67, 79, 84, 90, 101], "theorem": [64, 72], "ther": 66, "therefor": [10, 28, 32, 34, 41, 51, 55, 56, 64, 78, 79, 84, 92, 95, 96, 97, 99, 102], "thereof": 78, "thermodynam": [61, 65], "thermodynamic_integr": [52, 61], "thershold": 61, "theshold": 75, "thesi": 59, "theta": [17, 52, 54, 56, 64, 78], "theta_": 64, "theta_0": 56, "theta_1": 56, "theta_high": 17, "theta_low": 17, "theta_lower_bound": 17, "theta_upper_bound": 17, "thetajn": 52, "thi": [1, 8, 10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "thin": [30, 43, 61, 62, 65, 79, 96], "thin_": 62, "thin_bi": 62, "thin_end": [44, 61, 62, 65], "thin_interv": [44, 61, 62, 65], "thin_safety_factor": [61, 65], "thin_samples_for_writ": [61, 62], "thin_start": [44, 61, 62, 65], "thinca": 92, "thing": [41, 45, 56, 62, 64, 65, 76, 78, 79, 83, 84, 90, 92, 93, 94, 97, 100, 101, 102], "think": [41, 43, 74, 79, 100], "thinned_bi": [30, 61, 62], "third": [13, 53, 67, 72, 74, 76, 84, 97], "thoma": 84, "those": [13, 22, 35, 41, 43, 52, 57, 59, 62, 64, 67, 68, 76, 78, 79, 84, 90, 92, 94, 96, 97, 99], "though": [10, 32, 41, 75, 78, 79, 84, 95, 100, 102], "thread": [57, 94], "three": [10, 28, 32, 34, 36, 56, 71, 72, 73, 76, 91, 97, 99, 100], "threed": 84, "threepn": [75, 84, 102], "threepointfivepn": [75, 84, 92, 94, 99, 102], "threhold": 71, "thresh": [52, 57, 59, 71, 94], "threshold": [1, 28, 30, 52, 57, 59, 60, 61, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 91, 94, 97, 102], "threshold_and_clust": [52, 57], "threshold_cpu": [49, 52], "threshold_cupi": [49, 52], "threshold_inlin": [52, 57], "threshold_numpi": [52, 57], "threshold_onli": [52, 57], "threshold_real_numpi": [52, 57], "thresholdclust": [52, 57], "through": [12, 13, 14, 22, 25, 29, 41, 43, 45, 46, 51, 53, 57, 58, 59, 61, 65, 66, 71, 72, 76, 79, 84, 85, 87, 89, 90, 92, 97, 98], "throughout": [30, 43], "throw": [75, 76, 79, 84, 92], "thrown": [76, 79], "thrsehold": [84, 102], "thu": [30, 42, 62, 64, 67, 74, 75], "thumb": 84, "tianqin": 72, "tianqin_psd_compon": [52, 72, 84], "tick": 73, "tid": [57, 79], "tidal": [8, 10, 30, 52, 78], "tidal_ord": [8, 30, 78], "tide": [52, 78], "tids_out": 57, "tie": 57, "tight": 10, "tight_layout": 17, "tighten": 10, "tighter": 56, "tightli": 64, "tild": [52, 64], "tile": [59, 65, 76, 77, 79, 94, 102], "tilt": [52, 54, 69], "tim": 75, "time": [1, 8, 10, 12, 13, 21, 22, 24, 25, 27, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102], "time1": [57, 67], "time2": [57, 67], "time_addit": 57, "time_coinc": 57, "time_coincid": [52, 57], "time_delai": 57, "time_delay_from_detector": [15, 52, 55], "time_delay_from_earth_cent": [15, 52, 55], "time_delay_from_loc": [52, 55], "time_delay_idx": 57, "time_dependent_opt": [52, 79, 89], "time_ethinca": 75, "time_from_frequencyseri": [52, 78], "time_multi_coincid": [52, 57], "time_seri": 59, "time_slic": [12, 52, 76], "time_slid": [57, 92], "time_stat": 97, "time_unprojected_metr": [52, 75, 84], "time_veto_max_stat": 73, "time_window": 79, "timecluster_cython": [52, 57], "timecoincidence_constructfold": [52, 57], "timecoincidence_constructidx": [52, 57], "timecoincidence_findidxlen": [52, 57], "timecoincidence_getslideint": [52, 57], "timeout": [60, 74], "timer": [57, 74], "timer1": 57, "timer2": 57, "times_to_link": [52, 73], "times_to_url": [52, 73], "timescal": [71, 78], "timeseri": [22, 23, 25, 27, 49, 52, 53, 55, 57, 58, 59, 60, 64, 66, 68, 70, 72, 73, 74, 77, 78, 79, 87, 88], "timeslid": [57, 73, 91, 92, 97], "timeslide_dur": [52, 57], "timeslide_id": [57, 67], "timeslide_interv": 57, "timeslide_offset": 57, "timesmlid": 97, "timestamp": [52, 57, 76], "timseslide_offset": 57, "titl": [12, 15, 17, 56, 64, 67, 73, 79, 81, 96, 97, 98], "title_text": 79, "tito": 84, "titosbank": 10, "tjo": 75, "tlen": [57, 59, 87], "tmax": 65, "tmeseri": 78, "tmp": [97, 99], "tmp_psd": 51, "tmpdir": 97, "tmplt": 78, "tmplt_bank": [79, 94, 102], "tmplt_bank_match": 77, "tmplt_filter": 71, "tmplt_norm": 77, "tmplt_snr": 77, "tmpltbank": [9, 49, 52, 76, 89, 92, 94, 97, 99, 101], "tmpltbank_01": 94, "tmpltbank_19": 94, "tmpltbank_8c": 102, "tmpltbank_fil": [28, 79], "tmpltbank_splittable_bank0": 101, "tmpltbank_splittable_bank1": 101, "tmpltbank_splittable_bank2": 101, "tmpltbank_splittable_bank3": 101, "tmpltbank_splittable_bank4": 101, "tn": 72, "tnum_finish": 57, "to_arrai": [52, 67], "to_astropi": [52, 76], "to_coinc_hdf_object": [52, 67], "to_coinc_xml_object": [52, 67], "to_dict": [61, 65], "to_fil": 52, "to_file_object": [52, 79, 89], "to_frequencyseri": [22, 23, 27, 52, 76, 87, 88], "to_live_point": [61, 65], "to_segment_xml": [52, 79, 89], "to_shift": 57, "to_shift_ifo": 57, "to_shift_ref": 57, "to_timeseri": [22, 27, 52, 76], "to_uniform_patch": [52, 56], "to_unit_hypercub": [61, 65], "toctre": 19, "todo": 52, "tof": 57, "togeth": [17, 19, 30, 64, 78, 79, 84, 85, 92, 94, 96, 97, 99, 100], "toggl": [64, 78], "token": 92, "tol": [52, 76], "told": 97, "toler": [39, 52, 56, 65, 76, 78], "too": [10, 48, 56, 57, 59, 67, 79, 84, 93, 94, 96, 97, 99, 101, 102], "took": [75, 97, 99], "tool": [9, 10, 25, 28, 29, 30, 45, 52, 57, 61, 67, 78, 80, 89, 97, 99], "toolkit": [13, 52], "tooltip": [52, 73], "top": [11, 19, 30, 47, 56, 62, 64, 66, 67, 74, 78, 79, 89, 92, 97, 100], "topic": [75, 88], "total": [10, 28, 32, 52, 56, 57, 58, 64, 65, 67, 71, 74, 75, 77, 79, 84, 91, 92, 94, 97, 99, 102], "total_j": [8, 30, 78], "total_loglr": [61, 64], "total_mass": [91, 97], "total_r": 71, "total_rate_upto_redshift": [52, 71], "total_tri": 73, "totalmass": [28, 75], "totmass": 75, "touch": [11, 91], "tov": 52, "tov_fil": 52, "toward": [73, 78], "trace": 79, "traceback": 52, "track": [52, 64, 90], "track_ord": 67, "track_tim": 67, "tradition": 100, "trail": [73, 76], "train": 63, "tranform": 79, "transfer": [1, 18, 30, 59, 74, 84, 94, 97, 102], "transfom": 75, "transform": [7, 17, 22, 32, 33, 34, 35, 36, 37, 38, 49, 54, 55, 56, 58, 59, 64, 65, 72, 75, 76, 78, 79, 89, 94, 96], "transform_funct": 52, "transform_prior": [61, 65], "transient": [29, 57, 74, 76], "translat": [57, 73, 75, 84, 102], "transpar": 64, "transpos": 58, "trapezium": 52, "trapezoid": 61, "trapezoid_correct": 61, "trapzoid": 61, "travel": [55, 57, 59, 85, 97], "traverse_workflow_io": [52, 79, 89], "travi": 81, "trdata": 71, "treat": [10, 34, 42, 52, 59, 61, 64, 95, 96, 97], "tref": [57, 74], "trend": 76, "tri": [52, 64, 67, 84, 96], "trial": [57, 73, 79], "trial_dict": 73, "tricki": 67, "trig": [28, 57, 71, 73, 94], "trig2hdf": [91, 97], "trig_clust": 99, "trig_combin": 99, "trig_dict": [52, 67], "trig_end_tim": 94, "trig_fil": [67, 73, 79, 86], "trig_id": [52, 67, 79], "trig_ifo": 71, "trig_mc": 52, "trig_mc_det": 52, "trig_start_tim": 94, "trig_stat": 73, "trig_tim": [59, 66, 79], "trig_valu": 73, "trigfil": 57, "trigger": [1, 9, 29, 30, 32, 33, 34, 35, 36, 37, 49, 52, 59, 60, 66, 67, 68, 71, 72, 73, 74, 77, 79, 81, 83, 84, 89, 91, 96, 97, 100], "trigger_cut_dict": 57, "trigger_data": 71, "trigger_dict": 73, "trigger_end": 74, "trigger_fil": [73, 79], "trigger_fit": [49, 52], "trigger_id": [67, 79], "trigger_id1": 67, "trigger_id2": 67, "trigger_merg": 79, "trigger_nam": 73, "trigger_start": 74, "trigger_tim": [1, 30, 32, 73, 96], "trigger_timeseries_plot": [52, 73], "trigs_or_inj": 73, "trim": 72, "trim_pad": 74, "trim_zero": [52, 76, 87], "trivial": 84, "true": [12, 15, 17, 35, 36, 37, 39, 40, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 87, 88, 90, 92, 93, 97, 100, 102], "trunc": [1, 30, 35, 84, 94, 102], "trunc_method": [72, 76], "truncat": [1, 30, 56, 64, 66, 67, 72, 76, 84, 94, 97, 102], "trust": 84, "try": [1, 27, 29, 30, 41, 43, 52, 57, 62, 63, 64, 65, 66, 67, 75, 76, 78, 84, 85, 96, 97], "ts_filter": 23, "ts_filtered2": 23, "tsampl": [23, 50, 51], "tsdata": 76, "tseri": 25, "tsig": 64, "tst": 30, "tst0": 74, "tstart": 64, "tuesdai": 28, "tukei": 74, "tunabl": [57, 64], "tune": [64, 84], "tuneabl": 59, "tupl": [52, 53, 54, 56, 57, 59, 61, 62, 64, 65, 67, 71, 72, 73, 74, 76, 78, 79], "tuple_to_be_hash": 78, "tuple_to_hash": [52, 78], "tuppl": 59, "turn": [8, 30, 34, 43, 59, 63, 64, 65, 66, 73, 78, 84, 96], "tutori": [19, 29, 42, 43], "twice": [10, 59, 74, 75, 92, 96], "twiddl": 58, "twidth": 57, "two": [10, 11, 14, 21, 22, 27, 28, 30, 32, 34, 38, 40, 41, 51, 52, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 83, 84, 87, 88, 91, 92, 94, 95, 96, 97, 98, 100], "two_column_layout": [52, 73], "two_det_weight": 57, "two_mass_distribut": 17, "two_mass_sampl": 17, "twophas": 77, "twopn": [75, 84, 102], "twopointfivepn": [75, 84, 102], "twosid": 77, "txt": [28, 36, 45, 51, 52, 56, 61, 71, 76, 79, 84, 92, 94], "type": [1, 14, 18, 22, 23, 25, 27, 28, 30, 33, 34, 42, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 84, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102], "type_in_tim": [52, 71], "typeerror": [59, 66, 67, 76], "typeof": 73, "typic": [1, 18, 25, 30, 45, 52, 58, 59, 65, 71, 76, 78, 84, 87, 94, 97, 102], "tz": 52, "u": [15, 28, 29, 42, 56, 59, 67, 75, 76, 79, 84, 90, 92, 94, 97, 102], "u1": 15, "u_val": [52, 67, 77, 79], "u_vals_": 79, "uberbank": [10, 84], "ufunc": [30, 67], "uid": 74, "uint32": 57, "uk": 57, "ulm": 78, "ultim": [71, 97], "ultranest": [2, 5, 6, 30, 41, 43, 52, 61], "ultranest_fil": [2, 41, 62], "ultranestfil": [2, 41, 61, 62], "ultranestsampl": [5, 6, 30, 43, 61, 65], "unbias": 59, "unbound": [30, 56], "uncertainti": [32, 52, 57, 59, 71, 73, 79], "unchang": [76, 79, 92], "uncom": 96, "undefin": 73, "under": [11, 23, 34, 45, 47, 52, 57, 60, 64, 75, 78, 84, 86, 87, 91, 92, 97], "undercov": 84, "underestim": 83, "underflow": [57, 83], "underli": [43, 65, 67, 78], "underneath": 55, "underscor": 64, "understand": [13, 30, 59, 73, 74, 92, 97, 99], "understood": [64, 66, 67, 78, 94, 95], "undo": 11, "unedit": [76, 79], "unequ": 78, "unexpect": 67, "unfortun": 65, "unicod": 62, "uniform": [0, 10, 21, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 49, 52, 64, 65, 67, 71, 83, 85, 93, 95, 96, 97], "uniform_angl": [0, 30, 32, 37, 40, 56, 96], "uniform_comoving_volum": [95, 96], "uniform_disk_ski": [0, 30, 56], "uniform_f0_tau": [0, 30, 56], "uniform_log": [0, 30, 49, 52], "uniform_log10": [0, 30, 56, 95], "uniform_power_law": [0, 30, 56], "uniform_prior": [56, 64], "uniform_radiu": [0, 30, 32, 37, 38, 40, 56], "uniform_ski": [0, 30, 32, 34, 40, 56, 96], "uniform_solid_angle_distribut": 17, "uniform_solidangl": [0, 30, 32, 56, 96], "uniformangl": [0, 30, 52, 56], "uniformdiskski": [0, 30, 52, 56], "uniformf0tau": [0, 30, 52, 56], "uniformli": [10, 17, 28, 52, 64, 76], "uniformlog10": [0, 30, 52, 56], "uniformpowerlaw": [0, 30, 52, 56], "uniformradiu": [0, 30, 52, 56], "uniformski": [0, 30, 52, 56], "uniformsolidangl": [0, 17, 30, 52, 56], "unimod": 39, "unimpact": 97, "unintention": 74, "union": [30, 58], "uniqu": [24, 30, 34, 41, 43, 57, 64, 70, 72, 73, 74, 76, 78, 79, 90, 92, 93, 94, 96, 102], "uniqueifi": [79, 90], "uniquifi": [79, 90], "unit": [1, 15, 17, 28, 30, 52, 54, 55, 56, 57, 59, 64, 65, 69, 71, 72, 76, 78, 84, 102], "uniti": [72, 76], "univari": [61, 64], "univers": [41, 79, 88, 97], "unix": [62, 97], "unless": [30, 44, 62, 79, 81, 84, 88, 89, 94], "unlik": [58, 64, 76, 78, 84], "unmax_metr": 75, "unncessari": 66, "unnorm": [59, 77], "unord": 57, "unphys": 52, "unpredicat": 101, "unproject": 75, "unrecogn": [56, 78], "unreli": 10, "unrestrict": 57, "unsaf": 78, "unstabl": 47, "unsubmit": 97, "unsur": [41, 43, 84], "unthin": 62, "unthread": 94, "until": [32, 43, 44, 52, 53, 59, 62, 64, 65, 68, 75, 78, 84], "untru": 101, "untrustworthi": 78, "unus": [57, 60, 75], "unusu": [60, 68], "unweight": 62, "unwhiten": 64, "unwrap": [64, 78], "up": [10, 11, 15, 21, 28, 30, 32, 34, 36, 37, 38, 39, 40, 42, 45, 47, 52, 57, 58, 59, 60, 62, 64, 65, 66, 72, 73, 75, 77, 78, 79, 84, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 102], "up_flag1": [79, 100], "up_flag2": [79, 100], "up_flag3": [79, 100], "updat": [11, 22, 32, 41, 52, 55, 57, 60, 61, 64, 65, 67, 71, 72, 76, 78, 79, 81, 90, 94], "update_all_model": [61, 64], "update_c": [52, 74], "update_cach": [52, 60], "update_cache_by_incr": [52, 60], "update_checkpoint_histori": [61, 62], "update_cp": 64, "update_current_retention_level": [52, 79, 89], "update_current_tag": [52, 79, 89], "update_fil": [52, 57], "update_g": [52, 74], "update_group": 65, "update_interv": [39, 65], "update_interval_iter_fract": 39, "update_interval_ncal": 39, "update_output_directori": [52, 79, 89], "update_param": 65, "update_progress": 94, "update_progress_fil": 94, "update_r": [52, 74], "update_tim": [90, 92, 97, 98], "update_valid_start": [52, 57], "updated_singl": 57, "updatesegmenttim": [79, 90], "upgrad": [45, 48, 75], "upload": [9, 52, 67, 73, 79], "upon": [19, 34, 42, 56, 60, 64, 67, 84, 95, 96], "upper": [49, 52, 53, 56, 57, 59, 64, 68, 72, 73, 74, 75, 77, 78, 84, 87, 92, 102], "upper_freq_formula": 75, "upsampl": 94, "upsample_method": 59, "upsample_threshold": [59, 94], "upscal": 79, "upstream": 11, "upward": 27, "urgent": 81, "uri": 97, "uri_localnam": 67, "url": [1, 27, 28, 30, 60, 67, 79, 84, 88, 90, 92, 94, 97, 98, 99, 100, 102], "url_typ": 60, "urllib": 27, "urlretriev": 27, "urltyp": [90, 97, 98, 100], "us": [1, 8, 10, 11, 14, 15, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 46, 47, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100], "usabl": 59, "usag": [28, 57, 79, 84, 91, 97, 99], "use_astropi": 54, "use_clust": 59, "use_end": 64, "use_eos_max_ns_mass": 75, "use_exact_inj_param": 79, "use_in": 67, "use_kombin": 73, "use_mean_tim": 79, "use_mpi": [49, 52, 65], "use_relative_error": 73, "use_scientific_not": 73, "use_start": 64, "use_tmp_subdir": 79, "useabl": 88, "useag": 39, "user": [9, 10, 19, 22, 24, 28, 32, 43, 45, 47, 48, 51, 52, 60, 66, 69, 71, 73, 78, 79, 84, 92, 94, 97, 99, 102], "user_str": 21, "userblock_s": 67, "userlist": 78, "usernam": 11, "usesplitlist": 79, "usingpoint": 94, "usman": [52, 57], "usr": [46, 97], "usr1": [10, 21, 97], "usr2": 65, "usual": [42, 47, 57, 59, 60, 77, 78, 79, 80, 87, 92, 93, 97, 99, 100], "utc": 68, "utc_tim": 73, "utf": 57, "util": [15, 17, 30, 32, 41, 49, 52, 55, 57, 59, 62, 64, 65, 66, 67, 69, 72, 73, 76, 79, 87, 92, 101, 102], "utilit": 72, "utils_cpu": [49, 52], "utils_cupi": [49, 52], "uwm": [84, 92, 97], "v": [18, 38, 40, 52, 56, 60, 64, 68, 75, 79, 81, 83, 84, 88, 90, 91, 94, 97, 99, 101, 102], "v0": 15, "v1": [12, 15, 18, 38, 40, 53, 60, 75, 76, 77, 79, 80, 81, 84, 87, 90, 92, 96, 97, 100, 102], "v1_gwosc_o2_16khz_r1": 96, "v1_losc_cln_4_v1": [38, 40], "v1_norm": 59, "v1frame": 96, "v2": [12, 75], "v2_norm": 59, "v3": [12, 33, 37, 75, 88], "v6": 47, "v_max": 71, "v_min": 71, "val": [1, 30, 57, 62, 65, 72, 73, 75], "val1": 56, "val2": 56, "val_max": 73, "val_str": 79, "valid": [24, 37, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 72, 74, 75, 78, 79, 80, 84, 85, 88, 89, 92, 94, 96, 97, 102], "valid_chunk": 79, "valid_length": 79, "valid_mask": 60, "valid_on_zero": 60, "valid_param": 52, "valid_seg": 79, "valid_slic": [52, 57], "valid_start": 57, "validate_checkpoint_fil": [61, 62], "validcolumn": 67, "vallisneri": 84, "valu": [1, 10, 17, 21, 22, 24, 28, 30, 32, 35, 42, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "value1": [57, 79, 92], "value2": [57, 79, 92], "value3": 57, "value_a": 79, "value_b": 79, "value_c": 79, "valueerror": [52, 56, 62, 64, 65, 69, 72, 73, 76, 79, 90], "var": [52, 56, 57, 63, 73, 99], "var_": 63, "varaibl": 72, "vararg": 62, "varargs_delim": [52, 56, 63, 65], "vargs_sect": 56, "vari": [30, 32, 37, 38, 40, 42, 45, 52, 56, 64, 65, 74, 75, 78, 79, 84, 96, 102], "variabl": [1, 15, 17, 28, 30, 32, 34, 35, 36, 44, 46, 52, 56, 57, 59, 62, 64, 65, 67, 72, 73, 78, 79, 84, 90, 92, 94, 96, 97, 99, 102], "variable_arg": [52, 56, 64, 78], "variable_param": [30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 56, 61, 62, 64, 65, 96], "varianc": [17, 56, 59, 61, 63, 64, 70, 72], "variat": [49, 52, 57, 64, 71, 74, 75, 84, 94, 102], "varieti": 80, "variou": [9, 30, 42, 52, 57, 58, 59, 64, 72, 73, 75, 76, 78, 79, 82, 84, 90, 92, 94, 96, 98, 99, 100, 102], "varnam": 97, "varphi": 78, "vartheta": [31, 64], "vary_dens": 75, "vary_fmax": 75, "vary_fupp": 75, "vary_polar": 55, "vast": 30, "vc": 52, "vdot": [52, 76], "ve": [96, 100], "vec": [52, 58, 59], "vec1": 59, "vec2": 59, "vecdiff": [52, 78], "vector": [52, 54, 55, 56, 57, 58, 59, 60, 64, 73, 74, 76, 78], "veloc": 52, "velocity_to_frequ": [49, 52], "venumadhav": 64, "verbatim": 84, "verbatim_ex": 79, "verbos": [28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 84, 94, 96, 97, 99, 101, 102], "veri": [19, 30, 39, 47, 59, 61, 78, 83, 84, 92, 95], "verifi": [10, 52, 57, 58, 68, 72, 74, 75, 84, 90], "verify_arg": [52, 57], "verify_ethinca_metric_opt": [52, 75, 84], "verify_fft_opt": [52, 58], "verify_live_significance_duration_bin_opt": [52, 68], "verify_live_significance_trigger_pruning_opt": [52, 68], "verify_mass_range_opt": [52, 75, 84], "verify_metric_calculation_opt": [52, 75, 84], "verify_optimization_opt": [49, 52], "verify_processing_opt": [49, 52], "verify_psd_opt": [52, 72, 84], "verify_psd_options_multi_ifo": [52, 72, 84], "verify_segment_opt": [52, 74], "verify_segment_options_multi_ifo": [52, 74], "verify_strain_opt": [52, 74], "verify_strain_options_multi_ifo": [52, 74], "version": [10, 11, 13, 18, 21, 27, 34, 35, 45, 46, 48, 49, 57, 58, 59, 62, 65, 67, 72, 78, 81, 84, 86, 88, 89, 91, 92, 94, 97, 99, 101, 102], "version_info": 48, "versioningexecut": [52, 79, 89], "versu": [79, 95], "vert_spik": 73, "vertic": [52, 73], "veto": [1, 23, 30, 49, 52, 73, 79, 92, 94, 98, 99], "veto_def_filenam": 52, "veto_defin": [1, 30, 52, 79], "veto_fil": [57, 67, 73, 79, 93], "veto_idx": 73, "veto_inject": [52, 79, 89, 93], "veto_nam": [79, 93], "veto_segment_nam": 79, "vetodef_fil": 79, "vetotim": 97, "vetotime_cat3": 97, "via": [19, 32, 41, 45, 46, 52, 57, 58, 59, 61, 67, 69, 73, 75, 78, 79, 86, 94, 96, 97, 99, 102], "view": [8, 15, 30, 52, 67, 76, 78, 84, 97], "violat": [42, 56, 78], "virgo": [4, 13, 14, 29, 30, 52, 53, 72, 80, 84, 94, 96, 100, 102], "viridi": 73, "virtual": [45, 46, 48, 62, 67], "virtual_env": 47, "virtualenv": 47, "virtualfield": [52, 67], "virut": 67, "visibl": [15, 48], "visual": [95, 97, 99], "vlid": 24, "vline": 52, "vlm": 78, "vmax": [12, 40, 73, 78], "vmin": [37, 40, 73], "voffset": 73, "vol": 52, "vol_err": 52, "volcano": 64, "volum": [17, 18, 28, 32, 37, 38, 40, 52, 56, 57, 65, 71, 83, 95, 96], "volume_binned_pyl": [49, 52], "volume_error": 52, "volume_montecarlo": [49, 52], "volume_shel": [49, 52], "volume_to_distance_with_error": [49, 52], "volunt": 68, "von_mis": 56, "vsa": 75, "vt": 71, "vv": [84, 94, 97, 99, 101, 102], "vx": 81, "w": [52, 57, 62, 69], "wa": [10, 28, 29, 30, 32, 33, 34, 41, 44, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 75, 76, 78, 79, 84, 86, 90, 92, 94, 95, 97, 99, 100], "wai": [18, 19, 22, 28, 32, 43, 47, 52, 56, 59, 60, 61, 66, 67, 75, 78, 79, 84, 90, 92, 93, 94, 97, 98, 99, 100, 102], "wait": [68, 84], "wait_for_utc_tim": [52, 68], "walk": [52, 61, 65], "walker": [30, 31, 32, 35, 36, 38, 61, 62, 65, 96], "wall": [84, 97], "wander": 74, "want": [10, 17, 22, 23, 25, 28, 30, 32, 34, 40, 44, 47, 48, 52, 53, 54, 56, 57, 60, 61, 62, 65, 66, 70, 72, 73, 74, 75, 76, 77, 79, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102], "wari": 57, "warn": [51, 52, 57, 59, 64, 74, 78, 79, 84, 86, 90, 98, 102], "warr": 67, "warrai": 78, "wasn": 64, "wast": [84, 97], "wav": [27, 76], "wave": [9, 13, 22, 30, 33, 37, 38, 40, 42, 52, 55, 60, 64, 67, 71, 78, 79, 85, 87, 88, 89, 92, 93, 94, 96, 99, 102], "waveform": [8, 9, 10, 15, 20, 21, 23, 27, 29, 32, 34, 35, 36, 37, 38, 40, 47, 49, 52, 55, 56, 59, 61, 62, 64, 66, 67, 68, 71, 73, 74, 76, 77, 84, 85, 89, 93, 94, 96, 97, 102], "waveform1": 21, "waveform2": 21, "waveform_decompression_method": [78, 94], "waveform_mod": [49, 52, 64], "waveform_norm_exist": [52, 78], "waveform_transform": [30, 32, 34, 35, 36, 38, 40, 64, 96], "waveformarrai": [52, 66, 67, 78, 94], "waveforms_transform": 30, "wavelength": 55, "we": [1, 10, 11, 13, 14, 15, 17, 22, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 71, 74, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "web": [10, 18, 21, 67, 97], "webpag": [79, 97, 99], "websit": 19, "week": [28, 34, 97], "weekly_ahop": [92, 93, 97, 101, 102], "weight": [15, 24, 42, 52, 57, 59, 61, 62, 64, 65, 70, 72, 76, 78, 83, 84], "weighted_inn": [52, 76], "weigth": 57, "weird": [84, 100], "welch": [27, 32, 51, 52, 72, 74, 76, 84], "well": [10, 22, 30, 56, 57, 60, 62, 64, 66, 67, 73, 75, 84, 92, 95, 97, 98], "well_reflect": [52, 56], "were": [30, 32, 34, 52, 56, 57, 60, 61, 62, 64, 65, 67, 72, 76, 78, 84, 87, 88, 92, 95, 96, 97, 99], "wf": [64, 79, 87, 88], "wf_err": 73, "wflow": 79, "wget": 33, "what": [1, 10, 12, 15, 19, 22, 28, 30, 32, 34, 41, 43, 45, 52, 56, 57, 61, 62, 64, 65, 66, 67, 73, 78, 79, 80, 84, 85, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 102], "what_waveform": 87, "whatev": [10, 42, 62, 67, 73, 75, 78, 79, 83, 84, 90, 97, 100], "when": [1, 8, 10, 14, 15, 17, 21, 22, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 47, 48, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "whenev": [67, 69, 84], "where": [1, 11, 14, 19, 22, 28, 30, 32, 41, 42, 43, 46, 47, 48, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "wherea": [30, 40, 61, 67], "wherev": [97, 98], "whether": [29, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 73, 76, 77, 78, 79, 90, 92, 94, 97, 99], "which": [1, 8, 10, 14, 15, 16, 17, 22, 24, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "which_bin": [52, 57], "while": [10, 25, 30, 35, 36, 42, 43, 52, 55, 61, 64, 67, 73, 75, 78, 84, 87, 89, 96, 97], "white": [12, 70, 72, 73, 79], "white_strain": 27, "whiten": [1, 12, 30, 52, 61, 64, 72, 74, 76, 84, 85, 94, 102], "whitened_data": [61, 64, 76], "whitespac": [21, 78], "who": [9, 16, 34, 41, 52, 79], "whole": [52, 67, 79, 90, 92], "whose": [25, 52, 56, 57, 58, 64, 72, 74, 75, 79, 84, 97], "why": [30, 79, 84, 90], "wide": [32, 64, 92], "width": [1, 30, 52, 61, 63, 64, 73, 75, 78, 84, 94, 102], "width_ratio": 73, "wiki": [52, 58, 87], "wikipedia": [52, 58, 87], "wildcard": 95, "willcom": 94, "williamson": 57, "window": [1, 10, 18, 30, 32, 57, 59, 66, 67, 72, 73, 74, 76, 78, 79, 84, 91, 92, 94, 97, 99, 102], "window_length": 57, "window_s": 57, "winn": 56, "wisdom": 94, "wisdom_io": [52, 58], "wise": [42, 84], "wish": [34, 41, 43, 45, 62, 96, 97, 99], "wit": [84, 94, 102], "with_boundari": 63, "within": [10, 15, 16, 21, 25, 29, 43, 51, 52, 54, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 78, 79, 84, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "within_constraint": [52, 56], "without": [15, 24, 30, 47, 48, 51, 52, 56, 57, 62, 64, 67, 73, 75, 76, 78, 79, 84, 86, 87, 92, 94, 97, 99], "witness_filter_length": [84, 94, 102], "witness_frame_typ": [84, 94, 102], "witness_tf_fil": [84, 94, 102], "wkflow": 73, "won": 100, "word": [55, 57, 61, 64, 71, 75, 78, 90, 93], "worfkow": 79, "worflowconfigpars": [52, 56, 74], "work": [10, 22, 31, 33, 43, 45, 47, 52, 55, 57, 59, 60, 61, 62, 64, 65, 67, 75, 79, 84, 88, 90, 91, 92, 94, 96, 97, 99, 100, 102], "workaround": 45, "worker": [52, 79, 84, 97], "workflow": [16, 29, 49, 52, 56, 62, 73, 76, 78], "workflow_config": [95, 96], "workflow_independent_ifo": [92, 94, 97, 98, 102], "workflow_independent_ifos_nodata": 102, "workflow_nam": [84, 95, 96, 97, 99], "workflow_no_ifo_variation_nodata": 102, "workflowconfigpars": [30, 52, 56, 62, 63, 64, 65, 74, 76, 79, 89, 92], "workspac": [10, 21], "worri": [52, 67, 75, 84, 100], "wors": 78, "worth": [22, 66, 97], "would": [14, 15, 20, 22, 28, 30, 32, 33, 34, 40, 41, 43, 46, 52, 55, 56, 58, 62, 65, 67, 75, 76, 78, 79, 80, 83, 84, 87, 88, 92, 93, 94, 96, 97, 99, 100, 102], "wouldn": 99, "wrap": [1, 30, 52, 59, 62, 64, 67, 76, 78, 97], "wraparound": 27, "wrapper": [52, 57, 64, 65, 67, 68, 76, 78, 79, 92, 94, 102], "wre": 64, "write": [1, 16, 28, 30, 41, 43, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 73, 75, 76, 78, 79, 80, 81, 84, 85, 88, 89, 90, 94, 95, 96, 97, 99, 102], "write_acceptance_fract": [61, 62], "write_acceptance_ratio": [61, 62], "write_arg": 62, "write_beta": [61, 62], "write_command_lin": [61, 62], "write_compressed_waveform": 78, "write_config_fil": [61, 62], "write_data": [61, 62], "write_effective_nsampl": [61, 62], "write_ensemble_attr": [61, 62], "write_ev": [52, 57], "write_fram": [25, 52, 60], "write_inject": [61, 62], "write_kwargs_to_attr": [61, 62], "write_logevid": [61, 62], "write_metadata": [61, 64, 65], "write_metr": 75, "write_niter": [61, 62], "write_param": 66, "write_pickled_data_into_checkpoint_fil": [61, 62], "write_posterior": 41, "write_psd": [61, 62, 79], "write_random_st": [61, 62], "write_raw_sampl": [61, 62], "write_result": [61, 65], "write_resume_point": [41, 61, 62], "write_run_end_tim": [61, 62], "write_run_start_tim": [61, 62], "write_sampl": [41, 61, 62], "write_sampler_metadata": [41, 61, 62], "write_samples_to_fil": [61, 62], "write_stild": [61, 62], "write_strain": [61, 62], "write_temperature_data": [61, 62], "write_to_fil": [52, 75, 84], "write_to_hdf": [52, 57, 78], "written": [23, 25, 28, 30, 60, 62, 64, 65, 66, 67, 75, 76, 78, 79, 84, 90, 92, 94, 95, 96, 97, 99, 101], "wrong": [11, 84], "www": [27, 33, 37, 84, 88, 92, 97], "x": [8, 17, 30, 31, 32, 39, 41, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 67, 69, 71, 72, 73, 75, 78, 79, 81, 92, 94, 96, 98, 100], "x1": [15, 90], "x11": 28, "x509": 90, "x86_64": 79, "x_": [59, 78], "x_max": 52, "x_min": 52, "x_t": 57, "xaltitud": 55, "xangl": [15, 55], "xerr": 12, "xi": [68, 75, 84], "xi1": 52, "xi1_from_spin1x_spin1i": [49, 52], "xi2": 52, "xi2_from_mass1_mass2_spin2x_spin2i": [49, 52], "xi_1": 56, "xi_2": 56, "xi_bound": 56, "xi_ext": 75, "xi_i": [75, 84], "xi_j": 75, "xi_max": 75, "xi_min": 75, "xi_spac": 75, "xis1": 75, "xis2": 75, "xlabel": [12, 14, 17, 23, 27, 50, 51, 73, 87, 88], "xlalsimimreobfinalmassspin": 52, "xlalsimimreobfinalmassspinprec": 52, "xlength": [15, 55], "xlim": [27, 51, 87, 88], "xlm": 78, "xlnm": 78, "xmax": [51, 73], "xmc": 17, "xmin": [51, 73], "xml": [1, 10, 28, 30, 57, 66, 67, 72, 75, 78, 79, 84, 86, 91, 92, 93, 94, 97, 98, 99, 101, 102], "xml_all": 79, "xml_all_fil": 79, "xml_file": [57, 79], "xml_trigger_fil": 79, "xmlbank": 79, "xmldoc": 78, "xparam": 73, "xq": 17, "xrang": 57, "xscale": [12, 87, 88], "xsede": 97, "xval": 57, "xxx": 21, "xxxx": 93, "y": [8, 17, 28, 30, 31, 32, 39, 52, 54, 55, 56, 59, 64, 67, 69, 72, 73, 78, 81, 96], "y_": [67, 78], "y_j": 64, "yaltitud": 55, "yangl": [15, 55], "ye": 79, "year": [29, 54, 57, 72, 73, 94], "yet": [53, 57, 62, 64, 65, 66, 67, 96, 101], "yield": [45, 52, 56, 64, 71, 79, 92], "ylabel": [12, 17, 23, 27, 50, 73, 87], "ylength": [15, 55], "ylim": [27, 51], "ymax": [14, 73], "ymc": 17, "ymin": [14, 73], "yml": 84, "you": [1, 10, 11, 13, 14, 15, 18, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "your": [10, 11, 18, 20, 22, 25, 28, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 52, 58, 66, 72, 74, 75, 76, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99], "your_ini_fil": [10, 21], "yourself": 19, "yparam": 73, "yq": 17, "yr": 71, "yscale": 12, "z": [1, 8, 17, 30, 31, 32, 35, 36, 37, 38, 40, 44, 52, 54, 59, 61, 64, 67, 69, 71, 72, 78, 81, 84, 94, 96, 102], "z_arg": 61, "z_arg_label": 61, "z_arrai": 71, "z_astro": 71, "z_peak": 71, "zdhp": [84, 87], "zenodo": [13, 36], "zero": [1, 22, 23, 28, 30, 52, 55, 56, 57, 59, 60, 64, 65, 67, 71, 72, 73, 74, 76, 77, 78, 79, 83, 84, 87, 94, 97, 102], "zero_det_high_p": 84, "zero_pad_data_extend": [52, 79, 89], "zerolag": [71, 79], "zeronois": [1, 30, 84, 94, 102], "zeropn": [75, 84, 102], "zeros_half_width": [1, 30, 84, 94, 102], "zeros_offset": 59, "zip": 12, "zoom": [28, 73], "zoom_x": 73, "zoombutton": 73, "zoomplugin": 73, "zpk": [1, 30, 49, 52, 84, 94, 102], "zpk_filter": 59, "zpk_k": [84, 94, 102], "zpk_p": [84, 94, 102], "zpk_z": [84, 94, 102], "zval": 73, "zvalu": 73, "\u03c0": [55, 56, 75]}, "titles": ["&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Applications and Workflows", "Calculating the Effectualness (Fitting Factor) of Template Banks", "Building Documentation for GitHub Pages", "Catalog of Observed Gravitational-wave Mergers", "Use of PyCBC in Scientific Publications", "Query times of valid data, hardware injections, and more.", "Gravitational-wave Detectors", "Documentation for Developers", "Using PyCBC Distributions from PyCBC Inference", "Running PyCBC under Docker", "Documenting PyCBC code", "Extending PyCBC with external plugins", "Dag Generator for Doing Faithfulness Comparisons", "Performing FFTs in PyCBC", "Filtering", "HDF files within the PyCBC workflow", "Reading Gravitational-wave Frames", "Index", "Signal Processing with GW150914", "Hardware injection waveform generation", "PyCBC: Powering Gravitational-wave Astronomy", "PyCBC inference documentation (<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc.inference</span></code>)", "Running on an analytic distribution", "Simulated BBH example", "GW150914 example with gaussian noise model", "Using the hierarchical model", "LISA SMBHB injection and parameter estimation", "LISA parameter estimation for simulated SMBHB from LDC", "Marginalized time model", "Using the relative model", "Trying out different samplers", "Using the single template model", "Inference IO", "Details of common Models in PyCBC Inference", "Sampler API", "Plotting the posteriors (<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_inference_plot_posterior</span></code>)", "Installing PyCBC", "Instructions to add CUDA support (optional)", "Installing lalsuite for PyCBC", "Setting up virtualenv", "pycbc", "Generating Noise", "Handling PSDs", "pycbc package", "pycbc.catalog package", "pycbc.coordinates package", "pycbc.detector package", "pycbc.distributions package", "pycbc.events package", "pycbc.fft package", "pycbc.filter package", "pycbc.frame package", "pycbc.inference package", "pycbc.inference.io package", "pycbc.inference.jump package", "pycbc.inference.models package", "pycbc.inference.sampler package", "pycbc.inject package", "pycbc.io package", "pycbc.live package", "pycbc.neutron_stars package", "pycbc.noise package", "pycbc.population package", "pycbc.psd package", "pycbc.results package", "pycbc.strain package", "pycbc.tmpltbank package", "pycbc.types package", "pycbc.vetoes package", "pycbc.waveform package", "pycbc.workflow package", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_condition_strain</span></code>: operations with strain data files", "Creating Releases of PyCBC", "PyCBC searches", "The ranking statistic used in PyCBC searches", "PyCBC template bank generation documentation (<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc.tmpltbank</span></code>)", "Library Examples and Interactive Tutorials", "Uploading triggers to gracedb", "Waveforms", "Making new waveform approximants available to PyCBC", "Workflow: the inspiral analysis workflow generator (<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc.workflow</span></code>)", "The workflow datafind and validation module", "HDF5 Based Coincidence Code", "Pycbc\u2019s workflow module configuration file(s) and command line interface", "The workflow injection generation module", "The workflow matched-filter module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_make_inference_inj_workflow</span></code>: A parameter estimation workflow generator for injections", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_make_inference_workflow</span></code>: A parameter estimation workflow generator", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_make_offline_search_workflow</span></code>: A workflow to search for gravitational waves", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_make_psd_estimation_workflow</span></code>: A workflow generator for noise estimation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycbc_make_offline_grb_workflow</span></code>: A GRB triggered CBC analysis workflow generator", "The workflow segment generation module", "The workflow table splitting module", "The workflow template bank generation module"], "titleterms": {"": [84, 92], "1": 32, "2": 32, "3": 32, "A": [95, 96, 97, 98, 99], "For": 30, "No": 99, "The": [83, 84, 90, 93, 94, 100, 101, 102], "abitrari": 40, "about": 12, "access": 12, "ad": [15, 87, 88, 100], "add": [41, 43, 46], "addit": [24, 47], "advanc": 30, "algorithm": 13, "align": [76, 84], "all": 40, "amplitud": 87, "an": [14, 23, 31, 51, 84], "analysi": [10, 89, 99], "analyt": [31, 51, 64, 72], "analytical_spac": 72, "analyz": 97, "angular": [56, 63], "anoth": 84, "antenna": 15, "api": [22, 43], "appli": 23, "applic": 9, "approach": 84, "approxim": 88, "ar": 99, "arbitrari": 56, "around": 12, "arrai": [24, 76], "array_cpu": 76, "array_cupi": 76, "ascii": 28, "asign": 91, "astronomi": 29, "autochisq": 77, "autocorrel": 59, "avail": 88, "backend": 22, "backend_cpu": 58, "backend_cupi": 58, "backend_mkl": 58, "backend_support": 58, "background": [84, 91], "backport": 81, "bank": [10, 78, 84, 89, 102], "bank_chisq": 77, "bank_convers": 75, "bank_output_util": 75, "base": [22, 54, 64, 65, 91], "base_cub": 65, "base_data": 64, "base_hdf": 62, "base_mcmc": [62, 65], "base_multitemp": [62, 65], "base_nested_sampl": 62, "base_sampl": 62, "basic": 89, "bayesian": 13, "bbh": [32, 95], "best": 84, "between": [15, 87], "bin_util": 52, "binari": 13, "both": 84, "bound": 56, "boundari": 52, "bounded_norm": 63, "brute_force_method": 75, "brute_marg": 64, "bug": 81, "build": [11, 45, 47], "burn_in": 61, "calc_moment": 75, "calcul": [10, 27, 87], "calibr": [30, 74], "can": [14, 87], "catalog": [12, 53], "caveat": 80, "cbc": 99, "chain": 44, "check": [28, 47], "checkpoint": 30, "chisq": [23, 77], "chisq_cpu": 77, "chisq_cupi": 77, "choos": 22, "cite": 13, "class": [22, 41], "class_api": 58, "cluster": [45, 91], "coalesc": 13, "code": [19, 47, 84, 91, 92], "coher": 57, "coinc": 57, "coinc_rat": 57, "coincid": [79, 89, 91], "color": 73, "column": 24, "combin": 24, "command": [28, 84, 86, 92], "common": 42, "compact": 13, "comparison": 21, "complet": 92, "composit": 42, "compress": 78, "condit": 80, "config": [21, 76, 92, 100], "configparser_test": 79, "configur": [10, 21, 30, 32, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "constraint": [30, 56], "content": [28, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 100], "convers": 52, "coord_util": 75, "coordin": [40, 54], "core": [58, 79], "cosmologi": 52, "cpnest": 39, "creat": [10, 11, 21, 32, 81, 88], "cuda": [45, 46], "cupyfft": 58, "custom": [15, 87, 88], "cut": 57, "dag": 21, "dashboard": [97, 99], "data": [12, 14, 24, 28, 30, 47, 80, 89, 97, 99], "data_util": 64, "databas": 28, "datafind": [79, 90], "debug": [97, 99], "decompress_cpu": 78, "decompress_cpu_cython": 78, "decompress_cupi": 78, "defin": [97, 100], "depend": 46, "describ": 13, "descript": 100, "detail": [42, 43, 97, 99], "detector": [15, 55, 87], "determin": 14, "develop": [16, 30, 45], "diagram": [41, 43], "differ": 39, "direct": 84, "directori": 99, "discret": 63, "distribut": [17, 31, 56], "do": [12, 21, 99], "docker": [18, 45], "document": [11, 16, 19, 22, 25, 30, 45, 84, 89, 92, 97, 99], "domain": [50, 87], "dq": [52, 73, 79], "dummi": 65, "dynesti": [39, 62, 65, 95, 96], "each": 12, "effectu": 10, "emce": [39, 62, 65], "emcee_pt": [62, 65, 96], "end": 97, "entropi": 61, "environ": [47, 92], "eos_util": 69, "epsi": [39, 62, 65], "estim": [28, 35, 36, 51, 72, 95, 96, 98], "evalu": 10, "event": [12, 57], "eventmgr": 57, "eventmgr_cython": 57, "evid": 61, "evolut": 87, "ex": 102, "exampl": [17, 21, 24, 30, 32, 33, 34, 37, 40, 43, 84, 85, 92, 95, 96, 100], "execut": [24, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102], "exist": [15, 80, 100], "extend": [20, 97], "extern": [20, 56], "extra": 47, "extrins": 42, "f2": 84, "factor": 10, "fail": 97, "faith": 21, "fd": 87, "featur": 83, "fft": [22, 45, 58], "fft_callback": 58, "fftw": 58, "fftw_prune": 58, "fftw_pruned_cython": 58, "fgmc_function": 71, "fgmc_laguerr": 71, "fgmc_plot": 71, "file": [10, 17, 18, 21, 24, 25, 28, 30, 32, 41, 47, 51, 80, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "filter": [23, 59, 89, 94], "find": [14, 86, 91], "fir": 23, "fit": 10, "fix": 81, "fixedsampl": 56, "flag": [14, 100], "followup": 73, "frame": [15, 25, 60, 80], "frequenc": 87, "frequencyseri": 76, "from": [12, 17, 28, 36, 47, 51, 97, 99, 100], "full": [42, 45, 99], "func_api": 58, "function": 22, "game": 65, "gate": 74, "gated_gaussian_nois": 64, "gaussian": [33, 50, 56, 70], "gaussian_nois": 64, "gelman_rubin": 61, "gener": [10, 17, 21, 28, 42, 50, 51, 78, 84, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 102], "geometr": 84, "get": [29, 95, 96], "gewek": 61, "github": [11, 81], "global": 92, "gp": 97, "gracedb": [67, 86], "graphic": 45, "gravit": [12, 15, 25, 29, 80, 97], "grb": 99, "grb_util": 79, "grid": 97, "ground": 55, "guidelin": [41, 43], "gw": 87, "gw150914": [27, 33, 37, 96], "gw170814": 96, "gwosc": 60, "ha": 14, "handl": 51, "hanford": 27, "hardwar": [14, 28], "have": [12, 99], "hdf": [24, 67], "hdf5": 91, "help": 45, "heterodyn": 42, "hierarch": [34, 64], "highpass": 23, "how": [21, 28, 41, 43, 99], "hybrid": 84, "i": [14, 84, 87, 99], "ian": 84, "ie": 84, "ifo": 100, "igwn": 45, "imr": 84, "includ": 87, "index": 26, "infer": [13, 17, 30, 41, 42, 61, 62, 63, 64, 65, 95, 96], "inference_followup": 79, "inform": 12, "inherit": [41, 43], "ini": [17, 21, 92, 99, 100], "inject": [14, 28, 32, 35, 66, 79, 80, 89, 91, 93, 95], "injfilterrejector": 66, "input": 86, "inspir": [24, 89, 94], "instal": [29, 45, 46, 47, 48], "instruct": [46, 93, 94, 101, 102], "instrument": 14, "intel": 45, "interact": 85, "interfac": 92, "introduct": [10, 21, 22, 25, 28, 30, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102], "io": [41, 62, 67], "issu": 10, "iter": 44, "jobsetup": 79, "joint": 56, "jump": 63, "jupyt": 18, "kei": [12, 18], "keyword": 83, "known": 10, "lalapps_cbc_sbank": 84, "lalapps_inspinj": [28, 93], "lalapps_inspiral_ahop": 94, "lalapps_tmpltbank_ahop": 102, "lalsimul": 51, "lalsuit": 47, "lambda_map": 75, "lattice_util": 75, "layout": 73, "ldc": 36, "ldg": 45, "ldr": [25, 28], "lens": 34, "librari": [45, 85], "libutil": 52, "light": 15, "ligolw": 67, "limit": 91, "line": [28, 74, 84, 92], "lisa": [35, 36], "listen": 27, "live": [67, 68], "live_pastro": 71, "live_pastro_util": 71, "locat": [15, 17, 92], "lowpass": 23, "m1": 17, "m2": 17, "macro": 92, "make": [17, 44, 88], "margin": [37, 40], "marginalized_gaussian_nois": 64, "mass": [17, 56], "mass1": 17, "mass2": 17, "match": [23, 84, 87, 89, 94], "matched_filt": [79, 94], "matchedfilt": [59, 94], "matchedfilter_cpu": 59, "matchedfilter_cupi": 59, "matchedfilter_numpi": 59, "mchirp": 17, "mchirp_area": 52, "merger": 12, "metadata": 73, "method": [22, 25, 89], "metric": 84, "minifollowup": 79, "mkl": [45, 58], "mode": 87, "model": [30, 33, 34, 37, 38, 40, 42, 64, 88], "modul": [19, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 89, 90, 92, 93, 94, 100, 101, 102], "monitor": [97, 99], "more": 14, "movi": 44, "mpld3_util": 73, "multiband": 78, "multinest": [39, 62, 65], "multipl": 87, "my": 99, "nessai": [39, 62, 65], "nest": 40, "neutron_star": 69, "new": [88, 97], "nltide": 78, "nois": [27, 33, 50, 70, 98], "non": 84, "normal": 63, "notebook": 18, "npfft": 58, "number": 100, "observ": 12, "obtain": [47, 89, 100], "one": 87, "ones": 15, "onli": 42, "open": 97, "oper": 80, "opt": 52, "optim": 45, "option": [46, 84, 91, 92], "option_util": [61, 75], "optpars": 76, "other": [45, 90, 92], "out": [39, 47], "output": [28, 30], "over": 40, "overrid": [15, 92], "overview": [30, 41, 43, 44, 84, 89], "own": 99, "packag": [19, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "pad": 100, "page": [11, 95, 96], "parallel": 39, "paramet": [30, 35, 36, 40, 42, 78, 95, 96], "parser_support": 58, "partial": 97, "partitioned_bank": 75, "pass": 15, "pattern": 15, "pegasu": [97, 99], "pegasus_sit": 79, "pegasus_workflow": 79, "perform": 22, "pg_isso_solv": 69, "phase": 87, "pip": 48, "placement": 84, "plan": [95, 96, 97, 99], "plot": [12, 27, 28, 44, 73, 79, 87, 91, 99], "plugin": [20, 78, 88], "pnutil": 52, "pool": 52, "popul": 71, "population_model": 71, "posterior": [30, 41, 44, 62], "power": 29, "power_law": 56, "pre": 100, "premerg": 78, "prerequisit": 97, "previou": [81, 97, 99], "prior": [30, 99], "procedur": 10, "process": [27, 45], "product": [10, 45, 97, 99], "profil": 99, "project": [11, 15], "provid": 100, "psd": [28, 51, 72, 73, 79], "psdfile": 79, "ptemce": [39, 62, 65], "public": 13, "push": 11, "pycbc": [13, 17, 18, 19, 20, 22, 24, 29, 30, 42, 45, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 89, 90, 92, 93, 94, 100, 101, 102], "pycbc_aligned_stoch_bank": 84, "pycbc_condition_strain": 80, "pycbc_generate_hwinj": 28, "pycbc_generate_hwinj_from_xml": 28, "pycbc_geom_aligned_bank": 84, "pycbc_geom_nonspinbank": [84, 102], "pycbc_inference_plot_movi": 44, "pycbc_inference_plot_posterior": 44, "pycbc_inspir": [28, 94], "pycbc_make_inference_inj_workflow": 95, "pycbc_make_inference_workflow": 96, "pycbc_make_offline_grb_workflow": 99, "pycbc_make_offline_search_workflow": 97, "pycbc_make_psd_estimation_workflow": 98, "pycbc_phenomc_tmplt": 78, "pycbc_plot_hwinj": 28, "pycbc_splitbank": 101, "pygrb_plotting_util": 73, "pygrb_postprocessing_util": 73, "python": 17, "q": 17, "qnm": 56, "qtransform": 59, "queri": [14, 25, 28], "quickstart": 40, "rank": [57, 83], "rate": 52, "rates_funct": 71, "re": 97, "read": [25, 51, 72], "recalibr": 74, "recommend": 84, "record": 67, "recov": 28, "refer": 24, "refin": 65, "region": 24, "rel": [38, 42], "relat": 45, "relbin": 64, "relbin_cpu": 64, "releas": 81, "render": 73, "reproduc": 70, "requir": [86, 92], "resampl": 59, "reserv": 24, "result": [10, 21, 73, 95, 96], "reus": [97, 99], "ringdown": 78, "run": [18, 28, 31, 32, 86, 97, 98, 99], "sampl": [17, 40, 44], "sampler": [30, 39, 40, 41, 43, 65], "save": 51, "sbank": 84, "scale_inject": 71, "scatter_histogram": 73, "scenario": 45, "scheme": 52, "scienc": 97, "scientif": 13, "script": [17, 19, 88], "search": [13, 82, 83, 97], "section": [90, 92, 93, 94, 99, 101, 102], "segment": [28, 79, 89, 100], "select": [28, 87, 99], "sensit": [52, 91], "seri": [23, 51, 81], "server": [25, 28], "set": [30, 48, 97, 99], "setup": [32, 90, 93, 94, 95, 96, 100, 101, 102], "sgchisq": 77, "share": 18, "sharedopt": 92, "shorter": 80, "should": 84, "signal": [15, 27, 80], "signific": 57, "significance_fit": 68, "simd_correl": 59, "simd_correlate_cython": 59, "simd_threshold_cython": 57, "simpl": 45, "simul": [32, 36, 80], "sinegauss": 78, "singl": [24, 40, 57], "single_templ": 64, "sky": 17, "sky_grid": 75, "sky_loc": 56, "smbhb": [35, 36], "snowlin": [39, 62, 65], "snr": [23, 73], "snr_optim": 68, "softwar": [13, 28], "some": [12, 84], "sourc": [15, 47, 84], "spa_tmplt": 78, "spa_tmplt_cpu": 78, "spa_tmplt_cupi": 78, "space": [54, 55], "special": 92, "specif": [22, 24, 44], "sphinx": 19, "spin": [17, 56, 84], "split": [80, 89, 101], "splittabl": [79, 101], "ssh": 18, "standard": [42, 99], "start": 29, "stat": 57, "static": 30, "statist": [12, 83, 91], "stochast": 84, "store": 60, "str_util": 73, "strain": [27, 74, 80], "submit": [97, 99], "submodul": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "subpackag": [52, 61], "subsect": 92, "subset": 40, "supernova": 78, "supervis": 68, "suppli": 92, "support": [45, 46, 93, 94, 101, 102], "syntax": 100, "tabl": [89, 101], "table_util": 73, "td": 87, "temper": 39, "templat": [10, 40, 84, 89, 102], "them": [93, 94, 101, 102], "thin": 44, "threshold_cpu": 57, "threshold_cupi": 57, "through": 15, "time": [14, 15, 23, 28, 37, 50, 51, 87, 97, 100], "timeseri": 76, "tmpltbank": [75, 79, 84, 102], "togeth": 87, "tool": 64, "transform": [30, 52], "travel": 15, "trigger": [24, 57, 86, 94, 99], "trigger_fit": 57, "try": 39, "tutori": 85, "txt": 62, "type": 76, "ultranest": [39, 62, 65], "under": 18, "understand": [10, 21], "uniform": [17, 56], "uniform_log": 56, "unit": 45, "up": [48, 97, 99], "upload": 86, "us": [13, 17, 18, 22, 24, 34, 38, 40, 45, 83, 84, 93, 94, 97, 101, 102], "usag": [90, 93, 94, 100, 101, 102], "user": 18, "util": [56, 78], "utils_cpu": 78, "utils_cupi": 78, "valid": [10, 14, 90, 100], "variat": 72, "vector": 24, "version": [47, 52, 73, 79, 100], "veto": [57, 77, 97, 100], "virtual": 47, "virtualenv": [45, 48], "visual": 30, "want": [84, 99], "wave": [12, 15, 25, 29, 80, 97], "waveform": [28, 30, 42, 78, 87, 88], "waveform_mod": 78, "we": 12, "what": [14, 87], "which": [12, 84, 87, 92], "whiten": 27, "within": [18, 24, 88], "workflow": [9, 10, 21, 24, 30, 79, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "world": 84, "write": 25, "xml": 100, "xxx": 92, "ye": 99, "you": 99, "your": 47, "zpk": 59}})