;==============================================================================
;
;                         Standard BBH Prior
;
;==============================================================================
;
; This configuration file provides a standard prior for binary-black holes
; (BBH). It uses a uniform prior on *source* masses, along with a uniform
; prior in comoving volume. Waveform transforms are included to convert the
; source masses into detector-frame masses using a standard cosmology
; (Planck 2015). The minimum and maximum volumes used correspond to a
; luminosity distances of ~10Mpc and ~1.5Gpc, respectively. It can therefore
; be used with BBH in O1-O2. To use for future detectors, simply change the
; volume limits.
;
; The coa_phase is not varied, so this has to be used with a model that
; marginalizes the phase automatically (e.g. the mariginalized_phase or relbin
; models). If you are not using a model that marginalizes the phase, uncomment
; the coa_phase in the [variable_params], along with the [prior-coa_phase]
; section.
;
; The mass range used is 10-80, and so is fine for GW150914-like BBH. For
; more lower-mass BBH, the prior range should be decreased. Keep in mind
; that lowering the mass prior increases the duration of the longest waveform
; admitted by the prior (meaning that you may need to change your
; analysis-start-time in your data section if you do that).
;
; The starting frequency of the waveform approximant is set to 20Hz (the
; f_lower and f_ref settings in the [static_params]). This is OK to use
; for the O1-O3 LIGO and Virgo detectors. With this lower-frequency cutoff
; and the lower-bound of the mass prior of 10, the longest waveform that may
; be generated is ~6s. Suggested analysis-start and end-time settings are -6
; and 2 (with respect to the trigger-time), respectively.
;
; You may wish to lower the lower frequency cutoff for future detectors,
; in which the PSD has better lower-frequency performance.
; Keep in mind that decreasing the lower-frequency cutoff will make the
; waveforms have longer duration in the time domain, and so the analysis
; start time will need to be adjusted.
;
; No [data], [model], or [sampler] sections are provided here. This should be
; in used in tandem with additional configuration files that provide those
; sections.

[variable_params]
delta_tc = 
; Note that we call the masses srcmass[X]. This is because the waveform
; generator assumes that parameters called mass[X] are detector-frame masses.
; We therefore need to call the source masses something different; we choose
; "srcmass" here, but they could be called anything. In the waveform transforms
; sections below, we convert these to detector-frame masses.
srcmass1 = 
srcmass2 = 
spin1_a = 
spin1_azimuthal = 
spin1_polar = 
spin2_a = 
spin2_azimuthal = 
spin2_polar = 
comoving_volume = 
inclination = 
polarization = 
ra = 
dec = 
; Uncomment this if you are not using a model that marginalizes over phase.
;coa_phase =

[static_params]
approximant = IMRPhenomPv2
f_lower = 20
f_ref = 20
; The trigger time is used with delta_tc to get the coalescence time tc. We'll
; get the trigger time from the data section (provided in a separate file).
trigger_time = ${data|trigger-time}

;-----------------------------------------------------------------------------
;
;                           Intrinsic parameters
;
;-----------------------------------------------------------------------------

[prior-srcmass1]
name = uniform
min-srcmass1 = 10
max-srcmass1 = 80

[prior-srcmass2]
name = uniform
min-srcmass2 = 10
max-srcmass2 = 80

[prior-spin1_a]
name = uniform
min-spin1_a = 0.0
max-spin1_a = 0.99

[prior-spin1_polar+spin1_azimuthal]
name = uniform_solidangle
polar-angle = spin1_polar
azimuthal-angle = spin1_azimuthal

[prior-spin2_a]
name = uniform
min-spin2_a = 0.0
max-spin2_a = 0.99

[prior-spin2_polar+spin2_azimuthal]
name = uniform_solidangle
polar-angle = spin2_polar
azimuthal-angle = spin2_azimuthal

; The waveform generator expects spins to be in cartesian coordinates, with
; names spin(1|2)(x|y|z). We therefore need to provide a waveform transform
; that converts the spherical coordinates that we have defined the spin prior
; in to cartesian coordinates.
[waveform_transforms-spin1x+spin1y+spin1z]
name = spherical_to_cartesian
x = spin1x
y = spin1y
z = spin1z
radial = spin1_a
polar = spin1_polar
azimuthal = spin1_azimuthal

[waveform_transforms-spin2x+spin2y+spin2z]
name = spherical_to_cartesian
x = spin2x
y = spin2y
z = spin2z
radial = spin2_a
polar = spin2_polar
azimuthal = spin2_azimuthal

;-----------------------------------------------------------------------------
;
;                           Extrinsic parameters
;
;-----------------------------------------------------------------------------

[prior-delta_tc]
name = uniform
; We'll use +/-0.1s around the estimated coalescence (trigger) time.
min-delta_tc = -0.1
max-delta_tc = 0.1

[waveform_transforms-tc]
; The waveform generator needs tc, which we calculate here.
name = custom
inputs = trigger_time, delta_tc
tc = trigger_time + delta_tc

[prior-inclination]
name = sin_angle

; Uncomment this section if you are not using a model that marginalizes over
; the phase.
;[prior-coa_phase]
;name = uniform_angle

[prior-ra+dec]
name = uniform_sky

[prior-polarization]
name = uniform_angle

[prior-comoving_volume]
name = uniform
; These limits correspond to luminosity distances of ~[10, 1500) Mpc. Change
; if you are analyzing detections which are more than ~1Gpc away.
min-comoving_volume = 5e3
max-comoving_volume = 9e9

; The following [waveform_transforms] sections convert the comoving volume
; to luminosity distance and the source masses to detector frame masses.
; The latter is done by calculating redshift from the comoving volume first.
; The order that transforms need to be applied is figured out automatically by
; the code, so it doesn't matter what order we put them here, as long as we
; provide transforms for all intermediate steps.
[waveform_transforms-redshift]
name = custom
inputs = comoving_volume
redshift = redshift_from_comoving_volume(comoving_volume)

[waveform_transforms-distance]
name = custom
inputs = comoving_volume
distance = distance_from_comoving_volume(comoving_volume)

[waveform_transforms-mass1]
name = custom
inputs = srcmass1, redshift
mass1 = srcmass1 * (1 + redshift)

[waveform_transforms-mass2]
name = custom
inputs = srcmass2, redshift
mass2 = srcmass2 * (1 + redshift)
